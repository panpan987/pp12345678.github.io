<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>吃豆人游戏</title>
      <link href="2021/07/15/%E5%90%83%E8%B1%86%E4%BA%BA%E6%B8%B8%E6%88%8F/"/>
      <url>2021/07/15/%E5%90%83%E8%B1%86%E4%BA%BA%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<p>index.html:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>html5 pacman吃豆人游戏代码<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">body</span>&#123;<span class="attribute">background-color</span>: <span class="number">#292929</span>&#125;</span></span><br><span class="line"><span class="css">*&#123;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">margin</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line">.wrapper&#123;</span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">960px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">margin</span>:<span class="number">0</span> auto;</span></span><br><span class="line"><span class="css"><span class="attribute">line-height</span>:<span class="number">36px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">text-align</span>:center;</span></span><br><span class="line"><span class="css"><span class="attribute">color</span>:<span class="number">#999</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-tag">canvas</span>&#123;<span class="attribute">display</span>:block;<span class="attribute">background</span>: <span class="number">#000</span>;&#125;</span></span><br><span class="line">.mod-botton&#123;</span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">32px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">text-align</span>: center;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/demos/googlegg.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span> <span class="attr">width</span>=<span class="string">&quot;960&quot;</span> <span class="attr">height</span>=<span class="string">&quot;640&quot;</span>&gt;</span>不支持画布<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>按［空格］暂停或继续<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;game.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin:50px 0; font:normal 14px/24px &#x27;MicroSoft YaHei&#x27;;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>game.js:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 小型游戏引擎</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// requestAnimationFrame polyfill</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Date</span>.now)</span><br><span class="line"><span class="built_in">Date</span>.now = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(); &#125;;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    &#x27;use strict&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> vendors = [<span class="string">&#x27;webkit&#x27;</span>, <span class="string">&#x27;moz&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; vendors.length &amp;&amp; !<span class="built_in">window</span>.requestAnimationFrame; ++i) &#123;</span><br><span class="line">        <span class="keyword">var</span> vp = vendors[i];</span><br><span class="line">        <span class="built_in">window</span>.requestAnimationFrame = <span class="built_in">window</span>[vp+<span class="string">&#x27;RequestAnimationFrame&#x27;</span>];</span><br><span class="line">        <span class="built_in">window</span>.cancelAnimationFrame = (<span class="built_in">window</span>[vp+<span class="string">&#x27;CancelAnimationFrame&#x27;</span>] || <span class="built_in">window</span>[vp+<span class="string">&#x27;CancelRequestAnimationFrame&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/iP(ad|hone|od).*OS 6/</span>.test(<span class="built_in">window</span>.navigator.userAgent) <span class="comment">// iOS6 is buggy</span></span><br><span class="line">    || !<span class="built_in">window</span>.requestAnimationFrame || !<span class="built_in">window</span>.cancelAnimationFrame) &#123;</span><br><span class="line">        <span class="keyword">var</span> lastTime = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">window</span>.requestAnimationFrame = <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> now = <span class="built_in">Date</span>.now();</span><br><span class="line">            <span class="keyword">var</span> nextTime = <span class="built_in">Math</span>.max(lastTime + <span class="number">16</span>, now);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; callback(lastTime = nextTime); &#125;,</span><br><span class="line">            nextTime - now);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">window</span>.cancelAnimationFrame = <span class="built_in">clearTimeout</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;());</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Game</span>(<span class="params">id,params</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _ = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">var</span> settings = &#123;</span><br><span class="line">        width:<span class="number">960</span>,<span class="comment">//画布宽度</span></span><br><span class="line">        height:<span class="number">640</span><span class="comment">//画布高度</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> _extend = <span class="function"><span class="keyword">function</span>(<span class="params">target,settings,params</span>)</span>&#123;</span><br><span class="line">        params = params||&#123;&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> settings)&#123;</span><br><span class="line">            target[i] = params[i]||settings[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> target;</span><br><span class="line">    &#125;;</span><br><span class="line">    _extend(_,settings,params);</span><br><span class="line">    <span class="keyword">var</span> $canvas = <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">    $canvas.width = _.width;</span><br><span class="line">    $canvas.height = _.height;</span><br><span class="line">    <span class="keyword">var</span> _context = $canvas.getContext(<span class="string">&#x27;2d&#x27;</span>);<span class="comment">//画布上下文环境</span></span><br><span class="line">    <span class="keyword">var</span> _stages = [];<span class="comment">//布景对象队列</span></span><br><span class="line">    <span class="keyword">var</span> _events = &#123;&#125;;<span class="comment">//事件集合</span></span><br><span class="line">    <span class="keyword">var</span> _index=<span class="number">0</span>,<span class="comment">//当前布景索引</span></span><br><span class="line">        _hander;  <span class="comment">//帧动画控制</span></span><br><span class="line">    <span class="comment">//活动对象构造</span></span><br><span class="line">    <span class="keyword">var</span> Item = <span class="function"><span class="keyword">function</span>(<span class="params">params</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._params = params||&#123;&#125;;</span><br><span class="line">        <span class="built_in">this</span>._id = <span class="number">0</span>;               <span class="comment">//标志符</span></span><br><span class="line">        <span class="built_in">this</span>._stage = <span class="literal">null</span>;         <span class="comment">//与所属布景绑定</span></span><br><span class="line">        <span class="built_in">this</span>._settings = &#123;</span><br><span class="line">            x:<span class="number">0</span>,<span class="comment">//位置坐标:横坐标</span></span><br><span class="line">            y:<span class="number">0</span>,<span class="comment">//位置坐标:纵坐标</span></span><br><span class="line">            width:<span class="number">20</span>,<span class="comment">//宽</span></span><br><span class="line">            height:<span class="number">20</span>,<span class="comment">//高</span></span><br><span class="line">            type:<span class="number">0</span>,<span class="comment">//对象类型,0表示普通对象(不与地图绑定),1表示玩家控制对象,2表示程序控制对象</span></span><br><span class="line">            color:<span class="string">&#x27;#F00&#x27;</span>,<span class="comment">//标识颜色</span></span><br><span class="line">            status:<span class="number">1</span>,<span class="comment">//对象状态,0表示未激活/结束,1表示正常,2表示暂停,3表示临时,4表示异常</span></span><br><span class="line">            orientation:<span class="number">0</span>,<span class="comment">//当前定位方向,0表示右,1表示下,2表示左,3表示上</span></span><br><span class="line">            speed:<span class="number">0</span>,<span class="comment">//移动速度</span></span><br><span class="line">            <span class="comment">//地图相关</span></span><br><span class="line">            location:<span class="literal">null</span>,<span class="comment">//定位地图,Map对象</span></span><br><span class="line">            coord:<span class="literal">null</span>,<span class="comment">//如果对象与地图绑定,需设置地图坐标;若不绑定,则设置位置坐标</span></span><br><span class="line">            path:[],<span class="comment">//NPC自动行走的路径</span></span><br><span class="line">            vector:<span class="literal">null</span>,<span class="comment">//目标坐标</span></span><br><span class="line">            <span class="comment">//布局相关</span></span><br><span class="line">            frames:<span class="number">1</span>,<span class="comment">//速度等级,内部计算器times多少帧变化一次</span></span><br><span class="line">            times:<span class="number">0</span>,<span class="comment">//刷新画布计数(用于循环动画状态判断)</span></span><br><span class="line">            timeout:<span class="number">0</span>,<span class="comment">//倒计时(用于过程动画状态判断)</span></span><br><span class="line">            control:&#123;&#125;,<span class="comment">//控制缓存,到达定位点时处理</span></span><br><span class="line">            update:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;, <span class="comment">//更新参数信息</span></span><br><span class="line">            draw:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//绘制</span></span><br><span class="line">        &#125;;</span><br><span class="line">        _extend(<span class="built_in">this</span>,<span class="built_in">this</span>._settings,<span class="built_in">this</span>._params);</span><br><span class="line">    &#125;;</span><br><span class="line">    Item.prototype.bind = <span class="function"><span class="keyword">function</span>(<span class="params">eventType,callback</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!_events[eventType])&#123;</span><br><span class="line">            _events[eventType] = &#123;&#125;;</span><br><span class="line">            $canvas.addEventListener(eventType,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> position = _.getPosition(e);</span><br><span class="line">                _stages[_index].items.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="built_in">Math</span>.abs(position.x-item.x)&lt;item.width/<span class="number">2</span>&amp;&amp;<span class="built_in">Math</span>.abs(position.y-item.y)&lt;item.height/<span class="number">2</span>)&#123;</span><br><span class="line">                        <span class="keyword">var</span> key = <span class="string">&#x27;s&#x27;</span>+_index+<span class="string">&#x27;i&#x27;</span>+item._id;</span><br><span class="line">                        <span class="keyword">if</span>(_events[eventType][key])&#123;</span><br><span class="line">                            _events[eventType][key](e);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                e.preventDefault();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        _events[eventType][<span class="string">&#x27;s&#x27;</span>+<span class="built_in">this</span>._stage.index+<span class="string">&#x27;i&#x27;</span>+<span class="built_in">this</span>._id] = callback.bind(<span class="built_in">this</span>);  <span class="comment">//绑定作用域</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//地图对象构造器</span></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">Map</span> = <span class="function"><span class="keyword">function</span>(<span class="params">params</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._params = params||&#123;&#125;;</span><br><span class="line">        <span class="built_in">this</span>._id = <span class="number">0</span>;               <span class="comment">//标志符</span></span><br><span class="line">        <span class="built_in">this</span>._stage = <span class="literal">null</span>;         <span class="comment">//与所属布景绑定</span></span><br><span class="line">        <span class="built_in">this</span>._settings = &#123;</span><br><span class="line">            x:<span class="number">0</span>,<span class="comment">//地图起点坐标</span></span><br><span class="line">            y:<span class="number">0</span>,</span><br><span class="line">            size:<span class="number">20</span>,<span class="comment">//地图单元的宽度</span></span><br><span class="line">            data:[],<span class="comment">//地图数据</span></span><br><span class="line">            x_length:<span class="number">0</span>,<span class="comment">//二维数组x轴长度</span></span><br><span class="line">            y_length:<span class="number">0</span>,<span class="comment">//二维数组y轴长度</span></span><br><span class="line">            frames:<span class="number">1</span>,<span class="comment">//速度等级,内部计算器times多少帧变化一次</span></span><br><span class="line">            times:<span class="number">0</span>,<span class="comment">//刷新画布计数(用于循环动画状态判断)</span></span><br><span class="line">            cache:<span class="literal">false</span>,    <span class="comment">//是否静态（如静态则设置缓存）</span></span><br><span class="line">            update:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,<span class="comment">//更新地图数据</span></span><br><span class="line">            draw:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,<span class="comment">//绘制地图</span></span><br><span class="line">        &#125;;</span><br><span class="line">        _extend(<span class="built_in">this</span>,<span class="built_in">this</span>._settings,<span class="built_in">this</span>._params);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//获取地图上某点的值</span></span><br><span class="line">    <span class="built_in">Map</span>.prototype.get = <span class="function"><span class="keyword">function</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.data[y]&amp;&amp;<span class="keyword">typeof</span> <span class="built_in">this</span>.data[y][x]!=<span class="string">&#x27;undefined&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.data[y][x];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//设置地图上某点的值</span></span><br><span class="line">    <span class="built_in">Map</span>.prototype.set = <span class="function"><span class="keyword">function</span>(<span class="params">x,y,value</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.data[y])&#123;</span><br><span class="line">            <span class="built_in">this</span>.data[y][x] = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//地图坐标转画布坐标</span></span><br><span class="line">    <span class="built_in">Map</span>.prototype.coord2position = <span class="function"><span class="keyword">function</span>(<span class="params">cx,cy</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            x:<span class="built_in">this</span>.x+cx*<span class="built_in">this</span>.size+<span class="built_in">this</span>.size/<span class="number">2</span>,</span><br><span class="line">            y:<span class="built_in">this</span>.y+cy*<span class="built_in">this</span>.size+<span class="built_in">this</span>.size/<span class="number">2</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//画布坐标转地图坐标</span></span><br><span class="line">    <span class="built_in">Map</span>.prototype.position2coord = <span class="function"><span class="keyword">function</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> fx = <span class="built_in">Math</span>.abs(x-<span class="built_in">this</span>.x)%<span class="built_in">this</span>.size-<span class="built_in">this</span>.size/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">var</span> fy = <span class="built_in">Math</span>.abs(y-<span class="built_in">this</span>.y)%<span class="built_in">this</span>.size-<span class="built_in">this</span>.size/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            x:<span class="built_in">Math</span>.floor((x-<span class="built_in">this</span>.x)/<span class="built_in">this</span>.size),</span><br><span class="line">            y:<span class="built_in">Math</span>.floor((y-<span class="built_in">this</span>.y)/<span class="built_in">this</span>.size),</span><br><span class="line">            offset:<span class="built_in">Math</span>.sqrt(fx*fx+fy*fy)</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//寻址算法</span></span><br><span class="line">    <span class="built_in">Map</span>.prototype.finder = <span class="function"><span class="keyword">function</span>(<span class="params">params</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> defaults = &#123;</span><br><span class="line">            map:<span class="literal">null</span>,</span><br><span class="line">            start:&#123;&#125;,</span><br><span class="line">            end:&#123;&#125;,</span><br><span class="line">            type:<span class="string">&#x27;path&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> options = _extend(&#123;&#125;,defaults,params);</span><br><span class="line">        <span class="keyword">if</span>(options.map[options.start.y][options.start.x]||options.map[options.end.y][options.end.x])&#123; <span class="comment">//当起点或终点设置在墙上</span></span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> finded = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">var</span> result = [];</span><br><span class="line">        <span class="keyword">var</span> y_length  = options.map.length;</span><br><span class="line">        <span class="keyword">var</span> x_length = options.map[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">var</span> steps = [];     <span class="comment">//步骤的映射</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> y=y_length;y--;)&#123;</span><br><span class="line">            steps[y] = <span class="keyword">new</span> <span class="built_in">Array</span>(x_length).fill(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> _getValue = <span class="function"><span class="keyword">function</span>(<span class="params">x,y</span>)</span>&#123;  <span class="comment">//获取地图上的值</span></span><br><span class="line">            <span class="keyword">if</span>(options.map[y]&amp;&amp;<span class="keyword">typeof</span> options.map[y][x]!=<span class="string">&#x27;undefined&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> options.map[y][x];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> _next = <span class="function"><span class="keyword">function</span>(<span class="params">to</span>)</span>&#123; <span class="comment">//判定是否可走,可走放入列表</span></span><br><span class="line">            <span class="keyword">var</span> value = _getValue(to.x,to.y);</span><br><span class="line">            <span class="keyword">if</span>(value&lt;<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(value==-<span class="number">1</span>)&#123;</span><br><span class="line">                    to.x = (to.x+x_length)%x_length;</span><br><span class="line">                    to.y = (to.y+y_length)%y_length;</span><br><span class="line">                    to.change = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!steps[to.y][to.x])&#123;</span><br><span class="line">                    result.push(to);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">var</span> _render = <span class="function"><span class="keyword">function</span>(<span class="params">list</span>)</span>&#123;<span class="comment">//找线路</span></span><br><span class="line">            <span class="keyword">var</span> new_list = [];</span><br><span class="line">            <span class="keyword">var</span> next = <span class="function"><span class="keyword">function</span>(<span class="params"><span class="keyword">from</span>,to</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> value = _getValue(to.x,to.y);</span><br><span class="line">                <span class="keyword">if</span>(value&lt;<span class="number">1</span>)&#123;<span class="comment">//当前点是否可以走</span></span><br><span class="line">                    <span class="keyword">if</span>(value==-<span class="number">1</span>)&#123;</span><br><span class="line">                        to.x = (to.x+x_length)%x_length;</span><br><span class="line">                        to.y = (to.y+y_length)%y_length;</span><br><span class="line">                        to.change = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(to.x==options.end.x&amp;&amp;to.y==options.end.y)&#123;</span><br><span class="line">                        steps[to.y][to.x] = <span class="keyword">from</span>;</span><br><span class="line">                        finded = <span class="literal">true</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!steps[to.y][to.x])&#123;</span><br><span class="line">                        steps[to.y][to.x] = <span class="keyword">from</span>;</span><br><span class="line">                        new_list.push(to);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            list.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">current</span>)</span>&#123;</span><br><span class="line">next(current,&#123;<span class="attr">y</span>:current.y+<span class="number">1</span>,<span class="attr">x</span>:current.x&#125;);</span><br><span class="line">                next(current,&#123;<span class="attr">y</span>:current.y,<span class="attr">x</span>:current.x+<span class="number">1</span>&#125;);</span><br><span class="line">                next(current,&#123;<span class="attr">y</span>:current.y-<span class="number">1</span>,<span class="attr">x</span>:current.x&#125;);</span><br><span class="line">                next(current,&#123;<span class="attr">y</span>:current.y,<span class="attr">x</span>:current.x-<span class="number">1</span>&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span>(!finded&amp;&amp;new_list.length)&#123;</span><br><span class="line">                _render(new_list);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        _render([options.start]);</span><br><span class="line">        <span class="keyword">if</span>(finded)&#123;</span><br><span class="line">            <span class="keyword">var</span> current=options.end;</span><br><span class="line">            <span class="keyword">if</span>(options.type==<span class="string">&#x27;path&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">while</span>(current.x!=options.start.x||current.y!=options.start.y)&#123;</span><br><span class="line">                    result.unshift(current);</span><br><span class="line">                    current=steps[current.y][current.x];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(options.type==<span class="string">&#x27;next&#x27;</span>)&#123;</span><br><span class="line">                _next(&#123;<span class="attr">x</span>:current.x+<span class="number">1</span>,<span class="attr">y</span>:current.y&#125;);</span><br><span class="line">                _next(&#123;<span class="attr">x</span>:current.x,<span class="attr">y</span>:current.y+<span class="number">1</span>&#125;);</span><br><span class="line">                _next(&#123;<span class="attr">x</span>:current.x-<span class="number">1</span>,<span class="attr">y</span>:current.y&#125;);</span><br><span class="line">                _next(&#123;<span class="attr">x</span>:current.x,<span class="attr">y</span>:current.y-<span class="number">1</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//布景对象构造器</span></span><br><span class="line">    <span class="keyword">var</span> Stage = <span class="function"><span class="keyword">function</span>(<span class="params">params</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>._params = params||&#123;&#125;;</span><br><span class="line">        <span class="built_in">this</span>._settings = &#123;</span><br><span class="line">            index:<span class="number">0</span>,                        <span class="comment">//布景索引</span></span><br><span class="line">            status:<span class="number">0</span>,<span class="comment">//布景状态,0表示未激活/结束,1表示正常,2表示暂停,3表示临时,4表示异常</span></span><br><span class="line">            maps:[],<span class="comment">//地图队列</span></span><br><span class="line">            audio:[],<span class="comment">//音频资源</span></span><br><span class="line">            images:[],<span class="comment">//图片资源</span></span><br><span class="line">            items:[],<span class="comment">//对象队列</span></span><br><span class="line">            timeout:<span class="number">0</span>,<span class="comment">//倒计时(用于过程动画状态判断)</span></span><br><span class="line">            update:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;<span class="comment">//嗅探,处理布局下不同对象的相对关系</span></span><br><span class="line">        &#125;;</span><br><span class="line">        _extend(<span class="built_in">this</span>,<span class="built_in">this</span>._settings,<span class="built_in">this</span>._params);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//添加对象</span></span><br><span class="line">    Stage.prototype.createItem = <span class="function"><span class="keyword">function</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> item = <span class="keyword">new</span> Item(options);</span><br><span class="line">        <span class="comment">//动态属性</span></span><br><span class="line">        <span class="keyword">if</span>(item.location)&#123;</span><br><span class="line">            <span class="keyword">var</span> position = item.location.coord2position(item.coord.x,item.coord.y);</span><br><span class="line">            item.x = position.x;</span><br><span class="line">            item.y = position.y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关系绑定</span></span><br><span class="line">        item._stage = <span class="built_in">this</span>;</span><br><span class="line">        item._id = <span class="built_in">this</span>.items.length;</span><br><span class="line">        <span class="built_in">this</span>.items.push(item);</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//重置物体位置</span></span><br><span class="line">    Stage.prototype.resetItems = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.status = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">this</span>.items.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">            _extend(item,item._settings,item._params);</span><br><span class="line">            <span class="keyword">if</span>(item.location)&#123;</span><br><span class="line">                <span class="keyword">var</span> position = item.location.coord2position(item.coord.x,item.coord.y);</span><br><span class="line">                item.x = position.x;</span><br><span class="line">                item.y = position.y;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//获取对象列表</span></span><br><span class="line">    Stage.prototype.getItemsByType = <span class="function"><span class="keyword">function</span>(<span class="params">type</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.items.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(item.type==type)&#123;</span><br><span class="line">                <span class="keyword">return</span> item;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//添加地图</span></span><br><span class="line">    Stage.prototype.createMap = <span class="function"><span class="keyword">function</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>(options);</span><br><span class="line">        <span class="comment">//动态属性</span></span><br><span class="line">        map.data = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(map._params.data));</span><br><span class="line">        map.y_length = map.data.length;</span><br><span class="line">        map.x_length = map.data[<span class="number">0</span>].length;</span><br><span class="line">        map.imageData = <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//关系绑定</span></span><br><span class="line">        map._stage = <span class="built_in">this</span>;</span><br><span class="line">        map._id = <span class="built_in">this</span>.maps.length;</span><br><span class="line">        <span class="built_in">this</span>.maps.push(map);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//重置地图</span></span><br><span class="line">    Stage.prototype.resetMaps = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.status = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">this</span>.maps.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">map</span>)</span>&#123;</span><br><span class="line">            _extend(map,map._settings,map._params);</span><br><span class="line">            map.data = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(map._params.data));</span><br><span class="line">            map.y_length = map.data.length;</span><br><span class="line">            map.x_length = map.data[<span class="number">0</span>].length;</span><br><span class="line">            map.imageData = <span class="literal">null</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//重置</span></span><br><span class="line">    Stage.prototype.reset = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        _extend(<span class="built_in">this</span>,<span class="built_in">this</span>._settings,<span class="built_in">this</span>._params);</span><br><span class="line">        <span class="built_in">this</span>.resetItems();</span><br><span class="line">        <span class="built_in">this</span>.resetMaps();</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//绑定事件</span></span><br><span class="line">    Stage.prototype.bind = <span class="function"><span class="keyword">function</span>(<span class="params">eventType,callback</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!_events[eventType])&#123;</span><br><span class="line">            _events[eventType] = &#123;&#125;;</span><br><span class="line">            <span class="built_in">window</span>.addEventListener(eventType,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> key = <span class="string">&#x27;s&#x27;</span> + _index;</span><br><span class="line">                <span class="keyword">if</span>(_events[eventType][key])&#123;</span><br><span class="line">                    _events[eventType][key](e);</span><br><span class="line">                &#125;</span><br><span class="line">                e.preventDefault();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        _events[eventType][<span class="string">&#x27;s&#x27;</span>+<span class="built_in">this</span>.index] = callback.bind(<span class="built_in">this</span>);<span class="comment">//绑定事件作用域</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//动画开始</span></span><br><span class="line">    <span class="built_in">this</span>.start = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> f = <span class="number">0</span>;<span class="comment">//帧数计算</span></span><br><span class="line">        <span class="keyword">var</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> stage = _stages[_index];</span><br><span class="line">            _context.clearRect(<span class="number">0</span>,<span class="number">0</span>,_.width,_.height);<span class="comment">//清除画布</span></span><br><span class="line">            _context.fillStyle = <span class="string">&#x27;#000000&#x27;</span>;</span><br><span class="line">            _context.fillRect(<span class="number">0</span>,<span class="number">0</span>,_.width,_.height);</span><br><span class="line">            f++;</span><br><span class="line">            <span class="keyword">if</span>(stage.timeout)&#123;</span><br><span class="line">                stage.timeout--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(stage.update()!=<span class="literal">false</span>)&#123;            <span class="comment">//update返回false,则不绘制</span></span><br><span class="line">                stage.maps.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">map</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(!(f%map.frames))&#123;</span><br><span class="line">                        map.times = f/map.frames;<span class="comment">//计数器</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(map.cache)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(!map.imageData)&#123;</span><br><span class="line">                            _context.save();</span><br><span class="line">                            map.draw(_context);</span><br><span class="line">                            map.imageData = _context.getImageData(<span class="number">0</span>,<span class="number">0</span>,_.width,_.height);</span><br><span class="line">                            _context.restore();</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            _context.putImageData(map.imageData,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    map.update();</span><br><span class="line">                        map.draw(_context);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                stage.items.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(!(f%item.frames))&#123;</span><br><span class="line">                        item.times = f/item.frames;   <span class="comment">//计数器</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(stage.status==<span class="number">1</span>&amp;&amp;item.status!=<span class="number">2</span>)&#123;  <span class="comment">//对象及布景状态都不处于暂停状态</span></span><br><span class="line">                        <span class="keyword">if</span>(item.location)&#123;</span><br><span class="line">                            item.coord = item.location.position2coord(item.x,item.y);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span>(item.timeout)&#123;</span><br><span class="line">                            item.timeout--;</span><br><span class="line">                        &#125;</span><br><span class="line">                        item.update();</span><br><span class="line">                    &#125;</span><br><span class="line">                    item.draw(_context);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            _hander = requestAnimationFrame(fn);</span><br><span class="line">        &#125;;</span><br><span class="line">        _hander = requestAnimationFrame(fn);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//动画结束</span></span><br><span class="line">    <span class="built_in">this</span>.stop = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        _hander&amp;&amp;cancelAnimationFrame(_hander);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//事件坐标</span></span><br><span class="line">    <span class="built_in">this</span>.getPosition = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> box = $canvas.getBoundingClientRect();</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            x:e.clientX-box.left*(_.width/box.width),</span><br><span class="line">            y:e.clientY-box.top*(_.height/box.height)</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建布景</span></span><br><span class="line">    <span class="built_in">this</span>.createStage = <span class="function"><span class="keyword">function</span>(<span class="params">options</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> stage = <span class="keyword">new</span> Stage(options);</span><br><span class="line">        stage.index = _stages.length;</span><br><span class="line">        _stages.push(stage);</span><br><span class="line">        <span class="keyword">return</span> stage;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//指定布景</span></span><br><span class="line">    <span class="built_in">this</span>.setStage = <span class="function"><span class="keyword">function</span>(<span class="params">index</span>)</span>&#123;</span><br><span class="line">        _stages[_index].status = <span class="number">0</span>;</span><br><span class="line">        _index = index;</span><br><span class="line">        _stages[_index].status = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> _stages[_index];</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//下个布景</span></span><br><span class="line">    <span class="built_in">this</span>.nextStage = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(_index&lt;_stages.length-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.setStage(++_index);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;unfound new stage.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//初始化游戏引擎</span></span><br><span class="line">    <span class="built_in">this</span>.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        _index = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index.js:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//主程序,业务逻辑</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> _DATA = [<span class="comment">//地图数据</span></span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">],</span><br><span class="line">_GOODS = &#123;<span class="comment">//能量豆</span></span><br><span class="line"><span class="string">&#x27;1,3&#x27;</span>:<span class="number">1</span>,</span><br><span class="line"><span class="string">&#x27;26,3&#x27;</span>:<span class="number">1</span>,</span><br><span class="line"><span class="string">&#x27;1,23&#x27;</span>:<span class="number">1</span>,</span><br><span class="line"><span class="string">&#x27;26,23&#x27;</span>:<span class="number">1</span></span><br><span class="line">&#125;,</span><br><span class="line">_COS = [<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">_SIN = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>],</span><br><span class="line">_COLOR = [<span class="string">&#x27;#F00&#x27;</span>,<span class="string">&#x27;#F93&#x27;</span>,<span class="string">&#x27;#0CF&#x27;</span>,<span class="string">&#x27;#F9C&#x27;</span>],<span class="comment">//红,橙,</span></span><br><span class="line">_LIFE = <span class="number">3</span>,</span><br><span class="line">_SCORE = <span class="number">0</span>;<span class="comment">//得分</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> game = <span class="keyword">new</span> Game(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line"><span class="comment">//启动页</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> stage = game.createStage();</span><br><span class="line"><span class="comment">//logo</span></span><br><span class="line">stage.createItem(&#123;</span><br><span class="line">x:game.width/<span class="number">2</span>,</span><br><span class="line">y:game.height*<span class="number">.45</span>,</span><br><span class="line">width:<span class="number">100</span>,</span><br><span class="line">height:<span class="number">100</span>,</span><br><span class="line">frames:<span class="number">3</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> t = <span class="built_in">Math</span>.abs(<span class="number">5</span>-<span class="built_in">this</span>.times%<span class="number">10</span>);</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#FFE600&#x27;</span>;</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.width/<span class="number">2</span>,t*<span class="number">.04</span>*<span class="built_in">Math</span>.PI,(<span class="number">2</span>-t*<span class="number">.04</span>)*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.lineTo(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y);</span><br><span class="line">context.closePath();</span><br><span class="line">context.fill();</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#000&#x27;</span>;</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(<span class="built_in">this</span>.x+<span class="number">5</span>,<span class="built_in">this</span>.y-<span class="number">27</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.closePath();</span><br><span class="line">context.fill();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//游戏名</span></span><br><span class="line">stage.createItem(&#123;</span><br><span class="line">x:game.width/<span class="number">2</span>,</span><br><span class="line">y:game.height*<span class="number">.6</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">context.font = <span class="string">&#x27;bold 42px Helvetica&#x27;</span>;</span><br><span class="line">context.textAlign = <span class="string">&#x27;center&#x27;</span>;</span><br><span class="line">context.textBaseline = <span class="string">&#x27;middle&#x27;</span>;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#FFF&#x27;</span>;</span><br><span class="line">context.fillText(<span class="string">&#x27;Pac-Man&#x27;</span>,<span class="built_in">this</span>.x,<span class="built_in">this</span>.y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//版权信息</span></span><br><span class="line">stage.createItem(&#123;</span><br><span class="line">x:game.width-<span class="number">12</span>,</span><br><span class="line">y:game.height-<span class="number">5</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">context.font = <span class="string">&#x27;14px Helvetica&#x27;</span>;</span><br><span class="line">context.textAlign = <span class="string">&#x27;right&#x27;</span>;</span><br><span class="line">context.textBaseline = <span class="string">&#x27;bottom&#x27;</span>;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#AAA&#x27;</span>;</span><br><span class="line">context.fillText(<span class="string">&#x27;© passer-by.com&#x27;</span>,<span class="built_in">this</span>.x,<span class="built_in">this</span>.y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//事件绑定</span></span><br><span class="line">stage.bind(<span class="string">&#x27;keydown&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(e.keyCode)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">32</span>:</span><br><span class="line">game.nextStage();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="comment">//游戏主程序</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> stage,map,beans,player,times;</span><br><span class="line">stage = game.createStage(&#123;</span><br><span class="line">update:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> stage = <span class="built_in">this</span>;</span><br><span class="line"><span class="keyword">if</span>(stage.status==<span class="number">1</span>)&#123;<span class="comment">//场景正常运行</span></span><br><span class="line">items.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(map&amp;&amp;!map.get(item.coord.x,item.coord.y)&amp;&amp;!map.get(player.coord.x,player.coord.y))&#123;</span><br><span class="line"><span class="keyword">var</span> dx = item.x-player.x;</span><br><span class="line"><span class="keyword">var</span> dy = item.y-player.y;</span><br><span class="line"><span class="keyword">if</span>(dx*dx+dy*dy&lt;<span class="number">750</span>&amp;&amp;item.status!=<span class="number">4</span>)&#123;<span class="comment">//物体检测</span></span><br><span class="line"><span class="keyword">if</span>(item.status==<span class="number">3</span>)&#123;</span><br><span class="line">item.status = <span class="number">4</span>;</span><br><span class="line">_SCORE += <span class="number">10</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">stage.status = <span class="number">3</span>;</span><br><span class="line">stage.timeout = <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">JSON</span>.stringify(beans.data).indexOf(<span class="number">0</span>)&lt;<span class="number">0</span>)&#123;<span class="comment">//当没有物品的时候，进入结束画面</span></span><br><span class="line">game.nextStage();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(stage.status==<span class="number">3</span>)&#123;<span class="comment">//场景临时状态</span></span><br><span class="line"><span class="keyword">if</span>(!stage.timeout)&#123;</span><br><span class="line">_LIFE--;</span><br><span class="line"><span class="keyword">if</span>(_LIFE)&#123;</span><br><span class="line">stage.resetItems();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">game.nextStage();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//绘制地图</span></span><br><span class="line">map = stage.createMap(&#123;</span><br><span class="line">x:<span class="number">60</span>,</span><br><span class="line">y:<span class="number">10</span>,</span><br><span class="line">data:_DATA,</span><br><span class="line">cache:<span class="literal">true</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">context.lineWidth = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="built_in">this</span>.y_length; j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="built_in">this</span>.x_length; i++)&#123;</span><br><span class="line"><span class="keyword">var</span> value = <span class="built_in">this</span>.get(i,j);</span><br><span class="line"><span class="keyword">if</span>(value)&#123;</span><br><span class="line"><span class="keyword">var</span> code = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.get(i+<span class="number">1</span>,j)&amp;&amp;!(<span class="built_in">this</span>.get(i+<span class="number">1</span>,j-<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i+<span class="number">1</span>,j+<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i,j-<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i,j+<span class="number">1</span>)))&#123;</span><br><span class="line">code[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.get(i,j+<span class="number">1</span>)&amp;&amp;!(<span class="built_in">this</span>.get(i-<span class="number">1</span>,j+<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i+<span class="number">1</span>,j+<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i-<span class="number">1</span>,j)&amp;&amp;<span class="built_in">this</span>.get(i+<span class="number">1</span>,j)))&#123;</span><br><span class="line">code[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.get(i-<span class="number">1</span>,j)&amp;&amp;!(<span class="built_in">this</span>.get(i-<span class="number">1</span>,j-<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i-<span class="number">1</span>,j+<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i,j-<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i,j+<span class="number">1</span>)))&#123;</span><br><span class="line">code[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.get(i,j-<span class="number">1</span>)&amp;&amp;!(<span class="built_in">this</span>.get(i-<span class="number">1</span>,j-<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i+<span class="number">1</span>,j-<span class="number">1</span>)&amp;&amp;<span class="built_in">this</span>.get(i-<span class="number">1</span>,j)&amp;&amp;<span class="built_in">this</span>.get(i+<span class="number">1</span>,j)))&#123;</span><br><span class="line">code[<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(code.indexOf(<span class="number">1</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">context.strokeStyle=value==<span class="number">2</span>?<span class="string">&quot;#FFF&quot;</span>:<span class="string">&quot;#09C&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> pos = <span class="built_in">this</span>.coord2position(i,j);</span><br><span class="line"><span class="keyword">switch</span>(code.join(<span class="string">&#x27;&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;1100&#x27;</span>:</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(pos.x+<span class="built_in">this</span>.size/<span class="number">2</span>,pos.y+<span class="built_in">this</span>.size/<span class="number">2</span>,<span class="built_in">this</span>.size/<span class="number">2</span>,<span class="built_in">Math</span>.PI,<span class="number">1.5</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.stroke();</span><br><span class="line">context.closePath();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;0110&#x27;</span>:</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(pos.x-<span class="built_in">this</span>.size/<span class="number">2</span>,pos.y+<span class="built_in">this</span>.size/<span class="number">2</span>,<span class="built_in">this</span>.size/<span class="number">2</span>,<span class="number">1.5</span>*<span class="built_in">Math</span>.PI,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.stroke();</span><br><span class="line">context.closePath();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;0011&#x27;</span>:</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(pos.x-<span class="built_in">this</span>.size/<span class="number">2</span>,pos.y-<span class="built_in">this</span>.size/<span class="number">2</span>,<span class="built_in">this</span>.size/<span class="number">2</span>,<span class="number">0</span>,<span class="number">.5</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.stroke();</span><br><span class="line">context.closePath();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;1001&#x27;</span>:</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(pos.x+<span class="built_in">this</span>.size/<span class="number">2</span>,pos.y-<span class="built_in">this</span>.size/<span class="number">2</span>,<span class="built_in">this</span>.size/<span class="number">2</span>,<span class="number">.5</span>*<span class="built_in">Math</span>.PI,<span class="number">1</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.stroke();</span><br><span class="line">context.closePath();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">var</span> dist = <span class="built_in">this</span>.size/<span class="number">2</span>;</span><br><span class="line">code.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">v,index</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(v)&#123;</span><br><span class="line">context.beginPath();</span><br><span class="line">context.moveTo(pos.x,pos.y);</span><br><span class="line">context.lineTo(pos.x-_COS[index]*dist,pos.y-_SIN[index]*dist);</span><br><span class="line">context.stroke();</span><br><span class="line">context.closePath();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//物品地图</span></span><br><span class="line">beans = stage.createMap(&#123;</span><br><span class="line">x:<span class="number">60</span>,</span><br><span class="line">y:<span class="number">10</span>,</span><br><span class="line">data:_DATA,</span><br><span class="line">frames:<span class="number">8</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="built_in">this</span>.y_length; j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="built_in">this</span>.x_length; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">this</span>.get(i,j))&#123;</span><br><span class="line"><span class="keyword">var</span> pos = <span class="built_in">this</span>.coord2position(i,j);</span><br><span class="line">context.fillStyle = <span class="string">&quot;#F5F5DC&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(_GOODS[i+<span class="string">&#x27;,&#x27;</span>+j])&#123;</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(pos.x,pos.y,<span class="number">3</span>+<span class="built_in">this</span>.times%<span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">true</span>);</span><br><span class="line">context.fill();</span><br><span class="line">context.closePath();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">context.fillRect(pos.x-<span class="number">2</span>,pos.y-<span class="number">2</span>,<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//得分</span></span><br><span class="line">stage.createItem(&#123;</span><br><span class="line">x:<span class="number">690</span>,</span><br><span class="line">y:<span class="number">100</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">context.font = <span class="string">&#x27;bold 28px Helvetica&#x27;</span>;</span><br><span class="line">context.textAlign = <span class="string">&#x27;left&#x27;</span>;</span><br><span class="line">context.textBaseline = <span class="string">&#x27;bottom&#x27;</span>;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#C33&#x27;</span>;</span><br><span class="line">context.fillText(<span class="string">&#x27;SCORE&#x27;</span>,<span class="built_in">this</span>.x,<span class="built_in">this</span>.y);</span><br><span class="line">context.font = <span class="string">&#x27;28px Helvetica&#x27;</span>;</span><br><span class="line">context.textAlign = <span class="string">&#x27;left&#x27;</span>;</span><br><span class="line">context.textBaseline = <span class="string">&#x27;top&#x27;</span>;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#FFF&#x27;</span>;</span><br><span class="line">context.fillText(_SCORE,<span class="built_in">this</span>.x+<span class="number">12</span>,<span class="built_in">this</span>.y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//状态文字</span></span><br><span class="line">stage.createItem(&#123;</span><br><span class="line">x:<span class="number">690</span>,</span><br><span class="line">y:<span class="number">320</span>,</span><br><span class="line">frames:<span class="number">25</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(stage.status==<span class="number">2</span>&amp;&amp;<span class="built_in">this</span>.times%<span class="number">2</span>)&#123;</span><br><span class="line">context.font = <span class="string">&#x27;24px Helvetica&#x27;</span>;</span><br><span class="line">context.textAlign = <span class="string">&#x27;left&#x27;</span>;</span><br><span class="line">context.textBaseline = <span class="string">&#x27;center&#x27;</span>;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#09F&#x27;</span>;</span><br><span class="line">context.fillText(<span class="string">&#x27;PAUSE&#x27;</span>,<span class="built_in">this</span>.x,<span class="built_in">this</span>.y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//生命值</span></span><br><span class="line">stage.createItem(&#123;</span><br><span class="line">x:<span class="number">705</span>,</span><br><span class="line">y:<span class="number">540</span>,</span><br><span class="line">width:<span class="number">30</span>,</span><br><span class="line">height:<span class="number">30</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;_LIFE-<span class="number">1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">var</span> x=<span class="built_in">this</span>.x+<span class="number">40</span>*i,y=<span class="built_in">this</span>.y;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#FFE600&#x27;</span>;</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(x,y,<span class="built_in">this</span>.width/<span class="number">2</span>,<span class="number">.15</span>*<span class="built_in">Math</span>.PI,-<span class="number">.15</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.lineTo(x,y);</span><br><span class="line">context.closePath();</span><br><span class="line">context.fill();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//NPC</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">stage.createItem(&#123;</span><br><span class="line">width:<span class="number">30</span>,</span><br><span class="line">height:<span class="number">30</span>,</span><br><span class="line">orientation:<span class="number">3</span>,</span><br><span class="line">color:_COLOR[i],</span><br><span class="line">location:map,</span><br><span class="line">coord:&#123;<span class="attr">x</span>:<span class="number">12</span>+i,<span class="attr">y</span>:<span class="number">14</span>&#125;,</span><br><span class="line">vector:&#123;<span class="attr">x</span>:<span class="number">12</span>+i,<span class="attr">y</span>:<span class="number">14</span>&#125;,</span><br><span class="line">type:<span class="number">2</span>,</span><br><span class="line">frames:<span class="number">10</span>,</span><br><span class="line">speed:<span class="number">1</span>,</span><br><span class="line">timeout:<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">120</span>),</span><br><span class="line">update:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> new_map;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.status==<span class="number">3</span>&amp;&amp;!<span class="built_in">this</span>.timeout)&#123;</span><br><span class="line"><span class="built_in">this</span>.status = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">this</span>.coord.offset)&#123;<span class="comment">//到达坐标中心时计算</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.status==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">this</span>.timeout)&#123;<span class="comment">//定时器</span></span><br><span class="line">new_map = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(map.data).replace(<span class="regexp">/2/g</span>,<span class="number">0</span>));</span><br><span class="line"><span class="keyword">var</span> id = <span class="built_in">this</span>._id;</span><br><span class="line">items.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(item._id!=id&amp;&amp;item.status==<span class="number">1</span>)&#123;<span class="comment">//NPC将其它所有还处于正常状态的NPC当成一堵墙</span></span><br><span class="line">new_map[item.coord.y][item.coord.x]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">this</span>.path = map.finder(&#123;</span><br><span class="line">map:new_map,</span><br><span class="line">start:<span class="built_in">this</span>.coord,</span><br><span class="line">end:player.coord</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.path.length)&#123;</span><br><span class="line"><span class="built_in">this</span>.vector = <span class="built_in">this</span>.path[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.status==<span class="number">3</span>)&#123;</span><br><span class="line">new_map = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(map.data).replace(<span class="regexp">/2/g</span>,<span class="number">0</span>));</span><br><span class="line"><span class="keyword">var</span> id = <span class="built_in">this</span>._id;</span><br><span class="line">items.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(item._id!=id)&#123;</span><br><span class="line">new_map[item.coord.y][item.coord.x]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">this</span>.path = map.finder(&#123;</span><br><span class="line">map:new_map,</span><br><span class="line">start:player.coord,</span><br><span class="line">end:<span class="built_in">this</span>.coord,</span><br><span class="line">type:<span class="string">&#x27;next&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.path.length)&#123;</span><br><span class="line"><span class="built_in">this</span>.vector = <span class="built_in">this</span>.path[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="built_in">this</span>.path.length)];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.status==<span class="number">4</span>)&#123;</span><br><span class="line">new_map = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(map.data).replace(<span class="regexp">/2/g</span>,<span class="number">0</span>));</span><br><span class="line"><span class="built_in">this</span>.path = map.finder(&#123;</span><br><span class="line">map:new_map,</span><br><span class="line">start:<span class="built_in">this</span>.coord,</span><br><span class="line">end:<span class="built_in">this</span>._params.coord</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.path.length)&#123;</span><br><span class="line"><span class="built_in">this</span>.vector = <span class="built_in">this</span>.path[<span class="number">0</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.status = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//是否转变方向</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.vector.change)&#123;</span><br><span class="line"><span class="built_in">this</span>.coord.x = <span class="built_in">this</span>.vector.x;</span><br><span class="line"><span class="built_in">this</span>.coord.y = <span class="built_in">this</span>.vector.y;</span><br><span class="line"><span class="keyword">var</span> pos = map.coord2position(<span class="built_in">this</span>.coord.x,<span class="built_in">this</span>.coord.y);</span><br><span class="line"><span class="built_in">this</span>.x = pos.x;</span><br><span class="line"><span class="built_in">this</span>.y = pos.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//方向判定</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.vector.x&gt;<span class="built_in">this</span>.coord.x)&#123;</span><br><span class="line"><span class="built_in">this</span>.orientation = <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.vector.x&lt;<span class="built_in">this</span>.coord.x)&#123;</span><br><span class="line"><span class="built_in">this</span>.orientation = <span class="number">2</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.vector.y&gt;<span class="built_in">this</span>.coord.y)&#123;</span><br><span class="line"><span class="built_in">this</span>.orientation = <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.vector.y&lt;<span class="built_in">this</span>.coord.y)&#123;</span><br><span class="line"><span class="built_in">this</span>.orientation = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">this</span>.x += <span class="built_in">this</span>.speed*_COS[<span class="built_in">this</span>.orientation];</span><br><span class="line"><span class="built_in">this</span>.y += <span class="built_in">this</span>.speed*_SIN[<span class="built_in">this</span>.orientation];</span><br><span class="line">&#125;,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> isSick = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.status==<span class="number">3</span>)&#123;</span><br><span class="line">isSick = <span class="built_in">this</span>.timeout&gt;<span class="number">80</span>||<span class="built_in">this</span>.times%<span class="number">2</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.status!=<span class="number">4</span>)&#123;</span><br><span class="line">context.fillStyle = isSick?<span class="string">&#x27;#BABABA&#x27;</span>:<span class="built_in">this</span>.color;</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.width*<span class="number">.5</span>,<span class="number">0</span>,<span class="built_in">Math</span>.PI,<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">switch</span>(<span class="built_in">this</span>.times%<span class="number">2</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">context.lineTo(<span class="built_in">this</span>.x-<span class="built_in">this</span>.width*<span class="number">.5</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.4</span>);</span><br><span class="line">context.quadraticCurveTo(<span class="built_in">this</span>.x-<span class="built_in">this</span>.width*<span class="number">.4</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.5</span>,<span class="built_in">this</span>.x-<span class="built_in">this</span>.width*<span class="number">.2</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.3</span>);</span><br><span class="line">context.quadraticCurveTo(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.5</span>,<span class="built_in">this</span>.x+<span class="built_in">this</span>.width*<span class="number">.2</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.3</span>);</span><br><span class="line">context.quadraticCurveTo(<span class="built_in">this</span>.x+<span class="built_in">this</span>.width*<span class="number">.4</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.5</span>,<span class="built_in">this</span>.x+<span class="built_in">this</span>.width*<span class="number">.5</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.4</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">context.lineTo(<span class="built_in">this</span>.x-<span class="built_in">this</span>.width*<span class="number">.5</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.3</span>);</span><br><span class="line">context.quadraticCurveTo(<span class="built_in">this</span>.x-<span class="built_in">this</span>.width*<span class="number">.25</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.5</span>,<span class="built_in">this</span>.x,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.3</span>);</span><br><span class="line">context.quadraticCurveTo(<span class="built_in">this</span>.x+<span class="built_in">this</span>.width*<span class="number">.25</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.5</span>,<span class="built_in">this</span>.x+<span class="built_in">this</span>.width*<span class="number">.5</span>,<span class="built_in">this</span>.y+<span class="built_in">this</span>.height*<span class="number">.3</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">context.fill();</span><br><span class="line">context.closePath();</span><br><span class="line">&#125;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#FFF&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(isSick)&#123;</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(<span class="built_in">this</span>.x-<span class="built_in">this</span>.width*<span class="number">.15</span>,<span class="built_in">this</span>.y-<span class="built_in">this</span>.height*<span class="number">.21</span>,<span class="built_in">this</span>.width*<span class="number">.08</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.arc(<span class="built_in">this</span>.x+<span class="built_in">this</span>.width*<span class="number">.15</span>,<span class="built_in">this</span>.y-<span class="built_in">this</span>.height*<span class="number">.21</span>,<span class="built_in">this</span>.width*<span class="number">.08</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.fill();</span><br><span class="line">context.closePath();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(<span class="built_in">this</span>.x-<span class="built_in">this</span>.width*<span class="number">.15</span>,<span class="built_in">this</span>.y-<span class="built_in">this</span>.height*<span class="number">.21</span>,<span class="built_in">this</span>.width*<span class="number">.12</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.arc(<span class="built_in">this</span>.x+<span class="built_in">this</span>.width*<span class="number">.15</span>,<span class="built_in">this</span>.y-<span class="built_in">this</span>.height*<span class="number">.21</span>,<span class="built_in">this</span>.width*<span class="number">.12</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.fill();</span><br><span class="line">context.closePath();</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#000&#x27;</span>;</span><br><span class="line">context.beginPath();</span><br><span class="line">context.arc(<span class="built_in">this</span>.x-<span class="built_in">this</span>.width*(<span class="number">.15</span>-<span class="number">.04</span>*_COS[<span class="built_in">this</span>.orientation]),<span class="built_in">this</span>.y-<span class="built_in">this</span>.height*(<span class="number">.21</span>-<span class="number">.04</span>*_SIN[<span class="built_in">this</span>.orientation]),<span class="built_in">this</span>.width*<span class="number">.07</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.arc(<span class="built_in">this</span>.x+<span class="built_in">this</span>.width*(<span class="number">.15</span>+<span class="number">.04</span>*_COS[<span class="built_in">this</span>.orientation]),<span class="built_in">this</span>.y-<span class="built_in">this</span>.height*(<span class="number">.21</span>-<span class="number">.04</span>*_SIN[<span class="built_in">this</span>.orientation]),<span class="built_in">this</span>.width*<span class="number">.07</span>,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">context.fill();</span><br><span class="line">context.closePath();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">items = stage.getItemsByType(<span class="number">2</span>);</span><br><span class="line"><span class="comment">//主角</span></span><br><span class="line">player = stage.createItem(&#123;</span><br><span class="line">width:<span class="number">30</span>,</span><br><span class="line">height:<span class="number">30</span>,</span><br><span class="line">type:<span class="number">1</span>,</span><br><span class="line">location:map,</span><br><span class="line">coord:&#123;<span class="attr">x</span>:<span class="number">13.5</span>,<span class="attr">y</span>:<span class="number">23</span>&#125;,</span><br><span class="line">orientation:<span class="number">2</span>,</span><br><span class="line">speed:<span class="number">2</span>,</span><br><span class="line">frames:<span class="number">10</span>,</span><br><span class="line">update:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> coord = <span class="built_in">this</span>.coord;</span><br><span class="line"><span class="keyword">if</span>(!coord.offset)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.control.orientation!=<span class="string">&#x27;undefined&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!map.get(coord.x+_COS[<span class="built_in">this</span>.control.orientation],coord.y+_SIN[<span class="built_in">this</span>.control.orientation]))&#123;</span><br><span class="line"><span class="built_in">this</span>.orientation = <span class="built_in">this</span>.control.orientation;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">this</span>.control = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> value = map.get(coord.x+_COS[<span class="built_in">this</span>.orientation],coord.y+_SIN[<span class="built_in">this</span>.orientation]);</span><br><span class="line"><span class="keyword">if</span>(value==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">this</span>.x += <span class="built_in">this</span>.speed*_COS[<span class="built_in">this</span>.orientation];</span><br><span class="line"><span class="built_in">this</span>.y += <span class="built_in">this</span>.speed*_SIN[<span class="built_in">this</span>.orientation];</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(value&lt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">this</span>.x -= map.size*(map.x_length-<span class="number">1</span>)*_COS[<span class="built_in">this</span>.orientation];</span><br><span class="line"><span class="built_in">this</span>.y -= map.size*(map.y_length-<span class="number">1</span>)*_SIN[<span class="built_in">this</span>.orientation];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!beans.get(<span class="built_in">this</span>.coord.x,<span class="built_in">this</span>.coord.y))&#123;<span class="comment">//吃豆</span></span><br><span class="line">_SCORE++;</span><br><span class="line">beans.set(<span class="built_in">this</span>.coord.x,<span class="built_in">this</span>.coord.y,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(_GOODS[<span class="built_in">this</span>.coord.x+<span class="string">&#x27;,&#x27;</span>+<span class="built_in">this</span>.coord.y])&#123;<span class="comment">//吃到能量豆</span></span><br><span class="line">items.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(item.status==<span class="number">1</span>||item.status==<span class="number">3</span>)&#123;<span class="comment">//如果NPC为正常状态，则置为临时状态</span></span><br><span class="line">item.timeout = <span class="number">450</span>;</span><br><span class="line">item.status = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">this</span>.x += <span class="built_in">this</span>.speed*_COS[<span class="built_in">this</span>.orientation];</span><br><span class="line"><span class="built_in">this</span>.y += <span class="built_in">this</span>.speed*_SIN[<span class="built_in">this</span>.orientation];</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#FFE600&#x27;</span>;</span><br><span class="line">context.beginPath();</span><br><span class="line"><span class="keyword">if</span>(stage.status!=<span class="number">3</span>)&#123;<span class="comment">//玩家正常状态</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>.times%<span class="number">2</span>)&#123;</span><br><span class="line">context.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.width/<span class="number">2</span>,(<span class="number">.5</span>*<span class="built_in">this</span>.orientation+<span class="number">.20</span>)*<span class="built_in">Math</span>.PI,(<span class="number">.5</span>*<span class="built_in">this</span>.orientation-<span class="number">.20</span>)*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">context.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.width/<span class="number">2</span>,(<span class="number">.5</span>*<span class="built_in">this</span>.orientation+<span class="number">.01</span>)*<span class="built_in">Math</span>.PI,(<span class="number">.5</span>*<span class="built_in">this</span>.orientation-<span class="number">.01</span>)*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;<span class="comment">//玩家被吃</span></span><br><span class="line"><span class="keyword">if</span>(stage.timeout) &#123;</span><br><span class="line">context.arc(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y,<span class="built_in">this</span>.width/<span class="number">2</span>,(<span class="number">.5</span>*<span class="built_in">this</span>.orientation+<span class="number">1</span>-<span class="number">.02</span>*stage.timeout)*<span class="built_in">Math</span>.PI,(<span class="number">.5</span>*<span class="built_in">this</span>.orientation-<span class="number">1</span>+<span class="number">.02</span>*stage.timeout)*<span class="built_in">Math</span>.PI,<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">context.lineTo(<span class="built_in">this</span>.x,<span class="built_in">this</span>.y);</span><br><span class="line">context.closePath();</span><br><span class="line">context.fill();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//事件绑定</span></span><br><span class="line">stage.bind(<span class="string">&#x27;keydown&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(e.keyCode)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">13</span>: <span class="comment">//回车</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">32</span>: <span class="comment">//空格</span></span><br><span class="line"><span class="built_in">this</span>.status = <span class="built_in">this</span>.status==<span class="number">2</span>?<span class="number">1</span>:<span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">39</span>: <span class="comment">//右</span></span><br><span class="line">player.control = &#123;<span class="attr">orientation</span>:<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">40</span>: <span class="comment">//下</span></span><br><span class="line">player.control = &#123;<span class="attr">orientation</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">37</span>: <span class="comment">//左</span></span><br><span class="line">player.control = &#123;<span class="attr">orientation</span>:<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">38</span>: <span class="comment">//上</span></span><br><span class="line">player.control = &#123;<span class="attr">orientation</span>:<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="comment">//结束画面</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> stage = game.createStage();</span><br><span class="line"><span class="comment">//游戏结束</span></span><br><span class="line">stage.createItem(&#123;</span><br><span class="line">x:game.width/<span class="number">2</span>,</span><br><span class="line">y:game.height*<span class="number">.35</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#FFF&#x27;</span>;</span><br><span class="line">context.font = <span class="string">&#x27;bold 48px Helvetica&#x27;</span>;</span><br><span class="line">context.textAlign = <span class="string">&#x27;center&#x27;</span>;</span><br><span class="line">context.textBaseline = <span class="string">&#x27;middle&#x27;</span>;</span><br><span class="line">context.fillText(<span class="string">&#x27;GAME OVER&#x27;</span>,<span class="built_in">this</span>.x,<span class="built_in">this</span>.y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//记分</span></span><br><span class="line">stage.createItem(&#123;</span><br><span class="line">x:game.width/<span class="number">2</span>,</span><br><span class="line">y:game.height*<span class="number">.5</span>,</span><br><span class="line">draw:<span class="function"><span class="keyword">function</span>(<span class="params">context</span>)</span>&#123;</span><br><span class="line">context.fillStyle = <span class="string">&#x27;#FFF&#x27;</span>;</span><br><span class="line">context.font = <span class="string">&#x27;20px Helvetica&#x27;</span>;</span><br><span class="line">context.textAlign = <span class="string">&#x27;center&#x27;</span>;</span><br><span class="line">context.textBaseline = <span class="string">&#x27;middle&#x27;</span>;</span><br><span class="line">context.fillText(<span class="string">&#x27;FINAL SCORE: &#x27;</span>+(_SCORE+<span class="number">50</span>*<span class="built_in">Math</span>.max(_LIFE-<span class="number">1</span>,<span class="number">0</span>)),<span class="built_in">this</span>.x,<span class="built_in">this</span>.y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//事件绑定</span></span><br><span class="line">stage.bind(<span class="string">&#x27;keydown&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(e.keyCode)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">13</span>: <span class="comment">//回车</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">32</span>: <span class="comment">//空格</span></span><br><span class="line">_SCORE = <span class="number">0</span>;</span><br><span class="line">_LIFE = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">var</span> st = game.setStage(<span class="number">1</span>);</span><br><span class="line">st.reset();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)();</span><br><span class="line">game.init();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>————————————————<br>版权声明：本文为CSDN博主「兔老大RabbitMQ」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/hebtu666/article/details/86526655">https://blog.csdn.net/hebtu666/article/details/86526655</a></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 吃豆人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven settings</title>
      <link href="2021/07/05/maven-settings/"/>
      <url>2021/07/05/maven-settings/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Licensed to the Apache Software Foundation (ASF) under one</span></span><br><span class="line"><span class="comment">or more contributor license agreements.  See the NOTICE file</span></span><br><span class="line"><span class="comment">distributed with this work for additional information</span></span><br><span class="line"><span class="comment">regarding copyright ownership.  The ASF licenses this file</span></span><br><span class="line"><span class="comment">to you under the Apache License, Version 2.0 (the</span></span><br><span class="line"><span class="comment">&quot;License&quot;); you may not use this file except in compliance</span></span><br><span class="line"><span class="comment">with the License.  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Unless required by applicable law or agreed to in writing,</span></span><br><span class="line"><span class="comment">software distributed under the License is distributed on an</span></span><br><span class="line"><span class="comment">&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</span></span><br><span class="line"><span class="comment">KIND, either express or implied.  See the License for the</span></span><br><span class="line"><span class="comment">specific language governing permissions and limitations</span></span><br><span class="line"><span class="comment">under the License.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> | This is the configuration file for Maven. It can be specified at two levels:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  1. User Level. This settings.xml file provides configuration for a single user,</span></span><br><span class="line"><span class="comment"> |                 and is normally provided in $&#123;user.home&#125;/.m2/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -s /path/to/user/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |  2. Global Level. This settings.xml file provides configuration for all Maven</span></span><br><span class="line"><span class="comment"> |                 users on a machine (assuming they&#x27;re all using the same Maven</span></span><br><span class="line"><span class="comment"> |                 installation). It&#x27;s normally provided in</span></span><br><span class="line"><span class="comment"> |                 $&#123;maven.conf&#125;/settings.xml.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 <span class="doctag">NOTE:</span> This location can be overridden with the CLI option:</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |                 -gs /path/to/global/settings.xml</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> | The sections in this sample file are intended to give you a running start at</span></span><br><span class="line"><span class="comment"> | getting the most out of your Maven installation. Where appropriate, the default</span></span><br><span class="line"><span class="comment"> | values (values used when the setting is not specified) are provided.</span></span><br><span class="line"><span class="comment"> |</span></span><br><span class="line"><span class="comment"> |--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- localRepository</span></span><br><span class="line"><span class="comment">   | The path to the local repository maven will use to store artifacts.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: $&#123;user.home&#125;/.m2/repository</span></span><br><span class="line"><span class="comment">  &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\repository_boot<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- interactiveMode</span></span><br><span class="line"><span class="comment">   | This will determine whether maven prompts you when it needs input. If set to false,</span></span><br><span class="line"><span class="comment">   | maven will use a sensible default value, perhaps based on some other setting, for</span></span><br><span class="line"><span class="comment">   | the parameter in question.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: true</span></span><br><span class="line"><span class="comment">  &lt;interactiveMode&gt;true&lt;/interactiveMode&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- offline</span></span><br><span class="line"><span class="comment">   | Determines whether maven should attempt to connect to the network when executing a build.</span></span><br><span class="line"><span class="comment">   | This will have an effect on artifact downloads, artifact deployment, and others.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | Default: false</span></span><br><span class="line"><span class="comment">  &lt;offline&gt;false&lt;/offline&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- pluginGroups</span></span><br><span class="line"><span class="comment">   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.</span></span><br><span class="line"><span class="comment">   | when invoking a command line like &quot;mvn prefix:goal&quot;. Maven will automatically add the group identifiers</span></span><br><span class="line"><span class="comment">   | &quot;org.apache.maven.plugins&quot; and &quot;org.codehaus.mojo&quot; if these are not already contained in the list.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- pluginGroup</span></span><br><span class="line"><span class="comment">     | Specifies a further group identifier to use for plugin lookup.</span></span><br><span class="line"><span class="comment">    &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginGroups</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- proxies</span></span><br><span class="line"><span class="comment">   | This is a list of proxies which can be used on this machine to connect to the network.</span></span><br><span class="line"><span class="comment">   | Unless otherwise specified (by system property or command-line switch), the first proxy</span></span><br><span class="line"><span class="comment">   | specification in this list marked as active will be used.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">proxies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- proxy</span></span><br><span class="line"><span class="comment">     | Specification for one proxy, to be used in connecting to the network.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;proxy&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;optional&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;active&gt;true&lt;/active&gt;</span></span><br><span class="line"><span class="comment">      &lt;protocol&gt;http&lt;/protocol&gt;</span></span><br><span class="line"><span class="comment">      &lt;username&gt;proxyuser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">      &lt;password&gt;proxypass&lt;/password&gt;</span></span><br><span class="line"><span class="comment">      &lt;host&gt;proxy.host.net&lt;/host&gt;</span></span><br><span class="line"><span class="comment">      &lt;port&gt;80&lt;/port&gt;</span></span><br><span class="line"><span class="comment">      &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt;</span></span><br><span class="line"><span class="comment">    &lt;/proxy&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">proxies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- servers</span></span><br><span class="line"><span class="comment">   | This is a list of authentication profiles, keyed by the server-id used within the system.</span></span><br><span class="line"><span class="comment">   | Authentication profiles can be used whenever maven must make a connection to a remote server.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- server</span></span><br><span class="line"><span class="comment">     | Specifies the authentication information to use when connecting to a particular server, identified by</span></span><br><span class="line"><span class="comment">     | a unique name within the system (referred to by the &#x27;id&#x27; attribute below).</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | <span class="doctag">NOTE:</span> You should either specify username/password OR privateKey/passphrase, since these pairings are</span></span><br><span class="line"><span class="comment">     |       used together.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;server&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;deploymentRepo&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;username&gt;repouser&lt;/username&gt;</span></span><br><span class="line"><span class="comment">      &lt;password&gt;repopwd&lt;/password&gt;</span></span><br><span class="line"><span class="comment">    &lt;/server&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Another sample, using keys to authenticate.</span></span><br><span class="line"><span class="comment">    &lt;server&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;siteServer&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt;</span></span><br><span class="line"><span class="comment">      &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt;</span></span><br><span class="line"><span class="comment">    &lt;/server&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- mirrors</span></span><br><span class="line"><span class="comment">   | This is a list of mirrors to be used in downloading artifacts from remote repositories.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | It works like this: a POM may declare a repository to use in resolving certain artifacts.</span></span><br><span class="line"><span class="comment">   | However, this repository may have problems with heavy traffic at times, so people have mirrored</span></span><br><span class="line"><span class="comment">   | it to several places.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | That repository definition will have a unique id, so we can create a mirror reference for that</span></span><br><span class="line"><span class="comment">   | repository, to be used as an alternate download site. The mirror site will be the preferred</span></span><br><span class="line"><span class="comment">   | server for that repository.</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- mirror</span></span><br><span class="line"><span class="comment">     | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class="line"><span class="comment">     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class="line"><span class="comment">     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;mirror&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class="line"><span class="comment">      &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="comment">      &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class="line"><span class="comment">      &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class="line"><span class="comment">    &lt;/mirror&gt;</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--加入国内镜像--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- profiles</span></span><br><span class="line"><span class="comment">   | This is a list of profiles which can be activated in a variety of ways, and which can modify</span></span><br><span class="line"><span class="comment">   | the build process. Profiles provided in the settings.xml are intended to provide local machine-</span></span><br><span class="line"><span class="comment">   | specific paths and repository locations which allow the build to work in the local environment.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | For example, if you have an integration testing plugin - like cactus - that needs to know where</span></span><br><span class="line"><span class="comment">   | your Tomcat instance is installed, you can provide a variable here such that the variable is</span></span><br><span class="line"><span class="comment">   | dereferenced during the build process to configure the cactus plugin.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles</span></span><br><span class="line"><span class="comment">   | section of this document (settings.xml) - will be discussed later. Another way essentially</span></span><br><span class="line"><span class="comment">   | relies on the detection of a system property, either matching a particular value for the property,</span></span><br><span class="line"><span class="comment">   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a</span></span><br><span class="line"><span class="comment">   | value of &#x27;1.4&#x27; might activate a profile when the build is executed on a JDK version of &#x27;1.4.2_07&#x27;.</span></span><br><span class="line"><span class="comment">   | Finally, the list of active profiles can be specified directly from the command line.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   | <span class="doctag">NOTE:</span> For profiles defined in the settings.xml, you are restricted to specifying only artifact</span></span><br><span class="line"><span class="comment">   |       repositories, plugin repositories, and free-form properties to be used as configuration</span></span><br><span class="line"><span class="comment">   |       variables for plugins in the POM.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">   |--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">profiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- profile</span></span><br><span class="line"><span class="comment">     | Specifies a set of introductions to the build process, to be activated using one or more of the</span></span><br><span class="line"><span class="comment">     | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt;</span></span><br><span class="line"><span class="comment">     | or the command line, profiles have to have an ID that is unique.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | An encouraged best practice for profile identification is to use a consistent naming convention</span></span><br><span class="line"><span class="comment">     | for profiles, such as &#x27;env-dev&#x27;, &#x27;env-test&#x27;, &#x27;env-production&#x27;, &#x27;user-jdcasey&#x27;, &#x27;user-brett&#x27;, etc.</span></span><br><span class="line"><span class="comment">     | This will make it more intuitive to understand what the set of introduced profiles is attempting</span></span><br><span class="line"><span class="comment">     | to accomplish, particularly when you only have a list of profile id&#x27;s for debug.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.</span></span><br><span class="line"><span class="comment">    &lt;profile&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;jdk-1.4&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;activation&gt;</span></span><br><span class="line"><span class="comment">        &lt;jdk&gt;1.4&lt;/jdk&gt;</span></span><br><span class="line"><span class="comment">      &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;repositories&gt;</span></span><br><span class="line"><span class="comment">        &lt;repository&gt;</span></span><br><span class="line"><span class="comment">          &lt;id&gt;jdk14&lt;/id&gt;</span></span><br><span class="line"><span class="comment">          &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt;</span></span><br><span class="line"><span class="comment">          &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt;</span></span><br><span class="line"><span class="comment">          &lt;layout&gt;default&lt;/layout&gt;</span></span><br><span class="line"><span class="comment">          &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt;</span></span><br><span class="line"><span class="comment">        &lt;/repository&gt;</span></span><br><span class="line"><span class="comment">      &lt;/repositories&gt;</span></span><br><span class="line"><span class="comment">    &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     | Here is another profile, activated by the system property &#x27;target-env&#x27; with a value of &#x27;dev&#x27;,</span></span><br><span class="line"><span class="comment">     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration</span></span><br><span class="line"><span class="comment">     | might hypothetically look like:</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | ...</span></span><br><span class="line"><span class="comment">     | &lt;plugin&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;artifactId&gt;myplugin&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     |   &lt;configuration&gt;</span></span><br><span class="line"><span class="comment">     |     &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt;</span></span><br><span class="line"><span class="comment">     |   &lt;/configuration&gt;</span></span><br><span class="line"><span class="comment">     | &lt;/plugin&gt;</span></span><br><span class="line"><span class="comment">     | ...</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">     | <span class="doctag">NOTE:</span> If you just wanted to inject this configuration whenever someone set &#x27;target-env&#x27; to</span></span><br><span class="line"><span class="comment">     |       anything, you could just leave off the &lt;value/&gt; inside the activation-property.</span></span><br><span class="line"><span class="comment">     |</span></span><br><span class="line"><span class="comment">    &lt;profile&gt;</span></span><br><span class="line"><span class="comment">      &lt;id&gt;env-dev&lt;/id&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;activation&gt;</span></span><br><span class="line"><span class="comment">        &lt;property&gt;</span></span><br><span class="line"><span class="comment">          &lt;name&gt;target-env&lt;/name&gt;</span></span><br><span class="line"><span class="comment">          &lt;value&gt;dev&lt;/value&gt;</span></span><br><span class="line"><span class="comment">        &lt;/property&gt;</span></span><br><span class="line"><span class="comment">      &lt;/activation&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      &lt;properties&gt;</span></span><br><span class="line"><span class="comment">        &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt;</span></span><br><span class="line"><span class="comment">      &lt;/properties&gt;</span></span><br><span class="line"><span class="comment">    &lt;/profile&gt;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- activeProfiles</span></span><br><span class="line"><span class="comment">   | List of profiles that are active for all builds.</span></span><br><span class="line"><span class="comment">   |</span></span><br><span class="line"><span class="comment">  &lt;activeProfiles&gt;</span></span><br><span class="line"><span class="comment">    &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">    &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt;</span></span><br><span class="line"><span class="comment">  &lt;/activeProfiles&gt;</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> settings </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity客户端与Netty服务器的网络通信</title>
      <link href="2021/07/05/Unity%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8ENetty%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/"/>
      <url>2021/07/05/Unity%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8ENetty%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<p>点击</p><h1 id="参考一下（转载）"><a href="#参考一下（转载）" class="headerlink" title="参考一下（转载）"></a>参考一下（转载）</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p><a href="https://blog.csdn.net/liulongling">https://blog.csdn.net/liulongling</a></p><p><a href="https://blog.csdn.net/liulongling/article/details/51828969">https://blog.csdn.net/liulongling/article/details/51828969</a></p><p><a href="https://blog.csdn.net/liulongling/article/details/52214720?spm=1001.2014.3001.5501">https://blog.csdn.net/liulongling/article/details/52214720?spm=1001.2014.3001.5501</a></p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><ol><li><p>吴云洋（Cloud），网名云风，毕业于<a href="http://baike.baidu.com/view/3522.htm">中南大学</a>，原<a href="http://baike.baidu.com/view/6043.htm">网易</a>游戏核心成员、杭州研究中心总监，是网易《<a href="http://baike.baidu.com/view/25489.htm">大话西游</a>》、《<a href="http://baike.baidu.com/view/4344.htm">梦幻西游</a>》等游戏的重要开发者。2011年9月5日宣布已从网易辞职。</p><p> 博客地址：<a href="http://blog.codingnow.com/">http://blog.codingnow.com/</a></p><p> 博客地址：<a href="https://blog.codingnow.com/">https://blog.codingnow.com/</a></p></li><li><p>Milo Yip是香港同胞，现任职于深圳腾讯互动娱乐事业群研发部引擎技术中心。<br> 在高一高二时兼职开发游戏《王子传奇》后，便潜心向学(伪)，得到认知科学学士和系统工程及工程管理学哲学硕士后， 于大学里做游戏科技的相关项目，直至2008年才来到上海，再次投身游戏业界，之前的作品是《美食从天而降》Xbox360/PS3/Wii/PC、《爱丽丝：疯狂回归》Xbox360/PS3/PC。<br> 博客地址：<a href="http://www.cnblogs.com/miloyip/">http://www.cnblogs.com/miloyip/</a></p></li><li><p>CSDN名：<a href="http://blog.csdn.net/xoyojank">逍遥剑客</a> 其它不详</p><p> 博客地址：<a href="http://my.csdn.net/xoyojank">http://my.csdn.net/xoyojank</a></p></li></ol><p>原文链接：<a href="https://blog.csdn.net/liulongling/article/details/51789336">https://blog.csdn.net/liulongling/article/details/51789336</a></p><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><p><a href="https://channel9.msdn.com/shows/techwithtina/corrinne-yu-principal-engine-architect-halo-team-microsoft">https://channel9.msdn.com/shows/techwithtina/corrinne-yu-principal-engine-architect-halo-team-microsoft</a></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Netty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bio、Nio、Netty</title>
      <link href="2021/07/03/Bio%E3%80%81Nio%E3%80%81Netty/"/>
      <url>2021/07/03/Bio%E3%80%81Nio%E3%80%81Netty/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Bio"><a href="#一、Bio" class="headerlink" title="一、Bio"></a>一、Bio</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.ServerSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BioServer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        ExecutorService newCachedThreadPool = Executors.newCachedThreadPool();</span><br><span class="line">        <span class="comment">//创建socket服务，监听10101端口</span></span><br><span class="line">        ServerSocket server = <span class="keyword">new</span> ServerSocket(<span class="number">10101</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;服务器启动！&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//获取一个套接字（阻塞）</span></span><br><span class="line">            <span class="keyword">final</span> Socket socket = server.accept();</span><br><span class="line">            System.out.println(<span class="string">&quot;来了一个新客户端！&quot;</span>);</span><br><span class="line"></span><br><span class="line">            newCachedThreadPool.execute(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    <span class="comment">//业务处理</span></span><br><span class="line">                    handle(socket);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> socket</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Socket socket)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            InputStream inputStream = socket.getInputStream();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="comment">//读取数据（阻塞）</span></span><br><span class="line">                <span class="keyword">int</span> read = inputStream.read(bytes);</span><br><span class="line">                <span class="keyword">if</span> (read != -<span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="keyword">new</span> String(bytes, <span class="number">0</span>, read));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;break&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;socket关闭&quot;</span>);</span><br><span class="line">                socket.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>图解</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/07/03/Bio%E3%80%81Nio%E3%80%81Netty/image-20210703202245173.png" alt="image-20210703202245173"></p><h1 id="二、Nio"><a href="#二、Nio" class="headerlink" title="二、Nio"></a>二、Nio</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.channels.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NioServer</span> </span>&#123;</span><br><span class="line">    <span class="comment">//通道管理器</span></span><br><span class="line">    <span class="keyword">private</span> Selector selector;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得一个ServerSocket通道，并对该通道做一些初始化的工作</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> port</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initServer</span><span class="params">(<span class="keyword">int</span> port)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取ServerSocket通道</span></span><br><span class="line">        ServerSocketChannel serverChannel = ServerSocketChannel.open();</span><br><span class="line">        <span class="comment">//设置通道为非阻塞</span></span><br><span class="line">        serverChannel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">//将该通道对应的ServerSocket绑定到port端口</span></span><br><span class="line">        serverChannel.socket().bind(<span class="keyword">new</span> InetSocketAddress(port));</span><br><span class="line">        <span class="comment">//获得一个通道管理器</span></span><br><span class="line">        <span class="keyword">this</span>.selector = Selector.open();</span><br><span class="line">        <span class="comment">//将通道管理器和该通道绑定，并为该通道注册SelectionKey.OP_ACCEPT事件，注册该事件后，</span></span><br><span class="line">        <span class="comment">//当该事件到达时，selector.select()会返回，如果该事件没有到达selector.select()会一直阻塞。</span></span><br><span class="line">        serverChannel.register(selector, SelectionKey.OP_ACCEPT);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 采用轮询的方法监听selector上是否有需要处理的事件，如果有，则进行处理</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listen</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;服务端启动成功！&quot;</span>);</span><br><span class="line">        <span class="comment">//轮询访问selector</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">//当注册的事件到达时，方法返回；否则，该方法会一直阻塞</span></span><br><span class="line">            selector.select();</span><br><span class="line"><span class="comment">//            设置1秒后不阻塞</span></span><br><span class="line"><span class="comment">//            selector.select(1000);</span></span><br><span class="line">            <span class="comment">//获得selector中选中的项的迭代器，选中的项为注册的事件</span></span><br><span class="line">            Iterator&lt;SelectionKey&gt; ite = <span class="keyword">this</span>.selector.selectedKeys().iterator();</span><br><span class="line">            <span class="keyword">while</span> (ite.hasNext()) &#123;</span><br><span class="line">                SelectionKey key = ite.next();</span><br><span class="line">                <span class="comment">//删除已选的key，以防重复处理</span></span><br><span class="line">                ite.remove();</span><br><span class="line"></span><br><span class="line">                handler(key);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handler</span><span class="params">(SelectionKey key)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//客户端请求连接事件</span></span><br><span class="line">        <span class="keyword">if</span> (key.isAcceptable()) &#123;</span><br><span class="line">            handlerAccept(key);</span><br><span class="line">            <span class="comment">// 获得了可读的事件</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.isReadable()) &#123;</span><br><span class="line">            handlerRead(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理连接请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handlerAccept</span><span class="params">(SelectionKey key)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocketChannel server = (ServerSocketChannel) key.channel();</span><br><span class="line">        <span class="comment">//获得和客户端连接的通道</span></span><br><span class="line">        SocketChannel channel = server.accept();</span><br><span class="line">        <span class="comment">//设置成非阻塞</span></span><br><span class="line">        channel.configureBlocking(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在这里可以给客户端发送信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;新的客户端连接&quot;</span>);</span><br><span class="line">        <span class="comment">//在和客户端连接成功后，为了可以接收到客户端的信息，需要给通道设置读的权限。</span></span><br><span class="line">        channel.register(<span class="keyword">this</span>.selector, SelectionKey.OP_READ);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理读的事件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handlerRead</span><span class="params">(SelectionKey key)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//服务器可读取消息：得到事件发生的Socket通道</span></span><br><span class="line">        SocketChannel channel = (SocketChannel) key.channel();</span><br><span class="line">        <span class="comment">//创建读取的缓冲区</span></span><br><span class="line">        ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br><span class="line">        <span class="keyword">int</span> read = channel.read(buffer);</span><br><span class="line">        <span class="keyword">if</span> (read &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] data = buffer.array();</span><br><span class="line">            String msg = <span class="keyword">new</span> String(data).trim();</span><br><span class="line">            System.out.println(<span class="string">&quot;服务端收到信息：&quot;</span> + msg);</span><br><span class="line"></span><br><span class="line">            ByteBuffer outBuffer = ByteBuffer.wrap(msg.getBytes());</span><br><span class="line">            <span class="comment">//将消息回送给客户端</span></span><br><span class="line">            channel.write(outBuffer);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;客户端关闭&quot;</span>);</span><br><span class="line">            key.cancel();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启动服务端测试</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        NioServer server = <span class="keyword">new</span> NioServer();</span><br><span class="line">        server.initServer(<span class="number">8000</span>);</span><br><span class="line">        server.listen();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>图解</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/07/03/Bio%E3%80%81Nio%E3%80%81Netty/image-20210703202722900.png" alt="image-20210703202722900"></p><h1 id="三、Netty"><a href="#三、Netty" class="headerlink" title="三、Netty"></a>三、Netty</h1><p>按照netty官网上的指导手册开始入门</p><h3 id="1-编写Discard服务器，即接收到客户端发送的数据并丢弃掉，为方便测试对接收的消息在控制台打印。"><a href="#1-编写Discard服务器，即接收到客户端发送的数据并丢弃掉，为方便测试对接收的消息在控制台打印。" class="headerlink" title="1.编写Discard服务器，即接收到客户端发送的数据并丢弃掉，为方便测试对接收的消息在控制台打印。"></a>1.编写Discard服务器，即接收到客户端发送的数据并丢弃掉，为方便测试对接收的消息在控制台打印。</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.netty.DiscardServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBuf;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelInboundHandlerAdapter;</span><br><span class="line"><span class="keyword">import</span> io.netty.util.CharsetUtil;</span><br><span class="line"><span class="keyword">import</span> io.netty.util.ReferenceCountUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiscardServerHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInboundHandlerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 静静地丢弃掉接收到的消息</span></span><br><span class="line">        <span class="comment">//((ByteBuf) msg).release();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 静静地丢弃消息，测试时无法直到它是不是正常运行，使用以下代码测试</span></span><br><span class="line">        ByteBuf in = (ByteBuf)msg;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(in.toString(CharsetUtil.UTF_8));</span><br><span class="line">        <span class="comment">// 不用sout或使用下面的循环。</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            while (in.isReadable()) &#123;</span></span><br><span class="line"><span class="comment">//                System.out.println((char)in.readByte());</span></span><br><span class="line"><span class="comment">//                System.out.flush();</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125; finally &#123;</span></span><br><span class="line"><span class="comment">//            ReferenceCountUtil.release(msg);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext ctx, Throwable cause)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 当异常发生时关闭连接</span></span><br><span class="line">        cause.printStackTrace();</span><br><span class="line">        ctx.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.netty;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.bootstrap.ServerBootstrap;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelFuture;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelInitializer;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelOption;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.EventLoopGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.nio.NioEventLoopGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.socket.SocketChannel;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.socket.nio.NioServerSocketChannel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DiscardServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DiscardServer</span><span class="params">(<span class="keyword">int</span> port)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.port = port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        EventLoopGroup bossGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">        EventLoopGroup workerGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ServerBootstrap b = <span class="keyword">new</span> ServerBootstrap();</span><br><span class="line">            b.group(bossGroup,workerGroup)</span><br><span class="line">                    .channel(NioServerSocketChannel.class)</span><br><span class="line">                    .childHandler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                            ch.pipeline().addLast(<span class="keyword">new</span> DiscardServerHandler());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .option(ChannelOption.SO_BACKLOG, <span class="number">128</span>)</span><br><span class="line">                    .childOption(ChannelOption.SO_KEEPALIVE, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绑定并开始接收即将到来的连接们。</span></span><br><span class="line">            ChannelFuture f = b.bind(port).sync();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 等待。。。直到server socket 关闭。</span></span><br><span class="line">            f.channel().closeFuture().sync();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            workerGroup.shutdownGracefully();</span><br><span class="line">            bossGroup.shutdownGracefully();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> port = <span class="number">8080</span>;</span><br><span class="line">        <span class="keyword">if</span> (args.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            port = Integer.parseInt(args[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> DiscardServer(port).run();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用Telnet测试一下，效果：</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/07/03/Bio%E3%80%81Nio%E3%80%81Netty/image-20210705203413360.png" alt="image-20210705203413360"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/07/03/Bio%E3%80%81Nio%E3%80%81Netty/image-20210705203439402.png" alt="image-20210705203439402"></p><h3 id="2-编写响应服务器，即服务端接收客户端消息后，并响应给客户端。"><a href="#2-编写响应服务器，即服务端接收客户端消息后，并响应给客户端。" class="headerlink" title="2.编写响应服务器，即服务端接收客户端消息后，并响应给客户端。"></a>2.编写响应服务器，即服务端接收客户端消息后，并响应给客户端。</h3><p>修改channelRead方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      </span><br><span class="line">        ctx.write(msg);</span><br><span class="line">        ctx.flush();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="3-编写时间服务器"><a href="#3-编写时间服务器" class="headerlink" title="3.编写时间服务器"></a>3.编写时间服务器</h3><ol><li><p>服务端</p><p> 注：1900 年 1 月 1 日 0 时 0 分到1970 年 1 月 1 日 0 时 0 分以来所经过的秒数，换为十进制，则为 2208988800。计算方法为(70 * 365 + 17) * 24 * 60 * 60。</p></li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.netty.timeServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBuf;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelFuture;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelFutureListener;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelInboundHandlerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeServerHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInboundHandlerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelActive</span><span class="params">(ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ByteBuf time = ctx.alloc().buffer(<span class="number">4</span>);</span><br><span class="line">        time.writeInt((<span class="keyword">int</span>) (System.currentTimeMillis()/<span class="number">1000L</span> + <span class="number">2208988800L</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> ChannelFuture f = ctx.writeAndFlush(time);</span><br><span class="line">        f.addListener(<span class="keyword">new</span> ChannelFutureListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">operationComplete</span><span class="params">(ChannelFuture future)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="keyword">assert</span> f == future;</span><br><span class="line">                ctx.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext ctx, Throwable cause)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        cause.printStackTrace();</span><br><span class="line">        ctx.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.netty.timeServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.test.netty.discardServer.DiscardServerHandler;</span><br><span class="line"><span class="keyword">import</span> io.netty.bootstrap.ServerBootstrap;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelFuture;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelInitializer;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelOption;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.EventLoopGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.nio.NioEventLoopGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.socket.SocketChannel;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.socket.nio.NioServerSocketChannel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeServer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> port;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TimeServer</span><span class="params">(<span class="keyword">int</span> port)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.port = port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        EventLoopGroup bossGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line">        EventLoopGroup workerGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ServerBootstrap b = <span class="keyword">new</span> ServerBootstrap();</span><br><span class="line">            b.group(bossGroup,workerGroup)</span><br><span class="line">                    .channel(NioServerSocketChannel.class)</span><br><span class="line">                    .childHandler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                            ch.pipeline().addLast(<span class="keyword">new</span> TimeServerHandler());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .option(ChannelOption.SO_BACKLOG, <span class="number">128</span>)</span><br><span class="line">                    .childOption(ChannelOption.SO_KEEPALIVE, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 绑定并开始接收即将到来的连接们。</span></span><br><span class="line">            ChannelFuture f = b.bind(port).sync();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 等待。。。直到server socket 关闭。</span></span><br><span class="line">            f.channel().closeFuture().sync();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            workerGroup.shutdownGracefully();</span><br><span class="line">            bossGroup.shutdownGracefully();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> port = <span class="number">8080</span>;</span><br><span class="line">        <span class="keyword">if</span> (args.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            port = Integer.parseInt(args[<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> TimeServer(port).run();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>客户端</li></ol><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.netty.timeServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBuf;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelInboundHandlerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeClientHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInboundHandlerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ByteBuf m = (ByteBuf)msg;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">long</span> currentTimeMillis = (m.readUnsignedInt() - <span class="number">2208988800L</span>) * <span class="number">1000L</span>;</span><br><span class="line">            System.out.println(<span class="keyword">new</span> Date(currentTimeMillis));</span><br><span class="line">            ctx.close();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            m.release();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext ctx, Throwable cause)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        cause.printStackTrace();</span><br><span class="line">        ctx.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.netty.timeServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.bootstrap.Bootstrap;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelFuture;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelInitializer;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelOption;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.EventLoopGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.nio.NioEventLoopGroup;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.socket.SocketChannel;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.socket.nio.NioSocketChannel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        String host = args[0];</span></span><br><span class="line"><span class="comment">//        int port = Integer.parseInt(args[1]);</span></span><br><span class="line">        String host = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> port = <span class="number">8080</span>;</span><br><span class="line">        EventLoopGroup workerGroup = <span class="keyword">new</span> NioEventLoopGroup();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Bootstrap b = <span class="keyword">new</span> Bootstrap();</span><br><span class="line">            b.group(workerGroup);</span><br><span class="line">            b.channel(NioSocketChannel.class);</span><br><span class="line">            b.option(ChannelOption.SO_KEEPALIVE,<span class="keyword">true</span>);</span><br><span class="line">            b.handler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                    ch.pipeline().addLast(<span class="keyword">new</span> TimeClientHandler());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//开启客户端</span></span><br><span class="line">            ChannelFuture f = b.connect(host, port).sync();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//等。。等到连接关闭</span></span><br><span class="line">            f.channel().closeFuture().sync();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            workerGroup.shutdownGracefully();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-处理基于流的传输"><a href="#4-处理基于流的传输" class="headerlink" title="4.处理基于流的传输"></a>4.处理基于流的传输</h3><p>在基于流的传输（如 TCP/IP）中，接收到的数据存储在套接字接收缓冲区中。不幸的是，基于流的传输的缓冲区不是数据包队列而是字节队列。这意味着，即使您将两条消息作为两个独立的数据包发送，操作系统也不会将它们视为两条消息，而只是一堆字节。因此，无法保证您阅读的内容与您的远程对等方所写的内容完全相同。例如，让我们假设操作系统的 TCP/IP 堆栈收到了三个数据包：</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/07/03/Bio%E3%80%81Nio%E3%80%81Netty/1.png" alt="发送时收到三个数据包"></p><p>由于基于流的协议的这一一般属性，在您的应用程序中很有可能以以下碎片形式读取它们：</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/07/03/Bio%E3%80%81Nio%E3%80%81Netty/2.png" alt="三个数据包拆分并合并为四个缓冲区"></p><p>因此，接收部分，无论是服务器端还是客户端，都应该将接收到的数据碎片整理成一个或多个有意义的帧，这些帧可以很容易地被应用程序逻辑理解。在上面的例子中，接收到的数据应该是这样的：</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/07/03/Bio%E3%80%81Nio%E3%80%81Netty/3.png" alt="四个缓冲区碎片整理成三个"></p><h4 id="4-1-第一个解决方案：创建一个内部累积缓冲区，并等待所有-4-个字节都接收到内部缓冲区中。"><a href="#4-1-第一个解决方案：创建一个内部累积缓冲区，并等待所有-4-个字节都接收到内部缓冲区中。" class="headerlink" title="4.1 第一个解决方案：创建一个内部累积缓冲区，并等待所有 4 个字节都接收到内部缓冲区中。"></a>4.1 第一个解决方案：创建一个内部累积缓冲区，并等待所有 4 个字节都接收到内部缓冲区中。</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.netty.timeServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBuf;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelInboundHandlerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeClientHandler</span> <span class="keyword">extends</span> <span class="title">ChannelInboundHandlerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ByteBuf buf;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handlerAdded</span><span class="params">(ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        buf = ctx.alloc().buffer(<span class="number">4</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handlerRemoved</span><span class="params">(ChannelHandlerContext ctx)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        buf.release();</span><br><span class="line">        buf = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">channelRead</span><span class="params">(ChannelHandlerContext ctx, Object msg)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ByteBuf m = (ByteBuf) msg;</span><br><span class="line">        buf.writeBytes(m);</span><br><span class="line">        m.release();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (buf.readableBytes() &gt;= <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="keyword">long</span> currentTimeMillis = (buf.readUnsignedInt() - <span class="number">2208988800L</span>) * <span class="number">1000L</span>;</span><br><span class="line">            System.out.println(<span class="keyword">new</span> Date(currentTimeMillis));</span><br><span class="line">            ctx.close();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceptionCaught</span><span class="params">(ChannelHandlerContext ctx, Throwable cause)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        cause.printStackTrace();</span><br><span class="line">        ctx.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-第二个解决方案：Netty-提供了一个可扩展的类，它可以帮助您编写第一个开箱即用的类"><a href="#4-2-第二个解决方案：Netty-提供了一个可扩展的类，它可以帮助您编写第一个开箱即用的类" class="headerlink" title="4.2 第二个解决方案：Netty 提供了一个可扩展的类，它可以帮助您编写第一个开箱即用的类"></a>4.2 第二个解决方案：Netty 提供了一个可扩展的类，它可以帮助您编写第一个开箱即用的类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.netty.timeServer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.netty.buffer.ByteBuf;</span><br><span class="line"><span class="keyword">import</span> io.netty.channel.ChannelHandlerContext;</span><br><span class="line"><span class="keyword">import</span> io.netty.handler.codec.ByteToMessageDecoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TimeDecoder</span> <span class="keyword">extends</span> <span class="title">ByteToMessageDecoder</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">decode</span><span class="params">(ChannelHandlerContext ctx, ByteBuf in, List&lt;Object&gt; out)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (in.readableBytes() &lt; <span class="number">4</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        out.add(in.readBytes(<span class="number">4</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在TimeClient类中修改</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">b.handler(<span class="keyword">new</span> ChannelInitializer&lt;SocketChannel&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initChannel</span><span class="params">(SocketChannel ch)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        ch.pipeline().addLast(<span class="keyword">new</span> TimeDecoder(), <span class="keyword">new</span> TimeClientHandler());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="5-用-POJO-代替-ByteBuf"><a href="#5-用-POJO-代替-ByteBuf" class="headerlink" title="5.用 POJO 代替 ByteBuf"></a>5.用 POJO 代替 ByteBuf</h3><p>…</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bio、Nio、Netty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>h5移动的时钟特效</title>
      <link href="2021/05/16/h5%E7%A7%BB%E5%8A%A8%E7%9A%84%E6%97%B6%E9%92%9F%E7%89%B9%E6%95%88/"/>
      <url>2021/05/16/h5%E7%A7%BB%E5%8A%A8%E7%9A%84%E6%97%B6%E9%92%9F%E7%89%B9%E6%95%88/</url>
      
        <content type="html"><![CDATA[<p><img src= "/img/girl-female.gif" data-lazy-src="/2021/05/16/h5%E7%A7%BB%E5%8A%A8%E7%9A%84%E6%97%B6%E9%92%9F%E7%89%B9%E6%95%88/image-20210516232504870.png" alt="image-20210516232504870"></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-2&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="meta-string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=iso-8859-2&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Does anybody ever read this text?(这文字是给人看的吗？)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&#x27;shortcut icon&#x27;</span> <span class="attr">href</span>=<span class="string">&#x27;/favicon.ico&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;image/gif&#x27;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css"><span class="comment">/*&lt;![CDATA[*/</span></span></span><br><span class="line"><span class="css"> <span class="selector-tag">body</span> &#123; <span class="attribute">background-color</span>: <span class="number">#000000</span>; <span class="attribute">color</span>: <span class="number">#ffffff</span>; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css"> <span class="selector-tag">a</span> &#123; <span class="attribute">text-decoration</span>: none; &#125;</span></span><br><span class="line"><span class="css"> <span class="selector-tag">a</span><span class="selector-class">.right</span> &#123; <span class="attribute">float</span>: right; &#125;</span></span><br><span class="line"><span class="css"> <span class="selector-tag">a</span><span class="selector-class">.left</span> &#123; <span class="attribute">float</span>: left; &#125;</span></span><br><span class="line"><span class="css"> <span class="selector-pseudo">:link</span> &#123; <span class="attribute">color</span>: <span class="number">#00ffff</span>; <span class="attribute">border</span>: none; &#125;</span></span><br><span class="line"><span class="css"> <span class="selector-pseudo">:visited</span> &#123; <span class="attribute">color</span>: <span class="number">#00cccc</span>; <span class="attribute">border</span>: none; &#125;</span></span><br><span class="line"><span class="css"> <span class="selector-pseudo">:hover</span> &#123; <span class="attribute">color</span>: <span class="number">#00ff00</span>; <span class="attribute">border</span>: none; &#125;</span></span><br><span class="line"> .css1&#123;</span><br><span class="line"><span class="css">  <span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0px</span>;<span class="attribute">left</span>:<span class="number">0px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">width</span>:<span class="number">16px</span>;<span class="attribute">height</span>:<span class="number">16px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">font-family</span>:Arial;</span></span><br><span class="line"><span class="css">  <span class="attribute">font-size</span>:<span class="number">16px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">text-align</span>:center;</span></span><br><span class="line"><span class="css">  <span class="attribute">font-weight</span>:bold;</span></span><br><span class="line"> &#125;</span><br><span class="line"> .css2&#123;</span><br><span class="line"><span class="css">  <span class="attribute">position</span>:absolute;<span class="attribute">top</span>:<span class="number">0px</span>;<span class="attribute">left</span>:<span class="number">0px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">width</span>:<span class="number">10px</span>;<span class="attribute">height</span>:<span class="number">10px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">font-family</span>:Arial;</span></span><br><span class="line"><span class="css">  <span class="attribute">font-size</span>:<span class="number">10px</span>;</span></span><br><span class="line"><span class="css">  <span class="attribute">text-align</span>:center;</span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="css"><span class="comment">/*]]&gt;*/</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//ip.eternallybored.org/&quot;</span>&gt;</span>What&#x27;s my IP?<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span> <span class="attr">href</span>=<span class="string">&quot;misc/&quot;</span>&gt;</span>Random stuff<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">&lt;!-- Silly Clock <span class="number">3</span> (updated) by http:<span class="comment">//www.btinternet.com/~kurt.grigg/javascript</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//modified by ender:</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// - now works in Firebird 0.7</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// - limit the clock to the document area</span></span></span><br><span class="line"><span class="javascript"><span class="comment">// - added onresize handler</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//fix by SpecLad: proper alignment in Opera 10</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//updated for Firefox 24</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//Hide from old Netscape 4.</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (!<span class="built_in">document</span>.layers)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//Clock colours</span></span></span><br><span class="line"><span class="javascript">dCol=<span class="string">&#x27;#00ff00&#x27;</span>;<span class="comment">//date colour.</span></span></span><br><span class="line"><span class="javascript">fCol=<span class="string">&#x27;#ffffff&#x27;</span>;<span class="comment">//face colour.</span></span></span><br><span class="line"><span class="javascript">sCol=<span class="string">&#x27;#ffffff&#x27;</span>;<span class="comment">//seconds colour.</span></span></span><br><span class="line"><span class="javascript">mCol=<span class="string">&#x27;#00ff00&#x27;</span>;<span class="comment">//minutes colour.</span></span></span><br><span class="line"><span class="javascript">hCol=<span class="string">&#x27;#00ff00&#x27;</span>;<span class="comment">//hours colour.</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//Controls</span></span></span><br><span class="line"><span class="javascript">kgy1=<span class="number">0</span>; <span class="comment">//Y distance from mouse.</span></span></span><br><span class="line"><span class="javascript">kgx1=<span class="number">0</span>; <span class="comment">//X distance from mouse.</span></span></span><br><span class="line"><span class="javascript">kgv1=<span class="number">0.4</span>;  <span class="comment">//Follow/delay speed.</span></span></span><br><span class="line"><span class="javascript">kgv2=<span class="number">10</span>;   <span class="comment">//Run speed (timeout).</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//Alter nothing below! Alignments will be lost!</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ie=(navigator.appName == <span class="string">&quot;Microsoft Internet Explorer&quot;</span>)?<span class="literal">true</span>:<span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> n7=(<span class="built_in">document</span>.getElementById&amp;&amp;!ie);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> o7=(navigator.appName.indexOf(<span class="string">&quot;Opera&quot;</span>) != -<span class="number">1</span>) &amp;&amp; (<span class="built_in">parseInt</span>(navigator.appVersion) &lt;= <span class="number">7</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (o7) n7=<span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">kgd=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;SUNDAY&quot;</span>,<span class="string">&quot;MONDAY&quot;</span>,<span class="string">&quot;TUESDAY&quot;</span>,<span class="string">&quot;WEDNESDAY&quot;</span>,<span class="string">&quot;THURSDAY&quot;</span>,<span class="string">&quot;FRIDAY&quot;</span>,<span class="string">&quot;SATURDAY&quot;</span>);</span></span><br><span class="line"><span class="javascript">kgm=<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;JANUARY&quot;</span>,<span class="string">&quot;FEBRUARY&quot;</span>,<span class="string">&quot;MARCH&quot;</span>,<span class="string">&quot;APRIL&quot;</span>,<span class="string">&quot;MAY&quot;</span>,<span class="string">&quot;JUNE&quot;</span>,<span class="string">&quot;JULY&quot;</span>,<span class="string">&quot;AUGUST&quot;</span>,<span class="string">&quot;SEPTEMBER&quot;</span>,<span class="string">&quot;OCTOBER&quot;</span>,<span class="string">&quot;NOVEMBER&quot;</span>,<span class="string">&quot;DECEMBER&quot;</span>);</span></span><br><span class="line"><span class="javascript">date=<span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">day=date.getDate();</span><br><span class="line">year=date.getYear();</span><br><span class="line">if (year &lt; 2000) year=year+1900; </span><br><span class="line"><span class="javascript">tmpdate=<span class="string">&quot; &quot;</span>+kgd[date.getDay()]+<span class="string">&quot; &quot;</span>+day+<span class="string">&quot; &quot;</span>+kgm[date.getMonth()]+<span class="string">&quot; &quot;</span>+year;</span></span><br><span class="line"><span class="javascript">D=tmpdate.split(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="javascript">N=<span class="string">&#x27;1 2 3 4 5 6 7 8 9 10 11 12&#x27;</span>;</span></span><br><span class="line"><span class="javascript">N=N.split(<span class="string">&quot; &quot;</span>);</span></span><br><span class="line">F=N.length;</span><br><span class="line"><span class="javascript">H=<span class="string">&#x27;...&#x27;</span>;</span></span><br><span class="line"><span class="javascript">H=H.split(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="javascript">M=<span class="string">&#x27;....&#x27;</span>;</span></span><br><span class="line"><span class="javascript">M=M.split(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="javascript">S=<span class="string">&#x27;.....&#x27;</span>;</span></span><br><span class="line"><span class="javascript">S=S.split(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="javascript">Dy=<span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">Dx=<span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">DY=<span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">DX=<span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line">kgh1=40;</span><br><span class="line">kgw1=40;</span><br><span class="line">if (n7) &#123;</span><br><span class="line"><span class="javascript"> kgmy=<span class="built_in">document</span>.documentElement.clientHeight/<span class="number">2</span>;</span></span><br><span class="line"><span class="javascript"> kgmx=<span class="built_in">document</span>.documentElement.clientWidth/<span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript"> kgmy=<span class="built_in">document</span>.body.clientHeight/<span class="number">2</span>;</span></span><br><span class="line"><span class="javascript"> kgmx=<span class="built_in">document</span>.body.clientWidth/<span class="number">2</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">kgs=0;</span><br><span class="line">kga1=360/F;</span><br><span class="line">kga2=360/D.length;</span><br><span class="line">kgh2=kgh1/5.5;</span><br><span class="line">kgw2=kgw1/5.5;</span><br><span class="line">kgy2=-7;</span><br><span class="line">kgx2=-3;</span><br><span class="line"><span class="javascript">tmr=<span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">tmps=<span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">tmpm=<span class="keyword">new</span> <span class="built_in">Array</span>(); </span></span><br><span class="line"><span class="javascript">tmph=<span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">tmpf=<span class="keyword">new</span> <span class="built_in">Array</span>(); </span></span><br><span class="line"><span class="javascript">tmpd=<span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line">if (ie)&#123; </span><br><span class="line"><span class="handlebars"><span class="xml">document.write(&#x27;<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;anti_scrollbars&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute;top:0px;left:0px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:relative&quot;</span>&gt;</span>&#x27;); </span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">algn=<span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line">for (i=0; i &lt; D.length; i++)&#123;</span><br><span class="line"><span class="javascript">algn[i]=(<span class="built_in">parseInt</span>(D[i]) || D[i]==<span class="number">0</span>)?<span class="number">10</span>:<span class="number">9</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;div id=&quot;_date&#x27;</span>+i+<span class="string">&#x27;&quot; class=&quot;css2&quot; style=&quot;font-size:&#x27;</span>+algn[i]+<span class="string">&#x27;px;color:&#x27;</span>+dCol+<span class="string">&#x27;&quot;&gt;&#x27;</span>+D[i]+<span class="string">&#x27;&lt;/div&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">tmpd[i]=<span class="built_in">document</span>.getElementById(<span class="string">&quot;_date&quot;</span>+i).style;</span></span><br><span class="line">&#125;</span><br><span class="line">for (i=0; i &lt; F; i++)&#123;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;div id=&quot;_face&#x27;</span>+i+<span class="string">&#x27;&quot; class=&quot;css2&quot; style=&quot;color:&#x27;</span>+fCol+<span class="string">&#x27;&quot;&gt;&#x27;</span>+N[i]+<span class="string">&#x27;&lt;/div&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">tmpf[i]=<span class="built_in">document</span>.getElementById(<span class="string">&quot;_face&quot;</span>+i).style; </span></span><br><span class="line">&#125;</span><br><span class="line">for (i=0; i &lt; H.length; i++)&#123;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;div id=&quot;_hours&#x27;</span>+i+<span class="string">&#x27;&quot; class=&quot;css1&quot; style=&quot;color:&#x27;</span>+hCol+<span class="string">&#x27;&quot;&gt;&#x27;</span>+H[i]+<span class="string">&#x27;&lt;/div&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">tmph[i]=<span class="built_in">document</span>.getElementById(<span class="string">&quot;_hours&quot;</span>+i).style;</span></span><br><span class="line">&#125;</span><br><span class="line">for (i=0; i &lt; M.length; i++)&#123;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;div id=&quot;_minutes&#x27;</span>+i+<span class="string">&#x27;&quot; class=&quot;css1&quot; style=&quot;color:&#x27;</span>+mCol+<span class="string">&#x27;&quot;&gt;&#x27;</span>+M[i]+<span class="string">&#x27;&lt;/div&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">tmpm[i]=<span class="built_in">document</span>.getElementById(<span class="string">&quot;_minutes&quot;</span>+i).style; </span></span><br><span class="line">&#125;</span><br><span class="line">for (i=0; i &lt; S.length; i++)&#123;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;div id=&quot;_seconds&#x27;</span>+i+<span class="string">&#x27;&quot; class=&quot;css1&quot; style=&quot;color:&#x27;</span>+sCol+<span class="string">&#x27;&quot;&gt;&#x27;</span>+S[i]+<span class="string">&#x27;&lt;/div&gt;&#x27;</span>);</span></span><br><span class="line"><span class="javascript">tmps[i]=<span class="built_in">document</span>.getElementById(<span class="string">&quot;_seconds&quot;</span>+i).style;         </span></span><br><span class="line">&#125;</span><br><span class="line">if (ie)&#123; </span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">&#x27;&lt;/div&gt;&lt;/div&gt;&#x27;</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> vis=<span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">onoff</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (vis==<span class="literal">true</span>)&#123; </span></span><br><span class="line"><span class="javascript">vis=<span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.con1.con2.value=<span class="string">&quot;Clock On&quot;</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">else</span>&#123; </span></span><br><span class="line"><span class="javascript">vis=<span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.con1.con2.value=<span class="string">&quot;Clock Off&quot;</span>;</span></span><br><span class="line">Delay();</span><br><span class="line">&#125;</span><br><span class="line">kill();</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">kill</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">if (vis)&#123; </span><br><span class="line"><span class="javascript"><span class="comment">//O7.50 works better with Netscape routines; should test with older versions</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.onmousemove=(n7||o7)?mouseNS:mouseIEO;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">else</span> <span class="built_in">document</span>.onmousemove=<span class="literal">null</span>;</span></span><br><span class="line">&#125; </span><br><span class="line">if (n7||o7)&#123;</span><br><span class="line"><span class="javascript"> <span class="keyword">if</span> (<span class="built_in">window</span>.captureEvents)</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.captureEvents(Event.MOUSEMOVE);</span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="keyword">function</span> <span class="title">mouseNS</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> kgmy = e.pageY+kgy1-(<span class="built_in">window</span>.pageYOffset);</span></span><br><span class="line"> kgmx = e.pageX+kgx1;</span><br><span class="line"> if (kgmx&lt;80) kgmx=80;</span><br><span class="line"> if (o7)&#123;</span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmx&gt;<span class="built_in">document</span>.body.clientWidth-<span class="number">80</span>) kgmx=<span class="built_in">document</span>.body.clientWidth-<span class="number">80</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmy&gt;<span class="built_in">document</span>.body.clientHeight-<span class="number">80</span>) kgmy=<span class="built_in">document</span>.body.clientHeight-<span class="number">80</span>;</span></span><br><span class="line"><span class="javascript"> &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmx&gt;<span class="built_in">document</span>.documentElement.clientWidth-<span class="number">80</span>) kgmx=<span class="built_in">document</span>.documentElement.clientWidth-<span class="number">80</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmy&gt;<span class="built_in">document</span>.documentElement.clientHeight-<span class="number">80</span>) kgmy=<span class="built_in">document</span>.documentElement.clientHeight-<span class="number">80</span>;</span></span><br><span class="line"> &#125;</span><br><span class="line"> if (kgmy&lt;80) kgmy=80;</span><br><span class="line"> if (!vis) kill();</span><br><span class="line"> &#125;</span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (n7||o7)<span class="built_in">document</span>.onmousemove=mouseNS;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> dbg=<span class="number">0</span>;</span></span><br><span class="line">if (ie)&#123;</span><br><span class="line"><span class="javascript"> <span class="function"><span class="keyword">function</span> <span class="title">mouseIEO</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"> <span class="keyword">if</span> (<span class="built_in">document</span>.documentElement) <span class="comment">//ie6 in strict mode</span></span></span><br><span class="line"><span class="javascript">  kgmy=event.clientY+kgy1+<span class="built_in">document</span>.documentElement.scrollTop;</span></span><br><span class="line"><span class="javascript"> <span class="keyword">else</span> <span class="comment">//not tested, should be used by IE5, IE6 in quirks mode</span></span></span><br><span class="line"><span class="javascript">  kgmy=event.clientY+kgy1+<span class="built_in">document</span>.body.scrollTop;</span></span><br><span class="line"></span><br><span class="line"> kgmx=event.clientX+kgx1;</span><br><span class="line"> if (kgmx&lt;80) kgmx=80;</span><br><span class="line"><span class="javascript"> <span class="keyword">if</span> (<span class="built_in">document</span>.documentElement &amp;&amp; <span class="built_in">document</span>.documentElement.clientHeight &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmx&gt;<span class="built_in">document</span>.documentElement.clientWidth-<span class="number">80</span>) kgmx=<span class="built_in">document</span>.documentElement.clientWidth-<span class="number">80</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmy&gt;<span class="built_in">document</span>.documentElement.clientHeight-<span class="number">80</span>) kgmy=<span class="built_in">document</span>.documentElement.clientHeight-<span class="number">80</span>;</span></span><br><span class="line"><span class="javascript"> &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmx&gt;<span class="built_in">document</span>.body.clientWidth-<span class="number">80</span>) kgmx=<span class="built_in">document</span>.body.clientWidth-<span class="number">80</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmy&gt;<span class="built_in">document</span>.body.clientHeight-<span class="number">80</span>) kgmy=<span class="built_in">document</span>.body.clientHeight-<span class="number">80</span>;</span></span><br><span class="line"> &#125;</span><br><span class="line"> if (kgmy&lt;80) kgmy=80;</span><br><span class="line"> if (!vis) kill();</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.onmousemove=mouseIEO;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">var</span> sum=<span class="built_in">parseInt</span>(D.length+F+H.length+M.length+S.length)+<span class="number">1</span>;</span></span><br><span class="line">for (i=0; i &lt; sum; i++)&#123;</span><br><span class="line">Dy[i]=0;</span><br><span class="line">Dx[i]=0;</span><br><span class="line">if (n7) &#123;</span><br><span class="line"><span class="javascript"> DY[i]=<span class="built_in">document</span>.documentElement.clientHeight/<span class="number">2</span>;</span></span><br><span class="line"><span class="javascript"> DX[i]=<span class="built_in">document</span>.documentElement.clientWidth/<span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript"> DY[i]=<span class="built_in">document</span>.body.clientHeight/<span class="number">2</span>;</span></span><br><span class="line"><span class="javascript"> DX[i]=<span class="built_in">document</span>.body.clientWidth/<span class="number">2</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">ClockAndAssign</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">time=<span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">secs=time.getSeconds();</span><br><span class="line"><span class="javascript">sec=<span class="built_in">Math</span>.PI*(secs-<span class="number">15</span>)/<span class="number">30</span>;</span></span><br><span class="line">mins=time.getMinutes();</span><br><span class="line"><span class="javascript">min=<span class="built_in">Math</span>.PI*(mins-<span class="number">15</span>)/<span class="number">30</span>;</span></span><br><span class="line">hrs=time.getHours();</span><br><span class="line"><span class="javascript">hr=<span class="built_in">Math</span>.PI*(hrs-<span class="number">3</span>)/<span class="number">6</span>+<span class="built_in">Math</span>.PI*<span class="built_in">parseInt</span>(time.getMinutes())/<span class="number">360</span>;</span></span><br><span class="line">if (ie)&#123;</span><br><span class="line"><span class="javascript">anti_scrollbars.style.top=<span class="built_in">window</span>.document.body.scrollTop;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">//added +&#x27;px&#x27; for mozilla firebird compatibility</span></span></span><br><span class="line">for (i=0; i &lt; S.length; i++)&#123;</span><br><span class="line"><span class="javascript"> tmps[i].top=Dy[D.length+F+H.length+M.length+i]+kgy2+(i*kgh2)*<span class="built_in">Math</span>.sin(sec)+kgs+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript"> tmps[i].left=Dx[D.length+F+H.length+M.length+i]+kgx2+(i*kgw2)*<span class="built_in">Math</span>.cos(sec)+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"> &#125;</span><br><span class="line">for (i=0; i &lt; M.length; i++)&#123;</span><br><span class="line"><span class="javascript"> tmpm[i].top=Dy[D.length+F+H.length+i]+kgy2+(i*kgh2)*<span class="built_in">Math</span>.sin(min)+kgs+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript"> tmpm[i].left=Dx[D.length+F+H.length+i]+kgx2+(i*kgw2)*<span class="built_in">Math</span>.cos(min)+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"> &#125;</span><br><span class="line">for (i=0; i &lt; H.length; i++)&#123;</span><br><span class="line"><span class="javascript"> tmph[i].top=Dy[D.length+F+i]+kgy2+(i*kgh2)*<span class="built_in">Math</span>.sin(hr)+kgs+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript"> tmph[i].left=Dx[D.length+F+i]+kgx2+(i*kgw2)*<span class="built_in">Math</span>.cos(hr)+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"> &#125;</span><br><span class="line">for (i=0; i &lt; F; i++)&#123;</span><br><span class="line"><span class="javascript"> tmpf[i].top=Dy[D.length+i]+kgh1*<span class="built_in">Math</span>.sin(-<span class="number">1.0471</span>+i*kga1*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+kgs+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript"> tmpf[i].left=Dx[D.length+i]+kgw1*<span class="built_in">Math</span>.cos(-<span class="number">1.0471</span>+i*kga1*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"> &#125;</span><br><span class="line">for (i=0; i &lt; D.length; i++)&#123;</span><br><span class="line"><span class="javascript"> tmpd[i].top=Dy[i]+kgh1*<span class="number">1.5</span>*<span class="built_in">Math</span>.sin(-sec+i*kga2*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+kgs+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="javascript"> tmpd[i].left=Dx[i]+kgw1*<span class="number">1.5</span>*<span class="built_in">Math</span>.cos(-sec+i*kga2*<span class="built_in">Math</span>.PI/<span class="number">180</span>)+<span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (!vis)<span class="built_in">clearTimeout</span>(tmr);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">Delay</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">kgs=(ie)?<span class="number">0</span>:<span class="built_in">window</span>.pageYOffset;</span></span><br><span class="line"><span class="javascript">Dy[<span class="number">0</span>]=(vis)?<span class="built_in">Math</span>.round(DY[<span class="number">0</span>]+=((kgmy)-DY[<span class="number">0</span>])*kgv1):-<span class="number">100</span>;</span></span><br><span class="line"><span class="javascript">Dx[<span class="number">0</span>]=(vis)?<span class="built_in">Math</span>.round(DX[<span class="number">0</span>]+=((kgmx)-DX[<span class="number">0</span>])*kgv1):-<span class="number">100</span>;</span></span><br><span class="line">for (i=1; i &lt; sum; i++)&#123;</span><br><span class="line"><span class="javascript">Dy[i]=(vis)?<span class="built_in">Math</span>.round(DY[i]+=(Dy[i-<span class="number">1</span>]-DY[i])*kgv1):-<span class="number">100</span>;</span></span><br><span class="line"><span class="javascript">Dx[i]=(vis)?<span class="built_in">Math</span>.round(DX[i]+=(Dx[i-<span class="number">1</span>]-DX[i])*kgv1):-<span class="number">100</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript">tmr=<span class="built_in">setTimeout</span>(<span class="string">&#x27;Delay()&#x27;</span>,kgv2);</span></span><br><span class="line">ClockAndAssign();</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload=Delay;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onresize=WindowResize;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">WindowResize</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"> if (kgmx&lt;80) kgmx=80;</span><br><span class="line"> if (kgmy&lt;80) kgmy=80;</span><br><span class="line"> if (o7)&#123;</span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmx&gt;<span class="built_in">document</span>.body.clientWidth-<span class="number">80</span>) kgmx=<span class="built_in">document</span>.body.clientWidth-<span class="number">80</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmy&gt;<span class="built_in">document</span>.body.clientHeight-<span class="number">80</span>) kgmy=<span class="built_in">document</span>.body.clientHeight-<span class="number">80</span>;</span></span><br><span class="line"> &#125; </span><br><span class="line"> if (n7) &#123;</span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmx&gt;<span class="built_in">document</span>.documentElement.clientWidth-<span class="number">80</span>) kgmx=<span class="built_in">document</span>.documentElement.clientWidth-<span class="number">80</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmy&gt;<span class="built_in">document</span>.documentElement.clientHeight-<span class="number">80</span>) kgmy=<span class="built_in">document</span>.documentElement.clientHeight-<span class="number">80</span>;</span></span><br><span class="line"> &#125;</span><br><span class="line"> if (ie) &#123;</span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmx&gt;<span class="built_in">document</span>.body.clientWidth-<span class="number">80</span>) kgmx=<span class="built_in">document</span>.body.clientWidth-<span class="number">80</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (kgmy&gt;<span class="built_in">document</span>.body.clientHeight-<span class="number">80</span>) kgmy=<span class="built_in">document</span>.body.clientHeight-<span class="number">80</span>;</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="comment">//--&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>拷贝进txt文件，后缀改为html，双击打开，可看到效果。</p><p>来源下载nc的网站。</p>]]></content>
      
      
      <categories>
          
          <category> Candy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html5&amp;canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面试题（收集于视频、博客、野史、民间传说）</title>
      <link href="2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/"/>
      <url>2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="1、面向对象"><a href="#1、面向对象" class="headerlink" title="1、面向对象"></a>1、面向对象</h1><p>对比面向过程，是两种不同的处理问题的角度</p><p>面向过程更注重事情的每一个步骤及顺序，面向对象更注重事情有哪些参与者、及各自需要做什么</p><p>面向对象三大特征：</p><p><strong>封装</strong>：内部细节对外部调用透明，外部调用无需修改或关心内部实现</p><p><strong>继承</strong>：子类共性的方法或属性直接使用父类，而不需要自己再定义，只需扩展自己个性化。</p><p><strong>多态</strong>：基于对象所属类的不同，外部对同一方法的调用，实际执行的逻辑不同。</p><h1 id="2、JDK、JRE、JVM三者区别和联系"><a href="#2、JDK、JRE、JVM三者区别和联系" class="headerlink" title="2、JDK、JRE、JVM三者区别和联系"></a>2、JDK、JRE、JVM三者区别和联系</h1><p>JDK是Java Development Kit，即Java开发工具，是给使用Java开发程序的人使用的</p><p>JRE是Java Runtime Environment , 即Java运行时环境</p><p>JVM是Java Virtual Machine，即Java虚拟机</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210416173438596.png" alt="image-20210416173438596"></p><h1 id="3、-和equals"><a href="#3、-和equals" class="headerlink" title="3、==和equals"></a>3、==和equals</h1><p>==对比的是栈中的值，基本数据类型是变量值，引用类型是堆中内存对象的地址</p><p>equals: Object中默认也是采用==比较，通常会重写(如String类的equals比较内容，还有包装类也重写了equals，如Double、Integer)</p><p>Object</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">this</span> == obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>String</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object anObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == anObject) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">            String anotherString = (String)anObject;</span><br><span class="line">            <span class="keyword">int</span> n = value.length;</span><br><span class="line">            <span class="keyword">if</span> (n == anotherString.value.length) &#123;</span><br><span class="line">                <span class="keyword">char</span> v1[] = value;</span><br><span class="line">                <span class="keyword">char</span> v2[] = anotherString.value;</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="4-final"><a href="#4-final" class="headerlink" title="4.final"></a>4.final</h1><ul><li>修饰类：类不能被继承</li><li>修饰方法：方法不可以被子类覆盖，但可以重载</li><li>修饰变量：变量一旦被赋值就不可以更改它的值</li></ul><p>局部内部内和匿名内部类只能访问局部final变量</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.springboot.panda;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">        <span class="comment">// 匿名内部类</span></span><br><span class="line">        <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(a);</span><br><span class="line">                System.out.println(b);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OutClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age = <span class="number">12</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">outPrint</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">InClass</span> </span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InPrint</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(x);</span><br><span class="line">                System.out.println(age);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">new</span> InClass().InPrint();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先，内部类和外部类都处于同一个级别的，内部类不会因为定义在方法中就会随着方法的执行完毕就被销毁。当外部类的方法结束时，局部变量就会被销毁，但内部类对象可能还存在，这里就会出现一个矛盾：内部类对象访问了一个不存在的变量。为了解决这个问题，就将局部变量复制了一份作为内部类的成员变量，这样当局部变量死亡后，内部类仍可以访问它，实际访问的是外部类局部变量的拷贝。</p><h1 id="5-String、StringBuffer、StringBuilder区别及使用场景"><a href="#5-String、StringBuffer、StringBuilder区别及使用场景" class="headerlink" title="5.String、StringBuffer、StringBuilder区别及使用场景"></a>5.String、StringBuffer、StringBuilder区别及使用场景</h1><p>String是final修饰的，不可变，每次操作都是产生新的String对象</p><p>StringBuffer和StringBuilder都是在原对象上操作</p><p>StringBuffer是线程安全的，StringBuilder线程不安全的</p><p>StringBuffer方法都是synchronized修饰的</p><p>性能：StringBuilder&gt;StringBuffer&gt;String</p><p>场景：经常需要改变字符串内容时使用StringBuffer、StringBuilder</p><p>优先使用StringBuilder，多线程使用共享变量时使用StringBuffer</p><h1 id="6-重载和重写的区别"><a href="#6-重载和重写的区别" class="headerlink" title="6.重载和重写的区别"></a>6.重载和重写的区别</h1><p><strong>重载</strong>：发生在同一个类中，方法名必须相同，参数类型不同、个数不同、顺序不同，方法的返回值和访问修饰符可以不同，发生在编译时。</p><p><strong>重写</strong>：发生在父子类中，方法名、参数列表必须相同，返回值范围小于等于父类，抛出的异常返回小于等于父类，访问修饰符范围大于等于父类；如果父类方法访问修饰符为private则子类就不能重写该方法。</p><h1 id="7-接口和抽象类的区别"><a href="#7-接口和抽象类的区别" class="headerlink" title="7. 接口和抽象类的区别"></a>7. 接口和抽象类的区别</h1><ul><li>抽象类可以存在普通成员函数，而接口中只能存在public abstract方法。</li><li>抽象类中的成员变量可以是各种类型，而接口中的成员变量只能是public static final类型的。</li><li>抽象类只能继承一个，接口可以实现多个。 </li></ul><p>接口的设计，为了对类的行为约束，相当于定义规范</p><p>抽象类的设计，为了代码复用，当不同的类具有某些相同的行为，可以让这些类都派生于一个抽象类。抽象类中可以有具体方法，也可以有抽象方法，不能实例化</p><h1 id="8-list和set的区别"><a href="#8-list和set的区别" class="headerlink" title="8.list和set的区别"></a>8.list和set的区别</h1><p><strong>list</strong>：有序，按对象进入的顺序保存对象，可重复，允许多个null元素对象，可以使用iterator取出所有元素，再逐一遍历，还可以使用get（int index）获取指定下标的元素。</p><p><strong>set</strong>：无序，不可重复，最多允许有一个null元素对象，取元素只能用iterator接口取得所有元素，再逐一遍历各个元素。</p><h1 id="9-hashCode和equals"><a href="#9-hashCode和equals" class="headerlink" title="9.hashCode和equals"></a>9.hashCode和equals</h1><p>hashCode()作用是获取哈希码，也称散列码；它实际返回int整数，这个哈希码的作用是确定该对象在哈希表中的索引位置。散列表存储的是键值对（key-value），它的特点：能根据“键”快速地检索出对应的“值”，可以快速在堆中找到对象。</p><p>为什么要有hashCode？</p><p>以hashSet如何检查重复为例子来说明为什么要有hashCode：</p><p>对象加入HashSet时，hashSet会先计算对象的hashCode值来判断对象加入的位置，看该位置是否有值，如果没有，HashSet会假设对象没有重复出现，如果有值，这时会调用equals（）方法来检查两个对象是否真的相同。如果两者相同，hashset就不会让其加入操作成功。如果不同的话，就会重新散列到其他位置。这样大大减少了equals的次数。相当就大大提高执行速度。  </p><ul><li>如果两个对象相等，则hashCode一定也是相同的</li><li>两个对象相等，对两个对象分别调用equals方法都返回true</li><li>两个对象有相同hashCode值，它们也不一定是相等的</li><li>因此，equals方法被覆盖过，则hashCode方法也必须被覆盖</li><li>hashCode（）的默认行为是对堆上的对象产生独特值，如果没有重写hashCode（），则该class的两个对象无论如何都不会相等（即使这两个对象指向相同的数据）</li></ul><h1 id="10-ArrayList和LinkedList区别"><a href="#10-ArrayList和LinkedList区别" class="headerlink" title="10.ArrayList和LinkedList区别"></a>10.ArrayList和LinkedList区别</h1><p>ArrayList：基于动态数组，连续内存存储，适合下标访问（随机访问），扩容机制：因为数组长度固定，超出长度存数据时需要新建数组，然后将老数组的数据拷贝到新数组，如果不是尾部插入数据还会涉及到元素的移动，使用尾插法并指定初始容量可以极大提升性能，甚至超过LinkedList（需要创建大量的node对象）。</p><p>LinkedList：基于链表，可以存储在分散的内存中，适合做数据插入及删除操作，不适合查询；需要逐一遍历LinkedList必须使用iterator不能使用for循环，因为每次for循环体内通过get（i）取得某一元素时都需要对list重新进行遍历，性能消耗极大。创建对象node消耗性能</p><h1 id="11-HashMap和HashTable的区别？底层实现是什么？"><a href="#11-HashMap和HashTable的区别？底层实现是什么？" class="headerlink" title="11. HashMap和HashTable的区别？底层实现是什么？"></a>11. HashMap和HashTable的区别？底层实现是什么？</h1><p>1.区别：</p><p>​    （1）HashMap线程非安全，HashTable方法使用synchronized修饰，线程安全；</p><p>​    （2）HashMap允许key和value为null，而HashTable不允许；</p><p>2.底层实现：数组+链表实现</p><p>jdk8开始在链表高度到8，数组长度超过64，链表转变为红黑树，元素以内部类Node节点存在</p><ul><li>计算key的hash值，二次hash然后对数组长度取模，对应到数组下标</li><li>如果没有产生hash冲突（下标位置没有元素），则直接创建Node存入数组</li><li>如果产生hash冲突，先进行equals比较，相同则取代该元素，不同，则判断链表高度插入链表， 链表高度达到8，并且数组长度到64则转变为红黑树，长度低于6则将红黑树转为链表</li><li>key为null，存在下标0的位置</li></ul><p>数组扩容</p><h1 id="12-ConcurrentHashMap原理，jdk7和jdk8版本的区别"><a href="#12-ConcurrentHashMap原理，jdk7和jdk8版本的区别" class="headerlink" title="12.ConcurrentHashMap原理，jdk7和jdk8版本的区别"></a>12.ConcurrentHashMap原理，jdk7和jdk8版本的区别</h1><p>jdk7：</p><p>数据结构：ReentrantLock+Segment+HashEntry</p><p>jdk8: </p><p>数据结构：synchronized+CAS+Node+红黑树</p><h1 id="13-如何实现一个IOC容器"><a href="#13-如何实现一个IOC容器" class="headerlink" title="13.如何实现一个IOC容器"></a>13.如何实现一个IOC容器</h1><p>1.配置文件配置包扫描路径</p><p>2.递归包扫描获取.class文件</p><p>3.反射、确定需要交给IOC管理的类</p><p>4.对需要注入的类进行依赖注入</p><h1 id="14-什么是字节码？采用字节码的好处是什么？"><a href="#14-什么是字节码？采用字节码的好处是什么？" class="headerlink" title="14.什么是字节码？采用字节码的好处是什么？"></a>14.什么是字节码？采用字节码的好处是什么？</h1><p>jvm能理解的代码叫字节码（.class文件）</p><p>java源程序经过编译器编译成字节码，字节码有虚拟机解释执行，虚拟机将每一条要执行的字节码送给解释器，解释器将其翻译成特定机器上的机器码，然后在特定的机器上运行，这也就是解释了Java的编译与解释并存的特点。</p><h1 id="15-Java类加载器有哪些"><a href="#15-Java类加载器有哪些" class="headerlink" title="15.Java类加载器有哪些"></a>15.Java类加载器有哪些</h1><p>JDk自带有三个类加载器：bootstrap ClassLoader、ExtClassLoader、AppClassLoader.</p><p>BootStrapClassLoader是ExtClassLoader的父类加载器，默认负责加载%JAVA_HOME%lib下的jar包和class文件。</p><p>ExtClassLoader是AppClassLoader的父类加载器，负责加载%JAVA_HOME%/lib/ext文件夹下的jar包和class类。</p><p>AppClassLoader是自定义类加载器的父类，负责加载classpath下的类文件。系统类加载器、线程上下文加载器</p><p>自定义类加载器</p><h1 id="16-双亲委派模型"><a href="#16-双亲委派模型" class="headerlink" title="16. 双亲委派模型"></a>16. 双亲委派模型</h1><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210417190414649.png" alt="image-20210417190414649"></p><p>当一个Hello.class这样的文件要被加载时。不考虑我们自定义类加载器，首先会在AppClassLoader中检查是否加载过，如果有那就无需再加载了。如果没有，那么会拿到父加载器，然后调用父加载器的loadClass方法。父类中同理也会先检查自己是否已经加载过，如果没有再往上。注意这个类似递归的过程，直到到达Bootstrap classLoader之前，都是在检查是否加载过，并不会选择自己去加载。直到BootstrapClassLoader，已经没有父加载器了，这时候开始考虑自己是否能加载了，如果自己无法加载，会下沉到子加载器去加载，一直到最底层，如果没有任何加载器能加载，就会抛出ClassNotFoundException。<br>————————————————<br>版权声明：本文为CSDN博主「IT烂笔头」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/codeyanbao/article/details/82875064">https://blog.csdn.net/codeyanbao/article/details/82875064</a></p><p>双亲委派模型的好处：</p><ul><li>主要是为了安全性，避免用户自己编写的类动态替换Java的一些核心类，比如String。</li><li>同时也避免了类的重复加载，因为jvm中区别不同类，不仅仅是根据类名，相同的class文件被不同的ClassLoader加载就是不同的两个类</li></ul><h1 id="17-Java中的异常体系"><a href="#17-Java中的异常体系" class="headerlink" title="17.Java中的异常体系"></a>17.Java中的异常体系</h1><p>Java中的所有异常都来自顶级父类Throwable</p><p>Throwable下有两个子类Exception和Error</p><p>Error是程序无法处理的错误，一旦出现这个错误，则程序将被迫停止运行。（OOM）</p><p>Exception不会导致程序停止，又分为两个部分RuntimeException运行时异常和CheckedException检查异常。 RuntimeException常常发生在程序运行过程中，会导致程序当前线程执行失败，CheckedException常常发生在程序编译过程中，会导致程序编译不通过。</p><h1 id="18-GC如何判断对象可以被回收"><a href="#18-GC如何判断对象可以被回收" class="headerlink" title="18.GC如何判断对象可以被回收"></a>18.GC如何判断对象可以被回收</h1><ul><li>引用计数法：每个对象有一个引用计数属性，新增一个引用时计数加1，引用释放时计数减1，计数为0时可以回收</li><li>可达性分析法（Java采用）：从GC Roots开始向下搜索， 搜索所走过的路径称为引用链。当一个对象到GC Roots没有任何引用链时，则证明此对象是不可用的，那么虚拟机就判断是可回收对象。</li></ul><blockquote><p>引用计数法，可能会出现A引用了B，B又引用了A，这时候就算他们都不再使用了，但因为相互引用计数器=1 永远无法被回收</p></blockquote><p>GC Roots的对象有：</p><ul><li>虚拟机栈（栈帧中的本地变量表）中引用的对象</li><li>方法区中类静态属性引用的对象</li><li>方法区中常量引用的对象</li><li>本地方法栈JNI（即一般说得Native方法）引用的对象</li></ul><h1 id="19-线程的生命周期，线程有哪些状态"><a href="#19-线程的生命周期，线程有哪些状态" class="headerlink" title="19.线程的生命周期，线程有哪些状态"></a>19.线程的生命周期，线程有哪些状态</h1><ol><li><p>线程通常有5种状态，创建，就绪，运行，阻塞，死亡</p></li><li><p>阻塞的情况又分为3种</p><ul><li>等待阻塞：运行的线程执行wait方法，该线程会释放占用的所有资源，JVM会把该线程放入“等待池”中，进入这个状态后，是不能自动唤醒的，必须依靠其他线程调用notify或notifyAll方法才能被唤醒，wait是object类的方法</li><li>同步阻塞：运行的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则JVM会把该线程放入“锁池”中。</li><li>其他阻塞：运行的线程执行sleep或join方法，或者发出了I/O请求时，JVM会把该线程置为阻塞状态。当sleep状态超时、join等待线程终止或者超时、或者I/O处理完毕时，线程重新转入就绪状态。sleep是Thread类的方法。</li></ul></li><li><blockquote><ol><li>新建状态（New）：新创建了一个线程对象。</li><li>就绪状态（Runnable）：线程对象创建后，其他线程调用了该对象的start方法，该状态的线程位于可运行线程池中，变得可运行，等待获取CPU的使用权。</li><li>运行状态（Running）：就绪状态的线程获取了CPU，执行程序代码。</li><li>阻塞状态（Blocked）：阻塞状态是线程因为某种原因放弃CPU使用权，暂停运行。直到线程进入就绪状态，才有机会转到运行状态。</li><li>死亡状态（Dead）：线程执行完了或者因为异常退出了run方法，该线程结束生命周期。</li></ol></blockquote></li></ol><h1 id="20-sleep（），wait（），join（），yield（）的区别"><a href="#20-sleep（），wait（），join（），yield（）的区别" class="headerlink" title="20.sleep（），wait（），join（），yield（）的区别"></a>20.sleep（），wait（），join（），yield（）的区别</h1><ol><li><p>锁池</p><p> 所有需要竞争同步锁的线程都会放在锁池中，比如当前对象的锁已经被其中一个线程得到，则其他线程需要在这个锁池进行等待，当前面的线程释放同步锁后锁池中的线程去竞争同步锁，当某个线程得到后会进入就绪队列进行等待cpu资源分配。</p></li><li><p>等待池</p><p> 当我们调用wait（）方法后，线程会放到等待池中，等待池的线程不会竞争同步锁。只有调用了notify（）或notifyAll（）后等待池的线程才会开始竞争锁，notify（）是随机从等待池选出一个线程放到锁池，而notifyAll（）是将等待池的所有线程放到锁池中</p></li><li><p>sleep是Thread类的静态本地方法，wait则是Object类的本地方法。</p></li><li><p>sleep方法不会释放lock，但是wait会释放，而且会加入到等待队列中。</p><blockquote><p>sleep就是把cpu的执行资格和执行权限释放出去，不再允许此线程，当定时时间结束再取回cpu资源，参与cpu的调度，获取到cpu资源后就可以继续运行了。而sleep时该线程有锁，那么slppe不会释放锁，而是把锁带着进入了冻结状态，也就是说其他需要这个锁的线程根本不可能获取到锁，也就是说无法执行程序。</p></blockquote></li><li><p>sleep方法不依赖于同步器synchronized,但是wait需要依赖synchronized</p></li><li><p>sleep不需要被唤醒（休眠之后退出阻塞），但是wait需要</p></li><li><p>sleep一般用于当前线程休眠，或者轮询暂停操作，wait则多用于多线程之间的通信。</p></li><li><p>sleep会让出CPU执行时间且强制上下文切换，但wait则不一定，wait后可能还是有机会重新竞争到锁继续执行的。</p></li></ol><p>yield（）执行后线程直接进入就绪状态，马上释放了cpu的执行权，但是依然保留了cpu的执行资格，所以有可能cpu下次进行线程调度还会让这个线程获取到执行权继续执行</p><p>join（）执行后线程进入阻塞状态，例如在线程B中调用线程A的join，那么线程B会进入阻塞队列，直到线程A结束或中断线程。</p><h1 id="21-说说你对线程安全的理解"><a href="#21-说说你对线程安全的理解" class="headerlink" title="21.说说你对线程安全的理解"></a>21.说说你对线程安全的理解</h1><p>不是线程安全，应该是内存安全，堆是共享内存，可以被所有线程访问</p><blockquote><p>当多个线程访问一个对象时，如果不用进行额外的同步控制或其他的协调操作，调用这个对象的行为都可以获得正确的结果，我们就说这个对象时线程安全的。</p></blockquote><p><strong>堆</strong>是进程和线程共有的空间，分全局堆和局部堆。全局堆就是所有没有分配的空间，局部堆就是用户分配的空间。堆在操作系统对进程初始化的时候分配，运行过程中也可以像系统要额外的堆，但是用完了要还给操作系统，要不然就是内存泄漏。</p><p><strong>栈</strong>是每个线程独有的，保存其运行状态和局部变量的。栈在线程开始的时候初始化，每个线程的栈相互独立。因此，栈是线程安全的。操作系统在切换线程的时候会自动切换栈。栈空间不需要在高级程序语言里面显示的分配和释放。</p><p>目前主流操作系统都是多任务的，即多个进程同时运行。为了保证安全，每个进程只能访问分配给自己的内存空间，而不能访问别的进程的，这是由操作系统保障的。</p><p>在每个进程的内存空间中都会有一块特殊的公共区域，通常称为堆（内存）。进程内的所有线程都可以访问到该区域，这就是造成问题的潜在原因。</p><h1 id="22-Thread、Runable的区别"><a href="#22-Thread、Runable的区别" class="headerlink" title="22.Thread、Runable的区别"></a>22.Thread、Runable的区别</h1><p>Thread是类， 实现了Runable接口，其他就是使用的区别。</p><h1 id="23-说说你对守护线程（后台线程，对比用户线程）的理解"><a href="#23-说说你对守护线程（后台线程，对比用户线程）的理解" class="headerlink" title="23.说说你对守护线程（后台线程，对比用户线程）的理解"></a>23.说说你对守护线程（后台线程，对比用户线程）的理解</h1><p>守护线程：为所有非守护线程提供服务的线程，任何一个守护线程都是整个JVM中所有非守护线程的保姆；</p><p>守护线程的作用是什么？</p><p>举例：GC垃圾回收线程。当我们的程序中不再有任何运行的Thread，程序就不会再产生垃圾，垃圾回收器就无事可做，所以当垃圾回收器是JVM上仅剩的线程时，垃圾回收线程会自动离开。</p><p>Java自带的多线程框架，比如ExecutorService，会将守护线程转换为用户线程，所以如果要使用后台线程就不能用Java的线程池。</p><h1 id="24-ThreadLocal的原理和使用场景"><a href="#24-ThreadLocal的原理和使用场景" class="headerlink" title="24.ThreadLocal的原理和使用场景"></a>24.ThreadLocal的原理和使用场景</h1><p>ThreadLocalMap容器属于当前的线程，由一个个Entry对象构成</p><p>Entry由ThreadLocal和Object构成</p><p>当执行set方法时，ThreadLocal首先会获取当前线程对象，然后获取当前线程的ThreadLocalMap对象。再以当前ThreadLocal对象为key，将值存储进ThreadLocalMap对象中。</p><p>当执行get方法时，ThreadLocal首先会获取当前线程对象，然后获取当前线程的ThreadLocalMap对象。再以当前ThreadLocal对象为key，获取对应的value。</p><p>使用场景：</p><ol><li>在进行对象跨层传递的时候，使用ThreadLocal可以避免多次传递，打破层次间的约束。</li><li>线程间数据隔离。</li><li>进行事务操作，用于存储线程事务信息。</li><li>数据库连接，Session回话管理。</li></ol><h1 id="25-ThreadLocal内存泄漏的原因，如何避免"><a href="#25-ThreadLocal内存泄漏的原因，如何避免" class="headerlink" title="25. ThreadLocal内存泄漏的原因，如何避免"></a>25. ThreadLocal内存泄漏的原因，如何避免</h1><p><strong>内存泄漏</strong>：不再会被使用的对象或者变量占用的内存不能被回收</p><p><strong>OOM</strong>：内存不够用</p><p>内存泄漏会导致OOM</p><p><strong>强引用</strong>：使用最普遍的引用（new），一个对象具有强引用，不会被垃圾回收器回收。当内存空间不足时，Java虚拟机宁愿抛出OOM，时程序异常终止，也不会回收对象。</p><p>如果想取消强引用和某个对象之间的关联，可以显示地将引用赋值为null，这样JVM在合适的时间就会回收该对象。</p><p><strong>弱引用</strong>：JVM进行垃圾回收时，无论内存是否充足，都会回收被弱引用关联的对象，在Java中，用java.lang.ref.WeakReference类来表示。可以在缓存中使用弱引用。</p><p>ThreadLocal正确的使用：</p><ul><li>每次使用完ThreaLocal都调用它的remove()方法清除数据</li><li>将ThreadLocal变量定义成private static，这样就一直存在ThreadLocal的弱引用，也就能保证任何时候都能通过ThreadLocal的弱引用访问到Entry的value值，进行清除掉。</li></ul><h1 id="26-并发、并行、串行"><a href="#26-并发、并行、串行" class="headerlink" title="26.并发、并行、串行"></a>26.并发、并行、串行</h1><p>串行在时间上不可能发生重叠，前一个任务没有搞完，下一个任务就只能等着</p><p>并行在时间上是重叠的，两个任务在同一时刻互不干扰地同时执行。（多核CPU）</p><p>并发运行两个任务彼此干扰。统一时间点、只有一个任务运行，交替执行。</p><h1 id="27-并发的三大特性"><a href="#27-并发的三大特性" class="headerlink" title="27.并发的三大特性"></a>27.并发的三大特性</h1><ul><li><p>原子性(synchronized)</p><p>  指在一个操作cpu不可以在中途暂停然后再调度，即不被中断操作，要不全部执行完成，要不都不执行。</p><p>  但是原子性不能保证线程安全，虽然前3步是原子操作，但第4步由操作系统决定</p><p>  <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210417222719568.png" alt="image-20210417222719568"></p></li><li><p>可见性（volatile、synchronized、final）</p><p>  当多线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看到修改的值。</p><p>  AtomicInteger—–&gt;volatitle(可见性、有序性)+cas（原子性）</p></li><li><p>有序性(volatile、synchronized)</p><p>  虚拟机不一定按照我们写的代码顺序来执行，有可能发生指令重排</p></li></ul><h1 id="28-为什么用线程池？解释线程池参数？"><a href="#28-为什么用线程池？解释线程池参数？" class="headerlink" title="28.为什么用线程池？解释线程池参数？"></a>28.为什么用线程池？解释线程池参数？</h1><ol><li>降低资源消耗；提高线程利用率，降低创建和销毁线程的消耗。</li><li>提高响应速度；任务来了，直接有线程可用可执行，而不是先创建线程，再执行。</li><li>提高线程的可管理性；线程是稀缺资源，使用线程池可以统一分配调优监控。</li></ol><ul><li><p><code>corePoolSize</code>代表核心线程数，也就是正常情况下创建工作的线程数，这些线程创建后不会消除，而是一直常驻线程池</p></li><li><p><code>maxinumPoolSize</code>代表的是最大线程数，表示最大允许被创建的线程数。</p></li><li><p><code>keepAliveTime</code>表示超出超出核心线程数的线程在这些时间都空闲的话，会被消除</p></li><li><p><code>workQueue</code>用来存放待执行的任务，假设我们现在的核心线程都已经被使用，还有任务进来则全部放入队列，直到整个队列被放满但任务再进入则会创建新的线程</p></li><li><p><code>ThreadFactory</code>线程工厂，用来生产线程的</p></li><li><p><code>Handler</code>任务拒绝策略，1.当我们调用shutdown等方法关闭线程池后。这时候及时线程池内部还有没执行完的任务正在执行，但是由于线程池已经关闭，我们再继续向线程池提交任务就会遭到拒绝。2.当达到最大线程数，线程池已经没有能力继续处理新提交的任务时，这时也拒绝。</p><p>  拒绝策略:</p><p>  ThreadPoolExecutor.AbortPolicy:丢弃任务并抛出RejectedExecutionException异常。 ThreadPoolExecutor.DiscardPolicy：丢弃任务，但是不抛出异常。 ThreadPoolExecutor.DiscardOldestPolicy：丢弃队列最前面的任务，然后重新提交被拒绝的任务 ThreadPoolExecutor.CallerRunsPolicy：由调用线程（提交任务的线程）处理该任务.</p></li></ul><h1 id="29-简述线程池处理流程"><a href="#29-简述线程池处理流程" class="headerlink" title="29.简述线程池处理流程"></a>29.简述线程池处理流程</h1><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210417230211337.png" alt="image-20210417230211337"></p><h1 id="30-线程池中阻塞队列的作用？为什么是先添加队列而不是先创建最大线程？"><a href="#30-线程池中阻塞队列的作用？为什么是先添加队列而不是先创建最大线程？" class="headerlink" title="30.线程池中阻塞队列的作用？为什么是先添加队列而不是先创建最大线程？"></a>30.线程池中阻塞队列的作用？为什么是先添加队列而不是先创建最大线程？</h1><ol><li><p>一般的队列只能保证作为一个有限长度的缓冲区，如果超出了缓冲长度，就无法保留当前的任务了，阻塞队列通过阻塞可以保留住当前想要继续入队的任务。</p><p> 阻塞队列可以保证任务队列中没有任务时阻塞获取任务的线程，使得线程进入wait状态，释放cpu资源。</p><p> 阻塞队列自带阻塞和唤醒的功能。</p></li><li><p>在创建新线程时，要获取全局锁，这个时候其他线程就都阻塞，影响效率。</p></li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210417231507545.png" alt="image-20210417231507545"></p><p>​    这个例子告诉我们不得已才去做外包</p><h1 id="31-线程池中线程复用原理"><a href="#31-线程池中线程复用原理" class="headerlink" title="31.线程池中线程复用原理"></a>31.线程池中线程复用原理</h1><p>线程池将线程和任务进行解耦，线程是线程，任务是任务，摆脱之前通过Thread创建线程时的一个线程必须对应一个任务的限制。</p><p>​    在线程池中，同一个线程可以从阻塞队列中不断获取新的任务来执行，其核心原理在于线程池对Thread进行了封装，并不是每次执行任务都会调用Thread.start（） 来创建新线程，而是让每个线程去执行一个“循环任务”，在这个任务中不停检查是否有任务需要被执行，如果有则直接执行，也就是调用任务中的run方法，将run方法当成一个普通的方法执行，通过这种方式只使用固定的线程就将所有任务的run方法串联起来。</p><h1 id="32-Spring是什么"><a href="#32-Spring是什么" class="headerlink" title="32.Spring是什么"></a>32.Spring是什么</h1><p>轻量级的开源的J2EE框架。它是一个容器框架，用来封装JavaBean（java对象），中间层框架可以起一个连接作用，比如将struts和hibernate粘合在一起运用。</p><p>Spring是一个轻量级的控制反转（IOC）和面向切面（AOP）的容器框架</p><ul><li>从大小与开销这两方面而言spring都是轻量级的。</li><li>通过IoC技术达到松耦合的目的。</li><li>提供了面向切面编程的丰富支持，允许通过分离应用的业务逻辑与系统级服务进行内聚性的开发。</li><li>提供并管理应用对象（bean）的配置和生命周期，这个意义上是一个容器。</li><li>将简单的组件配置、组合成为复杂的应用，这个意义上是一个框架。</li></ul><h1 id="33-对AOP的理解"><a href="#33-对AOP的理解" class="headerlink" title="33.对AOP的理解"></a>33.对AOP的理解</h1><p>系统是由许多不同的组件所组成的，每一个组件各负责一块特定功能，除了实现自身核心功能，这些组件还承担额外职责</p><p>在OOP设计中，它导致大量代码重复，不利于各个模块的重用</p><p>AOP将程序中的交叉业务逻辑（安全，日志，事务），封装成一个切面，然后注入到目标对象中去，使用了动态代理实现</p><h1 id="34-对IOC的理解"><a href="#34-对IOC的理解" class="headerlink" title="34.对IOC的理解"></a>34.对IOC的理解</h1><p>ioc容器：实际上就是map，里面存的是各种对象（在xml里配置的bean、@repository、@service、@controller、@component），在项目启动的时候会读取配置文件里面的bean节点，根据权限定类名使用反射创建对象放到map里，扫描到打上上述注解的类。</p><p>这个时候map里就有各种对象，接下来我们在代码里使用时，通过DI注入（@autowired、@resource）</p><p>没有引入IOC容器之前，对象A依赖于对象B，B什么时候创建，需要程序员主动new</p><p>引入了IOC容器，当对象A运行到需要对象B时，IOC容器会主动创建一个对象B注入到对象A需要的地方。</p><h1 id="35-BeanFactory和ApplicationContext有什么区别？"><a href="#35-BeanFactory和ApplicationContext有什么区别？" class="headerlink" title="35.BeanFactory和ApplicationContext有什么区别？"></a>35.BeanFactory和ApplicationContext有什么区别？</h1><p>ApplicationContext是BeanFactory的子接口</p><p>ApplicationContext提供更完整的功能：</p><ol><li>继承MessageSource，因此支持国际化</li><li>统一的资源文件访问方式</li><li>提供在监听器中注册bean的事件</li><li>同时加载多个配置文件</li><li>载入多个上下文，每一个上下文都专注于一个特定的层次</li></ol><ul><li>BeanFactory采用延迟加载形式来注入bean的，即只有在使用getBean（） ，才对该Bean进行实例化</li><li>ApplicationContext，它在容器启动时，一次性创建所有的Bean</li><li>ApplicationContext占用内存空间</li></ul><h1 id="36-Spring-Bean的生命周期"><a href="#36-Spring-Bean的生命周期" class="headerlink" title="36.Spring Bean的生命周期"></a>36.Spring Bean的生命周期</h1><ol><li>解析类得到BeanDefinition</li><li>如果有多个构造方法，则要推断构造方法</li><li>确定好构造方法后，进行实例化得到一个对象</li><li>对对象中的加@Autowired注解的属性进行属性填充</li><li>回调Aware方法，比如BeanNameAware，BeanFactoryAware</li><li>调用BeanPostProcessor的初始化前的方法</li><li>调用初始化方法</li><li>调用BeanPostProcessor的初始化后的方法，在这里会进行AOP</li><li>如果当前创建的bean是单例则会放到单例池</li><li>使用bean</li><li>spring容器关闭时调用DisposableBean中的destory（）方法</li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210418000454956.png" alt="image-20210418000454956"></p><h1 id="37-解释下Spring支持的几种bean的作用域"><a href="#37-解释下Spring支持的几种bean的作用域" class="headerlink" title="37.解释下Spring支持的几种bean的作用域"></a>37.解释下Spring支持的几种bean的作用域</h1><ul><li>singleton：默认，每个容器中只有一个bean的实例，单例的模式有BeanFactory自身来维护。该对象的生命周期和spring IOC容器一致，但在第一次被注入时才会创建。</li><li>prototype：为每一个bean请求提供一个实例。在每次注入时都会创建一个新的对象</li><li>request：bean被定义为每个HTTP请求中创建一个单例对象，也就是单个请求中都会复用这个单例对象</li><li>session：与request范围类似，确保每个session中有一个bean的实例，在session过期后，bean会随之失效。</li><li>application：bean被定义在ServletContext的生命周期复用一个单例对象</li><li>websocket：bean被定义在websocket的生命周期中复用一个单例对象</li><li>global-session：全局作用域，现在有得少</li></ul><h1 id="38-Spring框架中的单例Bean是线程安全的么"><a href="#38-Spring框架中的单例Bean是线程安全的么" class="headerlink" title="38.Spring框架中的单例Bean是线程安全的么"></a>38.Spring框架中的单例Bean是线程安全的么</h1><p>不安全的</p><ul><li>有状态就是有数据存储功能</li><li>无状态就是不会保存数据   controller、service和dao本身并不是线程安全的，只是如果调用里面的方法，而且多线程调用一个实例的方法，会在内存中复制变量，这是自己的线程的工作内存，是安全的。</li></ul><p>不要在bean中声明任何有状态的实例变量或类变量，如果必须，那么就使用ThreadLocal把变量变成线程私有的，如果bean的实例变量或类变量需要在多个线程之间共享，那么就只能使用synchronized、lock、CAS等这些实现线程同步的方法。</p><h1 id="39-Spring框架都用到了哪些设计模式"><a href="#39-Spring框架都用到了哪些设计模式" class="headerlink" title="39.Spring框架都用到了哪些设计模式"></a>39.Spring框架都用到了哪些设计模式</h1><p>简单工程：由一个工厂类根据传入的参数，动态决定应该创建哪一个产品类。</p><blockquote><p>spring中的BeanFactory就是简单工厂模式的体现，根据传入一个唯一的标识来获得Bean对象</p></blockquote><p>工厂方法：</p><blockquote></blockquote><p>单例模式：确保一个类仅有一个实例，并提供一个访问它的全局访问点</p><p>适配器模式：</p><p>装饰者模式：</p><p>动态代理：</p><p>观察者模式：</p><p>策略模式： </p><h1 id="40-Spring事务的实现方式和原理以及隔离级别"><a href="#40-Spring事务的实现方式和原理以及隔离级别" class="headerlink" title="40.Spring事务的实现方式和原理以及隔离级别"></a>40.Spring事务的实现方式和原理以及隔离级别</h1><p>在使用Spring框架时，可以有两种使用事务的方式，1.编程式；2.申明式。@Transactional就是申明式的。</p><p>首先，事务这个概念是数据库层面的，Spring只是基于数据库中的事务进行了扩展。</p><p>在方法上加@Transactional注解，就可以开启事务，Spring会基于这个类生成一个代理对象，会将这个代理对象作为bean，当在使用这个代理对象的方法时，如果这个方法上存在@Transaction注解，那么代理逻辑会先把事务的自动提交设置为false，再去执行原本的业务逻辑，如果执行逻辑方法没有出现异常，那么代理逻辑中就会将事务进行提交，如果执行业务方法出现了异常，那么则将事务进行回滚。</p><p>当然，针对那些异常回滚事务是可以配置的，可以利用@Transaction注解中的rollbackFor属性进行配置，默认情况下会对RuntimeException和Error进行回滚。</p><p>Spring事务隔离级别就是数据库的隔离级别：外加一个默认级别</p><ul><li>read uncommitted(读未提交)</li><li>read committed(读已提交) –Oracle默认</li><li>repeatable read(可重复读) –MySQL默认</li><li>serializable(可串行化)</li></ul><blockquote><p>以Spring配置的为准，如果Spring配置的隔离级别数据库不支持，效果取决于数据库。</p></blockquote><p>脏读:一个事务读取到另一个事务还未提交的数据.</p><p>不可重复读:在一个事务中前后两次,由于其他事务对数据进行修改,读取的结果并不致，导致了不可重复读。</p><p>幻读:是指当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行了修改，这种修改涉及到表中的全部数据行。同时，第二个事务也修改这个表中的数据，这种修改是向表中插入一行新数据。那么，以后就会发生操作第一个事务的用户发现表中还有没有修改的数据行，就好象发生了幻觉一样.</p><h1 id="41-Spring事务传播机制"><a href="#41-Spring事务传播机制" class="headerlink" title="41.Spring事务传播机制"></a>41.Spring事务传播机制</h1><p>多个事务方法相互调用时。事务如何在这些方法间传播</p><p>A方法有事务，B方法有或者无事务，那么在A方法中调用B，A、B事务怎么个回滚呢？</p><p>REQUIRED（Spring默认的事务传播类型）：如果当前（调用方）没有事务，则自己（被调用方）新建一个事务，如果当前存在事务，则加入这个事务。</p><p>SUPPORTS：当前存在事务，则加入当前事务，如果当前没有事务，就以非事务方法执行</p><p>MANDATORY：当前存在事务，则加入当前事务，如果当前事务不存在，则抛出异常。</p><p>REQUIRED_NEW：创建一个新事务，如果存在当前事务，则挂起该事务。（A的事务与B的事务各自管各自的）</p><p>NOT_SUPPORTED：以非事务方式执行，如果当前存在事务，则挂起当前事务。</p><p>NEVER：不使用事务，如果当前事务存在，则抛出异常。</p><p>NESTED：如果当前事务存在，则在嵌套事务中执行，否则REQUIRED的操作一样（开启一个事务）(父事务回滚，子事务一定回滚；子事务回滚，父事务不一定回滚)</p><h1 id="42-Spring事务什么时候会失效"><a href="#42-Spring事务什么时候会失效" class="headerlink" title="42.Spring事务什么时候会失效"></a>42.Spring事务什么时候会失效</h1><p>Spring事务的原理AOP，进行了切面增强，那么失效的根本原因是这个AOP不起作用了！</p><ol><li><p>发生自调用，类里面使用this调用本类的方法（this通常省略），此时这个this对象不是代理类，而是UserService对象本身！</p><p> 解决方法很简单，让那个this变成UserService的代理类即可！</p></li><li><p>方法不是public的</p><p> @ Transactional只能用于public方法上，否则事务不会生效；如果要用在非public方法上，可以开启AspectJ代理模式。 </p></li><li><p>数据库不支持事务。（MySQL使用Myisam引擎）</p></li><li><p>没有被Spring管理。（方法上加了@Transactional，类没有放到Spring容器）</p></li><li><p>异常被吃掉，事务不会回滚（或者抛出的异常没有被定义，默认为RuntimeException）</p></li></ol><h1 id="43-什么是bean的自动装配，有哪些方式"><a href="#43-什么是bean的自动装配，有哪些方式" class="headerlink" title="43. 什么是bean的自动装配，有哪些方式"></a>43. 什么是bean的自动装配，有哪些方式</h1><p>开启自动装配，只需要在xml配置文件<bean>中定义“autowire”属性。</bean></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;customer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxx.xxx.Customer&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>autowire属性有五种装配的方法：</p><ul><li><p>no - 缺省情况下，自动装配是通过“ref”属性手动设定。</p><blockquote><p>手动装配：以value或ref的方式明确指定属性值都是手动装配。</p><p>需要通过“ref”属性来连接bean</p></blockquote></li><li><p>byName - 根据bean的属性名称进行自动装配。</p><blockquote><p>Customer的属性名称是person,Spring会将bean id为person的bean通过setter方法进行自动装配。</p><bean id="customer" class="com.xxx.xxx.Customer" autowire="byName"></bean></blockquote></li><li><p>byType</p></li><li><p>constructor - 构造器注入，类似byType</p></li><li><p>autodetect - 如果有构造器，按照构造器；没有构造器，按照byType</p></li></ul><p>@Autowired自动装配bean，可以在字段、setter方法，构造函数上使用。</p><h1 id="44-SpringBoot、SpringMVC、Spring有什么区别"><a href="#44-SpringBoot、SpringMVC、Spring有什么区别" class="headerlink" title="44.SpringBoot、SpringMVC、Spring有什么区别"></a>44.SpringBoot、SpringMVC、Spring有什么区别</h1><p>Spring是IOC容器，用来管理Bean，使用依赖注入实现控制反转，可以很方便的整合各种框架，提供AOP机制弥补OOP的代码重复问题。</p><p>SpringMVC是Spring对web框架的一个解决方案，提供一个总的前端控制器Servlet，用来接收请求，然后定义了一套路由策略（url到handle的映射）及适配执行handle，将handle结果使用视图解析技术生成视图展现给前端。</p><p>SpringBoot是Spring提供的一个快速开发工具包，让程序员更方便、快速地开发spring+springMVC应用，简化了配置（约定了默认配置），整合了一系列的解决方法（starter机制）、redis、mongodb、es，可以开箱即用。</p><h1 id="45-SpringMVC的工作流程"><a href="#45-SpringMVC的工作流程" class="headerlink" title="45.SpringMVC的工作流程"></a>45.SpringMVC的工作流程</h1><ol><li>用户发送请求至前端控制器DispatcherServlet。</li><li>DispatcherServlet收到请求调用HandlerMapping处理器映射器。（url—&gt;handler）</li><li>处理器映射器找到具体的处理器（可以根据xml配置、注解进行查找），生成处理器及处理器拦截器（如果有则生成）一并返回给DispatcherServlet。</li><li>DispatcherServlet调用HandlerAdapter处理器适配器。</li><li>HandlerAdapter经过适配调用具体的处理器（Controller、也叫后端控制器）</li><li>Controller执行后返回ModelAndView。</li><li>HandlerAdapter会将ModelAndView返回给DispatcherServlet。</li><li>DispatcherServlet将ModelAndView传给ViewReslover试图解析器。</li><li>ViewReslover解析后返回具体View。</li><li>DispatcherServlet根据View进行渲染试图。</li><li>DispatcherServlet响应用户。</li></ol><h1 id="46-SpringMVC的主要组件"><a href="#46-SpringMVC的主要组件" class="headerlink" title="46.SpringMVC的主要组件"></a>46.SpringMVC的主要组件</h1><p>Handler：也就是处理器。它直接应对这MVC中的C也就是Controller层，它的具体表现形式有很多，可以是类，也可以是方法。在Controller层中@RequestMapping标注的所有方法都可以看成是一个Handler，只要可以实际处理请求就可以是Handler</p><ol><li><p>HandlerMapping</p><p> 处理器映射器，根据用户请求的资源uri来查找Handler的。在SpringMVC中会有很对请求，每个请求都需要一个Handler处理，具体接收到一个请求之后使用哪个Handler进行，这就是HandlerMapping需要做得事。</p></li><li><p>HandlerAdapter</p><p> 适配器。因为SpringMVC中的Handler可以是任意的形式，只要能处理请求就好，但是Servlet需要的处理方法的结构却是固定的，都是以request和response为参数的方法。如何让固定的Servlet处理方法调用灵活的Handler来进行处理？这就是HandlerAdapter要做得事情。Handler是用来干活的工具；HandlerMapping用来根据需要干的活找到相应的工具；HandlerAdapter是使用工具干活的人。</p></li><li><p>HandlerExceptionResolver</p><p> 全局异常处理器</p></li><li><p>ViewResolver</p><p> 视图解析器</p></li><li><p>RequestToViewNameTranslator</p></li><li><p>LocaleResolver</p></li><li><p>ThemeResolver</p></li><li><p>MultipartResolver</p><p> 处理文件上传请求</p></li><li><p>FlashMapManager</p></li></ol><h1 id="47-SpringBoot自动配置原理"><a href="#47-SpringBoot自动配置原理" class="headerlink" title="47.SpringBoot自动配置原理"></a>47.SpringBoot自动配置原理</h1><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210419152211724.png" alt="image-20210419152211724"></p><p>@Import+@Configuration+Spring spi</p><p>自动配置类由各个starter提供，使用@Configuration+@Bean定义配置类，放到META-INF/spring.factories下</p><p>使用Spring spi扫描 META-INF/spring.factories下的配置类</p><p>使用@Import导入自动配置类</p><h1 id="48-如何理解SpringBoot中的Starter"><a href="#48-如何理解SpringBoot中的Starter" class="headerlink" title="48.如何理解SpringBoot中的Starter"></a>48.如何理解SpringBoot中的Starter</h1><p>使用spring+springmvc使用，如果需要引入mybatis等框架，需要到xml中定义mybatis需要的bean</p><p>starter就是定义一个starter的jar包，写一个@Configuration配置类，将这些bean定义在里面，然后在starter包的META-INF/spring.factories中写入该配置类，SpringBoot按照约定来加载该配置类</p><p>开发人员只需要将对应的starter包依赖进应用，进行相应的属性配置（使用默认配置时，不需要配置）</p><h1 id="49-什么是嵌入式服务器？为什么要使用嵌入式服务器"><a href="#49-什么是嵌入式服务器？为什么要使用嵌入式服务器" class="headerlink" title="49.什么是嵌入式服务器？为什么要使用嵌入式服务器"></a>49.什么是嵌入式服务器？为什么要使用嵌入式服务器</h1><p>节省了下载安装tomcat，应用不需要再打war包，然后放到webapp目录下再运行</p><p>只需要一个安装了Java的虚拟机，就可以直接在上面部署应用程序了</p><p>SpringBoot已经内置了tomcat.jar, 运行main方法时会去启动tomcat，并利用tomcat的spi机制加载springmvc</p><h1 id="50-Mybatis的优缺点"><a href="#50-Mybatis的优缺点" class="headerlink" title="50.Mybatis的优缺点"></a>50.Mybatis的优缺点</h1><p>优点：</p><ol><li>基于SQL语句编程，相当灵活，不会对应用程序或者数据库的现有设计造成任何影响，SQL写在XML里，解除了sql与程序代码的耦合，便于统一管理；提供XML标签，支持编写动态SQL语句，并可重用。</li><li>与JDBC相比，减少了50%以上的代码，消除了JDBC大量冗余的代码，不需要手动开关连接。</li><li>很好地与各种数据库兼容（因为Mybatis使用JDBC来连接数据库，所以只要JDBC支持的数据库Mybatis都支持）</li><li>能够与Spring很好地集成。</li><li>提供映射标签，支持对象与数据库的ORM字段关系映射。</li></ol><p>缺点：</p><ol><li>SQL语句的编写工作量较大，尤其当字段多，关联表多时，对开发人员编写SQL语句的功底有一定要求。</li><li>SQL语句依赖于数据库，导致数据库移植性差，不能随意更换数据库。</li></ol><h1 id="51-Mybatis与Hibernate对比"><a href="#51-Mybatis与Hibernate对比" class="headerlink" title="51.Mybatis与Hibernate对比"></a>51.Mybatis与Hibernate对比</h1><p>SQL和ORM的争论，永远都不会终止。</p><p>开发速度对比：</p><ul><li>Hibernate真正掌握比Mybatis难，Hibernate内部封装了SQL语句，对于简单的增删改查，使用Hibernate能省去写sql，节约大量时间，对于复杂业务，使用Mybatis会好点。</li></ul><p>开发工作量对比：</p><ul><li>Hibernate会少点</li></ul><p>sql优化：</p><ul><li>Mybatis会占优势</li></ul><p>对象管理：</p><ul><li>Hibernate有</li></ul><p>缓存机制：</p><ul><li>Hibernate缓存更强大</li></ul><h1 id="52-和-的区别是什么"><a href="#52-和-的区别是什么" class="headerlink" title="52.#{}和${}的区别是什么"></a>52.#{}和${}的区别是什么</h1><p>#{}是预编译处理、是占位符，${}是字符串拼接。</p><p>Mybatis在处理#{}时，会将sql中的#{}替换为？，调用PreparedStatement来赋值；不会有sql注入，提高系统安全性。</p><p>Mybatis在处理${}时，会把${}替换成变量的值。会有sql注入问题。</p><h1 id="53-简述Mybatis的插件运行原理，如何编写一个插件"><a href="#53-简述Mybatis的插件运行原理，如何编写一个插件" class="headerlink" title="53.简述Mybatis的插件运行原理，如何编写一个插件"></a>53.简述Mybatis的插件运行原理，如何编写一个插件</h1><p>Mybatis只支持ParameterHandler、ResultSetHandler、StatementHandler、Executor这4种接口的插件，</p><p>Mybatis使用JDK的动态代理。。。</p><h1 id="54-索引的基本原理"><a href="#54-索引的基本原理" class="headerlink" title="54.索引的基本原理"></a>54.索引的基本原理</h1><p>索引用来快速地寻找那些具有特定值的记录。如果没有索引，一般来说执行查询时遍历整张表。</p><p>索引的原理：就是把无序的数据变成有序的查询。</p><ol><li>把创建了索引地列的内容进行排序</li><li>对排序结果生成倒排表</li><li>在倒排表内容上拼上数据地址链</li><li>在查询的时候，先拿到倒排表内容，再取出数据地址链，从而拿到具体数据</li></ol><h1 id="55-MySql聚簇和非聚簇索引地区别"><a href="#55-MySql聚簇和非聚簇索引地区别" class="headerlink" title="55.MySql聚簇和非聚簇索引地区别"></a>55.MySql聚簇和非聚簇索引地区别</h1><p>都是B+数的数据结构</p><ul><li>聚簇索引：将数据存储和索引放在一块、并且按照一定的顺序组织的，找到索引也就找到了数据，数据的物理存放顺序与索引顺序是一致的，即：只要索引是相邻的，那么对应的数据一定也是相邻地存放在磁盘上的。</li><li>非聚簇索引：叶子节点不存储数据、存储的是数据行的地址，也就是说根据索引查找到数据行的位置再去磁盘查找数据。</li></ul><blockquote><p>优势：</p><ol><li>查询通过聚簇索引可以直接获取数据，相比非聚簇索引需要第二次查询效率要高；</li><li>聚簇索引对于范围查询的效率很高，因为其数据是按照大小排列的</li><li>聚簇索引适合用在排序的场合，非聚簇索引不适合</li></ol><p>劣势：</p><ol><li>。。。</li></ol></blockquote><p>InnoDB中一定有主键，主键一定是聚簇索引，不手动设置，则会使用unique索引，没有unique索引，则会使用数据库内部的一个行的隐藏id来当作主键索引</p><p>MyISM使用非聚簇索引</p><h1 id="56-mysql索引地数据结构，各自优劣"><a href="#56-mysql索引地数据结构，各自优劣" class="headerlink" title="56.mysql索引地数据结构，各自优劣"></a>56.mysql索引地数据结构，各自优劣</h1><p>在Mysql中使用较多的索引有Hash索引，B+数索引，InnoDB存储引擎的默认索引实现为：B+数索引。对于哈希索引来说，底层的数据结构就是哈希表，因此绝大多数需求为单条记录查询的时候，可以选择哈希索引，查询性能最快；其余大部分场景，建议选择BTree索引。</p><h1 id="57-索引设计的原则"><a href="#57-索引设计的原则" class="headerlink" title="57.索引设计的原则"></a>57.索引设计的原则</h1><p>查询更快、占用空间更小</p><ol><li>适合索引的列是出现在where字句中的列，或者连接字句中指定的列</li><li>基数较小的表，索引效果较差，没有必要在此列建立索引</li><li>使用短索引，如果对长字符串列进行索引，应该指定一个前缀长度，这样能够节省大量索引空间，如果搜索词超过索引前缀长度，则使用索引排除不匹配的行，然后检查其余行是否可能匹配。</li><li>不要过度索引。索引需要额外的磁盘空间，并降低写操作的性能。在修改表内容的时候，索引会进行更新甚至重构，索引列越多，这个时间就会越长。所有只保持需要的索引有利于查询即可。</li><li>定义有外键的数据列一定要建立索引。</li><li>更新频繁字段不适合创建索引</li></ol><h1 id="58-MySQL锁的类型有哪些"><a href="#58-MySQL锁的类型有哪些" class="headerlink" title="58.MySQL锁的类型有哪些"></a>58.MySQL锁的类型有哪些</h1><p>基于锁的属性分类：共享锁、排他锁。</p><p>基于锁的粒度分类：行级锁（INNODB）、表级锁（INNODB、MYISAM）、页级锁、记录锁、间隙锁、临建锁。</p><p>基于锁的状态分类：意向共享锁（读锁）、意向排它锁（写锁）。</p><h1 id="59-mysql执行计划怎么看"><a href="#59-mysql执行计划怎么看" class="headerlink" title="59.mysql执行计划怎么看"></a>59.mysql执行计划怎么看</h1><p>执行计划就是sql的执行查询的顺序，以及如何使用索引查询，返回的结果集的行数<img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210420123306590.png" alt="image-20210420123306590"></p><ol><li><p>id：有几个select就显示几行。id数字越大，执行的优先级越高越先执行。</p></li><li><p>selectType     表示查询每一select字句的类型</p></li><li><p>type：优化sql的重要字段</p><ul><li><p>system：表中只有一行记录，相当于系统表</p></li><li><p>const：通过索引一次命中，匹配一行数据</p></li><li><p>eq_ref：唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配</p></li><li><p>ref：非唯一性索引扫描，返回匹配某个值的所有</p></li><li><p>range：只索引给定范围的行，使用一个索引来选择行，一般用于between、&lt;、&gt;</p></li><li><p>index：只遍历索引树</p></li><li><p>ALL：全表扫描</p></li></ul></li></ol><h1 id="60-事务的基本特性和隔离级别"><a href="#60-事务的基本特性和隔离级别" class="headerlink" title="60.事务的基本特性和隔离级别"></a>60.事务的基本特性和隔离级别</h1><p>事务的基本特性ACID：</p><p><strong>原子性</strong>指的是一个事务中的操作要么全部成功，要么全部失败。</p><p><strong>一致性</strong>指的是数据库总是从一个一致性的状态转换到另一个一致性的状态，但总数是一致的。</p><p><strong>隔离性</strong>指的是一个事务的修改在最终提交前，对其他事务是不可见的。</p><p><strong>持久性</strong>指的是一旦事务提交，所做的修改就会永远保存到数据库中。</p><p>4种隔离级别：</p><ul><li>read uncommit    读未提交，可能会读到其他事务未提交的数据，也叫脏读。</li><li>read commit       读已提交，两次读取结果不一致，会有不可重复读</li><li>repeatable read   可重复读，就是每次读取的结果都一样，可能不是数据库中最新的数据，会产生幻读</li><li>serializable    串行</li></ul><h1 id="61-关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢查询都怎么优化过？"><a href="#61-关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢查询都怎么优化过？" class="headerlink" title="61.关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢查询都怎么优化过？"></a>61.关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢查询都怎么优化过？</h1><p>是查询条件没有命中索引？是load了不需要的数据列？还是数据量太大？</p><p>所以优化也是针对这三个方向来的：</p><ul><li>首先分析语句，看看是否load了额外的数据，可能是查询了多余的行并且抛弃掉了，可能是加载了许多结果中并不需要的列，对语句进行分析以及重写。</li><li>分析语句的执行计划，然后获得其使用索引的情况，之后修改语句或者修改索引，使得语句可以尽可能的命中索引。</li><li>如果对语句的优化已经无法进行，可以考虑表中的数据量是否太大，如果是的话可以进行横向或纵向的分表。</li></ul><h1 id="62-ACID靠什么保证的"><a href="#62-ACID靠什么保证的" class="headerlink" title="62.ACID靠什么保证的"></a>62.ACID靠什么保证的</h1><p>A原子性由undo log日志保证，它记录了需要回滚的日志信息，事务回滚时撤销已经执行成功的sql</p><p>C一致性由其他三大特性保证、程序代码要保证业务上的一致性</p><p>I隔离性有MVCC来保证</p><p>D持久性由内存+redo log来保证，mysql修改数据同时在内存和redo log记录这次操作，宕机的时候可以从redo log恢复</p><h1 id="63-什么是MVCC"><a href="#63-什么是MVCC" class="headerlink" title="63.什么是MVCC"></a>63.什么是MVCC</h1><p>多版本并发控制：读取数据时通过一种类似快照的方式将数据保存下来，这样读锁就和写锁不冲突了，不同的事务session会看到自己特定版本的数据，版本链</p><p>MVCC只在read commited 和 repeatable read 两个隔离级别下工作，其他两个隔离级别和MVCC不兼容，因为read uncommitted 总是读取到最新的数据行，而不是符合当前事务版本的数据行。而serializable 则会对所有读取的行都加锁。</p><h1 id="61-mysql主从同步原理"><a href="#61-mysql主从同步原理" class="headerlink" title="61.mysql主从同步原理"></a>61.mysql主从同步原理</h1><p>MySQL主从复制主要有三个线程：master(binlog dump thread)、slave（I/O thread、SQL thread），Master一条线程和Slave中的两条线程。</p><ul><li><p>主节点binlog，主从复制的基础是主库记录数据库的所有变更记录到binlog。binlog是数据库服务器启动的那一刻起，保存所有修改数据库结构或内容的一个文件。</p></li><li><p>主节点log dump 线程，当binlog有变动时，log dump线程读取其内容并发送给从节点。</p><p>  。。。</p></li></ul><h1 id="62-简述MyISAM和InnoDB的区别"><a href="#62-简述MyISAM和InnoDB的区别" class="headerlink" title="62.简述MyISAM和InnoDB的区别"></a>62.简述MyISAM和InnoDB的区别</h1><p><strong>MyISAM</strong>：</p><p>不支持事务，但是每次查询都是原子的；</p><p>支持表级锁，即每次操作是对整个表加锁；</p><p>存储表的总行数快，有一个变量保存行数；</p><p>一个MyISAM表有三个文件：索引文件、表结构文件、数据文件；</p><p>采用非聚簇索引，索引文件的数据域存储指向数据文件的指针。辅索引与主索引基本一致，但是辅索引不用保证唯一性。</p><p><strong>InnoDB</strong>：</p><p>支持ACID的事务，支持事务的四种隔离级别；</p><p>支持行锁及外键约束；因此可以支持写并发；</p><p>不存储总行数，需要全表扫描；</p><p>主键索引采用聚簇索引，最好使用自增索引</p><h1 id="63-简述MySQL索引类型及对数据库的性能的影响"><a href="#63-简述MySQL索引类型及对数据库的性能的影响" class="headerlink" title="63.简述MySQL索引类型及对数据库的性能的影响"></a>63.简述MySQL索引类型及对数据库的性能的影响</h1><p>普通索引：允许被索引地数据列包含重复的值。</p><p>唯一索引：可以保证数据记录的唯一性。</p><p>主键：特殊的唯一索引，使用关键字PRIMARY KEY来创建。</p><p>联合索引：索引可以覆盖多个数据列，如像INDEX（columnA, columnB）索引。</p><p>全文索引：通过 倒排索引，一般使用es</p><p>索引可以极大地提高数据的查询速度。</p><p>通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统性能。</p><p>但是会降低插入、删除、更新表的速度，因此在执行这些写操作时，还要操作索引文件。</p><p>索引需要占用物理空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间、如果要建立聚簇索引，那么需要的空间就会更大，如果非聚簇索引很多，一旦聚簇索引改变，那么索引非聚簇索引都会跟着变。</p><h1 id="64-RDB和AOF机制"><a href="#64-RDB和AOF机制" class="headerlink" title="64.RDB和AOF机制"></a>64.RDB和AOF机制</h1><p><strong>RDB</strong>：Redis DataBase</p><p>在指定的时间间隔内将内存中的数据集快照写入磁盘，实际操作过程是fork一个子进程，先将数据集写入临时文件，写入成功后，再替换之前的文件，用二进制压缩存储。</p><p><strong>优点</strong>：</p><ol><li>整个Redis数据库将只包含一个文件 dump.rdb, 方便持久化。</li><li>容灾性好，方便备份。</li><li>性能最大化，fork子进程来完成写操作，让主进程继续处理命令，所有是IO最大化。使用单独子进程来进行持久化，主进程不会进行任何IO操作，保证redis的高性能。</li><li>相对于数据集大时，比AOF的启动效率更高。</li></ol><p><strong>缺点</strong>：</p><ol><li>数据安全性低。RDB是间隔一段时间进行持久化，如果持久化之间redis发生故障，会发生数据丢失。</li><li>由于RDB是通过fork子进程来协助完成数据持久化工作的，因此，如果当数据集较大时，可能会导致整个服务器停止服务几百毫秒，甚至是1秒钟。</li></ol><p><strong>AOF</strong>：Append Only File</p><p>以日志的形式记录服务器所处理的每一个写、删除操作，查询操作不会记录，以文本的方式记录，可以打开文件看到详细的操作记录。</p><p><strong>优点</strong>：</p><ol><li>数据安全，Redis中提供了3种同步策略，即每秒同步、每修改同步和不同步。</li><li>通过append模式写文件</li><li>AOF机制的rewrite模式。定期对AOF文件进行重写，以达到压缩的目的</li></ol><p><strong>缺点</strong>：</p><ol><li>AOF文件比RDB文件大，且恢复速度慢。</li><li>数据集大的时候，比RDB启动效率低。</li><li>运行效率没有RDB高</li></ol><h1 id="65-Redis的过期键的删除策略"><a href="#65-Redis的过期键的删除策略" class="headerlink" title="65.Redis的过期键的删除策略"></a>65.Redis的过期键的删除策略</h1><p> Redis是key-value数据库，我们可以设置Redis中缓存的key的过期时间。Redis的过期策略就是指定Redis中缓存的key过期了，Redis如何处理。</p><ul><li>惰性过期：只有当访问一个key时，才会判断该key是否过期，过期则清除。该策略可以最大化地节省cpu，但对内存不友好。极端情况可能出现大量的过期key没有再次被访问，从而不会被清除，占用大量内存。</li><li>定期过期：每隔一定的时间，会扫描一定数量的数据库的expires字典中一定数量的key，并清除其中已过期的key。</li></ul><p>Redis同时使用这两种策略。</p><h1 id="66-Redis线程模型，单线程为什么快？"><a href="#66-Redis线程模型，单线程为什么快？" class="headerlink" title="66. Redis线程模型，单线程为什么快？"></a>66. Redis线程模型，单线程为什么快？</h1><p>Redis基于Reactor模式开发了网络事件处理器，这个处理器叫作文件事件处理器。这个文件事件处理器，它是单线程的，所有Redis才叫作单线程的模型，它采用IO多路复用机制来同时监听多个Socket，根据Socket上的事件类型来选择对应的事件处理器来处理这个事件。</p><p>单线程快的原因：</p><ol><li>纯内存操作</li><li>核心是基于非阻塞的IO多路复用机制</li><li>单线程反而避免了多线程的频繁上下文切换带来的性能问题</li></ol><h1 id="67-缓存雪崩、缓存穿透、缓存击穿"><a href="#67-缓存雪崩、缓存穿透、缓存击穿" class="headerlink" title="67.缓存雪崩、缓存穿透、缓存击穿"></a>67.缓存雪崩、缓存穿透、缓存击穿</h1><p><strong>缓存雪崩</strong>是指缓存同一时间大面积的失效，所以，后面的请求都会落到数据库上，造成数据库短时间承受大量请求而崩掉。</p><p><strong>解决方案</strong>：</p><ul><li>缓存数据的过期时间设置随机，防止同一时间数据过期现象发生。</li><li>给每一个缓存数据增加对应的缓存标记，记录缓存是否失效，如果缓存标记失效，则更新数据缓存。</li><li>缓存预热</li><li>互斥锁</li></ul><p><strong>缓存穿透</strong>是指缓存和数据库中都没有数据，导致所有的请求都落到数据库上，造成数据库短时间内承受大量请求而崩掉。</p><p><strong>解决方案</strong>：</p><ul><li>接口层增加校验，如用户鉴权校验，id做基础校验，id&lt;=0的直接拦截。</li><li> 从缓存取不到的数据，在数据库中也找不到时，这时可以将key-value对写为key-null，缓存有效时间可以设置短点，如30秒。这样可以防止攻击者反复用同一id暴力攻击</li><li>采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被这个bitmap拦截掉，从而避免了对底层存储系统的查询压力。</li></ul><p><strong>缓存击穿</strong>是指缓存中没有但是数据库中有的数据（一般指缓存时间过期），这是由于并发用户特别多，同时大量的请求会压垮数据库。</p><p><strong>解决方案</strong>：</p><ul><li>设置热点数据永不过期。</li><li>加互斥锁</li></ul><h1 id="68-Redis事务实现"><a href="#68-Redis事务实现" class="headerlink" title="68.Redis事务实现"></a>68.Redis事务实现</h1><ol><li><p>事务开始</p><p> multi命令，标志命令的执行，标识着一个事务的开始</p><p> exec命令，开始执行</p><p> discard，放弃执行事务</p><p> watch，客观锁</p><p> unwatch，接触监控</p></li></ol><h1 id="69-Redis集群方案"><a href="#69-Redis集群方案" class="headerlink" title="69.Redis集群方案"></a>69.Redis集群方案</h1><p>主从</p><p><strong>哨兵模式</strong>：</p><p>sentinel, 哨兵是redis集群中非常重要的一个组件，主要有以下功能：</p><ul><li>集群监控：负责监控redis master和slave进程是否正常工作。</li><li>消息通知：如果某个redis实例有故障，那么哨兵负责发送消息作为报警通知给管理员。</li><li>故障转移：如果master node挂断了，会自动转移到slave nide上。</li><li>配置中心：如果故障转移发生了，通知client客户端新的master地址。</li></ul><h1 id="70-CAP理论、BASE理论"><a href="#70-CAP理论、BASE理论" class="headerlink" title="70.CAP理论、BASE理论"></a>70.CAP理论、BASE理论</h1><p>Consistency(一致性)：</p><p>即更新操作成功并返回客户端后，所有节点在同一时间的数据完全一致。</p><p>对客户端来说，一致性指的是并发访问时更新过得数据如何获取的问题。</p><p>对服务端来看，则是更新如何复制分布到整个系统，以保证数据最终一致。</p><p>Avaliability(可用性)：</p><p>即服务一直可用，而且是正常响应时间。系统能够很好地为用户服务，不出现用户操作失败或者访问超时等用户体验不好的情况。</p><p>Partition Tolerance(分区容错性)：</p><p>即分布式系统在遇到某节点或网络分区故障的时候，仍然能够对外提供满足一致性和可用性的服务。</p><p>CP和AP：分区容错是必须保证的，当发生网络分区时，如果要继续服务，那么强一致性和可用性只能2选1</p><p>BASE是Basically Avaliable(基本可用)、Soft state(软状态)和Eventually consistent（最终一致性）</p><p>基本可用：</p><ul><li>响应时间上的损失：正常情况下，处理用户请求需要0.5s返回结果，但是由于系统出现故障，处理用户请求的时间变为3s。</li><li>系统功能上的损失：正常情况下，用户可以使用系统的全部功能，但是由于吸氧访问量的突然剧增，系统的部分非核心功能无法使用。</li></ul><p>软状态：数据同步允许一定的延迟。</p><p>最终一致性：系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态，不要求实时。</p><h1 id="71-负载均衡算法、类型"><a href="#71-负载均衡算法、类型" class="headerlink" title="71.负载均衡算法、类型"></a>71.负载均衡算法、类型</h1><ol><li><p>轮询法</p><p> 将请求按顺序轮流地分配到后端机器上</p></li><li><p>随机法</p><p> 通过随机算法，随机分配到后端机器上</p></li><li><p>源地址哈希法</p><p> 根据客户端的IP地址，通过哈希函数计算的到一个数值，用该数值对服务器列表的大小进行取模，得到的结果便是客户端要访问的服务器的序号。</p></li><li><p>加权轮询法</p><p> 给配置高、负载低的机器配置更高的权重，让其处理更多的请求</p></li><li><p>加权随机</p><p> 根据后端服务器的配置，系统的负载不同配置权重随机</p></li><li><p>最小连接数法</p><p> 最小连接数算法比较灵活和智能，由于请求的处理有快有慢，它是根据后端服务器当前的连接情况，动态地选取其中连接数少的。</p></li></ol><p>类型：</p><ol><li><p>DNS方式实现负载均衡</p></li><li><p>硬件负载均衡：F5和A10</p></li><li><p>软件负载均衡：</p><p> nginx、HAproxy、LVS</p></li></ol><h1 id="72-分布式架构下，Session共享有什么方案"><a href="#72-分布式架构下，Session共享有什么方案" class="headerlink" title="72.分布式架构下，Session共享有什么方案"></a>72.分布式架构下，Session共享有什么方案</h1><ol><li><p>采用无状态服务，抛弃session，使用jwt</p></li><li><p>存入Cookie（有安全风险）</p></li><li><p>服务器之间进行session同步，这样可以保证每个服务器上都有全部的Session信息，不过当服务器数量多的时候，会有延迟</p></li><li><p>IP绑定策略</p></li><li><p>使用Redis存储（用得多）</p><p> 把Session方法Redis中存储，</p><ul><li>实现Session</li><li>可以水平扩展</li><li>服务器重启Session不失效</li><li>不仅可以跨服务器Session共享，甚至可以跨平台（例如网页端，App端）</li></ul></li></ol><h1 id="73-简述RPC、RMI的理解"><a href="#73-简述RPC、RMI的理解" class="headerlink" title="73.简述RPC、RMI的理解"></a>73.简述RPC、RMI的理解</h1><p>RPC：远程过程调用。在本地调用远程的函数，可以跨语言实现，httpClient</p><p>RMI：远程方法调用。java中用于实现RPC的一种机制，RPC的java版本，是j2ee的网络调用机制</p><h1 id="74-分布式id生成方案"><a href="#74-分布式id生成方案" class="headerlink" title="74.分布式id生成方案"></a>74.分布式id生成方案</h1><ul><li><p>uuid</p><blockquote><ol><li>当前日期和时间    时间戳</li><li>时钟序列     计数器</li><li>全局唯一的IEEE机器识别码，如果有网卡，从网卡 MAC地址获得，没有网卡以其他方式获得。</li></ol><p>优点：代码简单，性能好，保证唯一（相对而言，重复概率极低）</p><p>缺点：</p><ul><li>每次生成的ID都是无序的，且无法保证趋势递增</li><li>是字符串，字符串存储性能差，查询效率慢</li><li>UUID长度过长，不适合存储，耗费数据库性能。</li><li>ID无业务含义，可读性差</li><li>有信息安全问题，有可能泄漏mac地址</li></ul></blockquote></li><li><p>数据库自增序列</p><blockquote><p>单机模式：</p><p>优点：</p><ul><li>实现简单，依靠数据库即可，成本小。</li><li>ID数字化，单调自增，满足数据库存储和查询性能。</li><li>具有一定的业务可读性</li></ul><p>缺点：</p><ul><li>强依赖DB，存在单点问题，如果数据库宕机，则业务不可以。</li><li>DB生成ID性能有限，单点数据库压力大，无法抗高并发场景。</li><li>信息安全问题，比如暴露订单量，url查询改一下id查到别人的订单。</li></ul><p>数据库高可用：多主模式做负载，基于序列的起始值和步长设置，不同的初始值，相同的步长，步长大于节点数</p><p>优点：</p><ul><li>解决了ID生成的单点问题，同时平衡了负载。</li></ul><p>缺点：</p><ul><li>系统扩容困难：系统定义好步长之后，增加机器之后调整步长困难</li><li>数据库压力大：每次获取一个ID都必须读写一次数据库</li><li>主从同步的时候</li></ul></blockquote></li><li><p>Leaf—segment</p></li><li><p>雪花算法（*）</p><blockquote><p>生成一个64bit的整型数字</p><p>第一个符号位0,41位时间戳，10位workId，12位序列化（自增）</p><p>位数可以有不同实现</p><p>优点：</p><ul><li>每个毫秒值包含的ID值很多，不够可以变动位数来增加，性能佳</li><li>时间戳值在高位，中间是固定的机器码，自增的序列在低位，整个ID是趋势递增的。</li><li>能够根据业务场景数据库节点布置灵活调整bit位划分，灵活度高。</li></ul><p>缺点：</p><ul><li>强制依赖机器时钟，如果时钟回拨，会导致重复的ID生成。</li></ul></blockquote></li></ul><h1 id="75-分布式锁解决方案"><a href="#75-分布式锁解决方案" class="headerlink" title="75.分布式锁解决方案"></a>75.分布式锁解决方案</h1><p>需要这个锁独立于每一个服务之外，而不是在服务里面。</p><p>数据库：利用主键冲突控制一次只有一个线程能获取锁、非阻塞、不可重入、单点、失效时间。</p><p>Zookeeper分布式锁：</p><p>Redis分布式锁：setNX，单线程处理网络请求，不需要考虑并发安全性</p><p>所有服务节点设置相同的key，返回为0、则锁获取失败</p><blockquote><p>setNX</p><p>问题：</p><ol><li>早期版本没有超时参数，需要单独设置，存在死锁问题（中途宕机）</li><li>后期版本提供加锁与设置时间原子操作，但是存在任务超时，锁自动释放，导致并发问题，加锁与释放锁不是同一线程问题。</li></ol></blockquote><h1 id="76-分布式事务解决方案"><a href="#76-分布式事务解决方案" class="headerlink" title="76.分布式事务解决方案"></a>76.分布式事务解决方案</h1><p>XA规范：分布式事务规范，定义了分布式事务模型</p><p>四个角色：事务管理器（协调者TM）、资源管理器（参数者RM）、应用程序AP、通信资源管理器CRM</p><p>全部事务：一个横跨多个数据库的事务，要么全部提交、要么全部回滚</p><p>JTA事务时java对XA规范的实现，对应JDBC的单库事务</p><p>两阶段协议</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210422145203953.png" alt="image-20210422145203953"></p><p>第一阶段（prepare）：每一个参与者执行本地事务但不提交，进入ready状态，并通知协调者已经准备就绪。</p><p>第二阶段（commit）：当协调者确认每一个参与者都ready后，通知参与者进行commit操作；如果有参与者fail，则发送rollback命令，各参与者做回滚。</p><p>问题：</p><ul><li>单点故障：一旦事务管理器出现故障，整个系统不可用（参与者都会阻塞）</li><li>数据不一致：在阶段二，如果事务管理器只发送了部分commit消息，此时网络发生异常，那么只有部分参与者接收。</li><li>响应时间较长：参与者和协调者资源都被锁住，提交和回滚之后才能释放。</li><li>不确定性：。。</li></ul><p>三阶段：</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210422145828167.png" alt="image-20210422145828167"></p><h1 id="77-如何实现接口的幂等性"><a href="#77-如何实现接口的幂等性" class="headerlink" title="77.如何实现接口的幂等性"></a>77.如何实现接口的幂等性</h1><ul><li>唯一id。每次操作，都根据操作和内容生成唯一的id，在执行之前先判断id是否存在，如果不存在则执行后续操作，并且保存到数据库或redis等。</li><li>服务端提供发送token的接口，业务调用接口前先获取token，然后调用业务接口请求时，把token携带过去，服务器判断token是否存在redis中，存在表示第一次请求，可以执行业务，执行业务完成后，最后需要把redis中的token删除。</li><li>建去重表。将业务中有唯一标识的字段保存到去重表，如果表中存在，则表示已经处理过了。</li><li>版本控制。增加版本号，当版本号符合时，才能更新数据。</li><li>状态控制。例如订单有状态已支付、未支付、支付中、支付失败，当处于未支付的时候才允许修改为支付中等。</li></ul><h1 id="78-简述ZAB协议"><a href="#78-简述ZAB协议" class="headerlink" title="78.简述ZAB协议"></a>78.简述ZAB协议</h1><p>ZAB协议是分布式协调服务Zookeeper专门设计的一种支持崩溃的原子广播协议，实现分布式数据一致性。所有客户端的请求都是写入Leader进程中，然后，由。。。</p><p>ZAB协议包括两种基本的模式：<strong>崩溃恢复和消息广播</strong>。</p><p><strong>消息广播</strong>：</p><p><strong>崩溃恢复</strong>：</p><h1 id="79-SpringCloud和Dubbo的区别"><a href="#79-SpringCloud和Dubbo的区别" class="headerlink" title="79.SpringCloud和Dubbo的区别"></a>79.SpringCloud和Dubbo的区别</h1><p>底层协议：springcloud基于http协议，dubbo基于Tcp协议。</p><p>注册中心：springcloud使用eureka，dubbo推荐使用zookeeper</p><p>模型定义：dubbo将一个接口定义为一个服务，Springcloud则是将一个应用定义为一个服务。</p><p>springcloud是一个生态，则Dubbo是springcloud生态中关于服务调用一种解决方案。</p><h1 id="80-Linux常用命令"><a href="#80-Linux常用命令" class="headerlink" title="80.Linux常用命令"></a>80.Linux常用命令</h1><ol><li><p>常看端口占用情况</p><p> netstat  -anp  |grep  端口号</p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210718134951878.png" alt="image-20210718134951878"></p></li><li><p>查看当前所有已经使用的端口情况</p><p> netstat  -nultp</p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210718134828297.png" alt="image-20210718134828297"></p></li><li><p>查看磁盘大小</p><p> df -hl</p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/16/Java%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E6%94%B6%E9%9B%86%E4%BA%8E%E8%A7%86%E9%A2%91%E3%80%81%E5%8D%9A%E5%AE%A2%E3%80%81%E9%87%8E%E5%8F%B2%E3%80%81%E6%B0%91%E9%97%B4%E4%BC%A0%E8%AF%B4%EF%BC%89/image-20210718135319642.png" alt="image-20210718135319642"></p></li><li><p>查看日志命令</p><p> cat 日志 （加载日志所有信息）</p><p> tail -f 日志    （实时查看日志）</p><p> cat -n test.log |grep “debug” |more   （这样就分页打印了,通过点击空格键翻页）</p><p> cat -n test.log |grep “debug” |less</p><p> <strong>cat</strong>命令：用于显示整个文件的内容，单独使用没有翻页功能，经常和 more 命令搭配使用，cat 命令还可以将数个文件合并成一个文件。</p><p> <strong>more</strong>命令：让画面在显示满一页时暂停，此时可按空格健继续显示下一个画面，或按 q 键停止显示。 </p><p> <strong>less</strong>命令：less 命令的用法与 more 命令类似，也可以用来浏览超过一页的文件。所不同的是 less 命令除了可以按空格键向下显示文件外，还可以利用上下键来翻动文件。当要结束浏览时，只要在 less 命令的提示符“：”下按 q 键即可</p></li><li><p>查看java进程</p><p> ps -ef | grep java</p></li></ol><h1 id="81-线上问题分析思路"><a href="#81-线上问题分析思路" class="headerlink" title="81.线上问题分析思路"></a>81.线上问题分析思路</h1><p>遇到线上问题不要慌，首先确认排查问题的思路：</p><ol><li>查看日志</li><li>查看CPU情况</li><li>查看TCP情况</li><li>查看java线程，jstack</li><li>查看java堆，jmap</li><li>通过MAT分析堆文件，寻找无法被回收的对象</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>消息队列之RabbitMQ</title>
      <link href="2021/04/03/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B9%8BRabbitMQ/"/>
      <url>2021/04/03/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B9%8BRabbitMQ/</url>
      
        <content type="html"><![CDATA[<p>MQ全称Message Queue，是典型的生产者、消费者模型。生产者不断地向消息队列中生产消息，消费者不断地从队列中获取消息。生产者和消费者是异步的，没有业务逻辑的侵入，这样就实现了它们之间的解耦。</p><p>常见的MQ产品有：</p><ul><li>RabbitMQ: 基于AMQP协议，稳定性好</li><li>ActiveMQ: 基于JMS</li><li>RocketMQ: 基于JMS，阿里巴巴产品</li><li>Kafka: 分布式消息系统，高吞吐量</li></ul><h1 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h1><p>官网：<a href="https://www.rabbitmq.com/">https://www.rabbitmq.com/</a></p><h2 id="安装-这里使用Docker"><a href="#安装-这里使用Docker" class="headerlink" title="安装(这里使用Docker)"></a>安装(这里使用Docker)</h2><ol><li>使用命令 <code>docker search rabbitmq</code></li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/03/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B9%8BRabbitMQ/image-20210403194415543.png" alt="image-20210403194415543"></p><ol start="2"><li><p>拉取镜像<code>docker pull docker.io/rabbitmq</code></p></li><li><p>启动RabbitMQ<code>docker run -d --hostname my-rabbit --name rabbit -p 15672:15672 -p 5672:5672 rabbitmq</code></p></li><li><p>安装插件</p><ol><li><p>先执行docker ps 拿到当前的镜像ID</p></li><li><p>进入容器</p></li><li><p>安装插件</p></li><li><p>ctrl+p+q退出当前容器</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps </span><br><span class="line">docker <span class="built_in">exec</span> -it 镜像ID /bin/bash</span><br><span class="line">rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span><br></pre></td></tr></table></figure></li></ol></li><li><p>访问客户端</p><p> <a href="http://Linux的ip地址：15672，用户名和密码默认都是guest">http://Linux的ip地址：15672，用户名和密码默认都是guest</a></p></li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/03/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B9%8BRabbitMQ/image-20210403200215318.png" alt="image-20210403200215318"></p><h2 id="6种消息模型"><a href="#6种消息模型" class="headerlink" title="6种消息模型"></a>6种消息模型</h2>]]></content>
      
      
      <categories>
          
          <category> MQ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis总结</title>
      <link href="2021/04/02/Redis%E6%80%BB%E7%BB%93/"/>
      <url>2021/04/02/Redis%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>Redis是使用C语言编写的高效NoSql数据库，将数据存储在内存中，它可以用作数据库、缓存和消息中间件。 它支持多种类型的数据结构，有strings(字符串)，hashes(散列)，lists(列表)，sets(集合)，(sorted sets)有序集合。</p><h1 id="一、Redis安装"><a href="#一、Redis安装" class="headerlink" title="一、Redis安装"></a>一、Redis安装</h1><h2 id="Windows下，不建议"><a href="#Windows下，不建议" class="headerlink" title="Windows下，不建议"></a>Windows下，不建议</h2><p>  1.下载    <a href="https://github.com/MicrosoftArchive/redis/tags">https://github.com/MicrosoftArchive/redis/tags</a>  （已经很久很久没有更新了）</p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402221423693.png" alt="image-20210402221423693" style="zoom: 80%;"><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402221455326.png" alt="image-20210402221455326"></p><ol start="2"><li><p>解压</p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402221642218.png" alt="image-20210402221642218"></p></li><li><p>运行Redis服务端</p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402221935015.png" alt="image-20210402221935015"></p></li><li><p>运行Redis客户端连接服务器</p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402222210397.png" alt="image-20210402222210397"></p></li></ol><p>不过，Redis推荐我们在Linux环境下安装使用</p><h2 id="Linux下用Docker安装"><a href="#Linux下用Docker安装" class="headerlink" title="Linux下用Docker安装"></a>Linux下用Docker安装</h2><ol><li>下载    <a href="https://redis.io/download">https://redis.io/download</a></li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402223253929.png" alt="image-20210402223253929"></p><ol start="2"><li><p>把压缩包拖到Linux系统下，这里放在 /home/panda/ 文件夹下</p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402224600770.png" alt="image-20210402224600770"></p></li></ol><ol start="3"><li><p>移动安装包到 /opt 目录下</p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402224910670.png" alt="image-20210402224910670"></p></li><li><p>cd到/opt, 解压，得到redis-6.2.1文件</p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402225237607.png" alt="image-20210402225237607"></p></li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402225416481.png" alt="image-20210402225416481"></p><ol start="5"><li>cd到/opt/redis-6.2.1，执行<code>make</code>, 确保已经安装了gcc（通过 <code>gcc -v</code>查看，如没有安装，执行<code>yum install gcc -y</code>）</li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402225841696.png" alt="image-20210402225841696"></p><ol start="6"><li>再<code>make install </code></li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402230513671.png" alt="image-20210402230513671"></p><ol start="7"><li><p>Redis的默认安装路径 <code>/usr/local/bin</code></p><p> <img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402231046786.png" alt="image-20210402231046786"></p></li><li><p>在当前目录下创建redisConfig文件夹，将Redis配置文件，拷贝到该文件夹下</p><p> <code>mkdir redisConfig</code></p><p> <code>cp /opt/redis-6.2.1/redis.conf redisConfig/</code></p></li><li><p>Redis默认不是后台启动的，修改配置文件</p></li></ol><p>​    <code>vim redis.conf</code></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402232015589.png" alt="image-20210402232015589"></p><ol start="10"><li>启动服务</li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402232336794.png" alt="image-20210402232336794"></p><ol start="11"><li><p>连接</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210402232504461.png" alt="image-20210402232504461"></p></li></ol><h1 id="二、Redis性能测试"><a href="#二、Redis性能测试" class="headerlink" title="二、Redis性能测试"></a>二、Redis性能测试</h1><p>使用命令<code>redis-benchmark -h localhost -p 6379 -c 100 -n 100000</code></p><p>测试本机100并发100000请求</p><p>结果（这里展示GET请求，还要很多，如LPUSH、自增、RPOP、SADD）：</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210403113911968.png" alt="image-20210403113911968"></p><h1 id="三、基础知识"><a href="#三、基础知识" class="headerlink" title="三、基础知识"></a>三、基础知识</h1><blockquote><p>Redis有16个数据库，默认使用第0个</p></blockquote><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210403114434021.png" alt="image-20210403114434021"></p><p>使用select 0-15 切换</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/04/02/Redis%E6%80%BB%E7%BB%93/image-20210403114627420.png" alt="image-20210403114627420"></p><blockquote><p>Redis是单线程的</p></blockquote><p>Redis是基于内存操作，CPU不是Redis性能瓶颈，Redis的瓶颈是机器的内存和网络带宽。</p><p>官方提供的数据为 100000+ QPS</p><h1 id="四、原生命令"><a href="#四、原生命令" class="headerlink" title="四、原生命令"></a>四、原生命令</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; FLUSHALL<span class="comment"># 删除所有数据库数据</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; FLUSHDB<span class="comment"># 删除当前数据库数据</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *<span class="comment"># 查询所有key</span></span><br><span class="line">(empty array)</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name panda<span class="comment"># 设置key为name，value为panda</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">&quot;name&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> age 17</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">&quot;age&quot;</span></span><br><span class="line">2) <span class="string">&quot;name&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; EXISTS name<span class="comment"># 判断key为name的数据是否存在</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; EXISTS nema</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; get name<span class="comment"># 获取key为name的值</span></span><br><span class="line"><span class="string">&quot;panda&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; EXPIRE name 10<span class="comment"># 设置name的过期时间，单位为秒</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; ttl name<span class="comment"># 查看还剩多久过期</span></span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br><span class="line">127.0.0.1:6379&gt; ttl name<span class="comment"># 还剩2秒过期</span></span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; ttl name</span><br><span class="line">(<span class="built_in">integer</span>) -2<span class="comment"># -2表示已过期</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">type</span> age<span class="comment"># 查看key所对应值是什么类型</span></span><br><span class="line">string</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="string"><a href="#string" class="headerlink" title="string"></a>string</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> key1 v1</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">&quot;key1&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; APPEND key1 <span class="string">&quot;panda&quot;</span><span class="comment"># 往key1的值后面追加字符串，如果当前key不存在，则相当于 set key</span></span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line">127.0.0.1:6379&gt; get key1</span><br><span class="line"><span class="string">&quot;v1panda&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; </span><br><span class="line">127.0.0.1:6379&gt; STRLEN key1<span class="comment"># 获取key1的值长度</span></span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> views 0</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get views</span><br><span class="line"><span class="string">&quot;0&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; INCR views<span class="comment"># 值增1</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; INCR views</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; get views</span><br><span class="line"><span class="string">&quot;2&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; DECR views<span class="comment"># 值减1</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; INCRBY views 98<span class="comment"># 值增加指定大小</span></span><br><span class="line">(<span class="built_in">integer</span>) 99</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> name panda,hahaha</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line"><span class="string">&quot;panda,hahaha&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; GETRANGE name 0 4<span class="comment"># 获取索引0到4的字符</span></span><br><span class="line"><span class="string">&quot;panda&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; GETRANGE name 0 -1<span class="comment"># 获取所有字符</span></span><br><span class="line"><span class="string">&quot;panda,hahaha&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SETRANGE name 4 da<span class="comment"># 从指定下标开始设置值，会覆盖原值</span></span><br><span class="line">(<span class="built_in">integer</span>) 12</span><br><span class="line">127.0.0.1:6379&gt; get name</span><br><span class="line"><span class="string">&quot;panddahahaha&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># setex(set with expire) # 设置过期时间</span></span><br><span class="line"><span class="comment"># setnx(set if not exist)   # 不存在再设置（在分布式锁中会经常使用）</span></span><br><span class="line">127.0.0.1:6379&gt; SETEX dog 30 <span class="string">&quot;hahahahahah&quot;</span><span class="comment"># 设置30秒过期</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; ttl dog</span><br><span class="line">(<span class="built_in">integer</span>) 13</span><br><span class="line">127.0.0.1:6379&gt; ttl dog</span><br><span class="line">(<span class="built_in">integer</span>) -2</span><br><span class="line">127.0.0.1:6379&gt; SETNX cat <span class="string">&quot;miaomiao&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; get cat</span><br><span class="line"><span class="string">&quot;miaomiao&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SETNX cat <span class="string">&quot;wenwenwen&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; get cat<span class="comment"># 此时cat仍然是miaomiao</span></span><br><span class="line"><span class="string">&quot;miaomiao&quot;</span></span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; mset k1 v1 k2 v2 k3 v3<span class="comment"># mset可以设置多个k-v</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) <span class="string">&quot;k1&quot;</span></span><br><span class="line">2) <span class="string">&quot;k3&quot;</span></span><br><span class="line">3) <span class="string">&quot;k2&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; MSETNX k1 v1 k4 v4<span class="comment"># msetnx是一个原子性操作，要么一起成功，要么一起失败</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; getset duixiang baifumei<span class="comment"># 先get然后set，如果get不存在，则返回nil</span></span><br><span class="line">(nil)</span><br><span class="line">127.0.0.1:6379&gt; get duixiang</span><br><span class="line"><span class="string">&quot;baifumei&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; getset duixiang heichangzhi<span class="comment"># 如果存在值，获取原来的值，并设置新的值</span></span><br><span class="line"><span class="string">&quot;baifumei&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; get duixiang</span><br><span class="line"><span class="string">&quot;heichangzhi&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; LPUSH list 1<span class="comment"># 从左边开始插入值</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; LPUSH list 2</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; LPUSH list 3</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 -1 <span class="comment"># 获取所有</span></span><br><span class="line">1) <span class="string">&quot;3&quot;</span></span><br><span class="line">2) <span class="string">&quot;2&quot;</span></span><br><span class="line">3) <span class="string">&quot;1&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 1<span class="comment"># 获取下标0-1的value</span></span><br><span class="line">1) <span class="string">&quot;3&quot;</span></span><br><span class="line">2) <span class="string">&quot;2&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; RPUSH list 4<span class="comment"># 从右边开始插入值</span></span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;3&quot;</span></span><br><span class="line">2) <span class="string">&quot;2&quot;</span></span><br><span class="line">3) <span class="string">&quot;1&quot;</span></span><br><span class="line">4) <span class="string">&quot;4&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LPOP list<span class="comment"># 从最左边出来一个</span></span><br><span class="line"><span class="string">&quot;3&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; RPOP list<span class="comment"># 从最右边出来一个</span></span><br><span class="line"><span class="string">&quot;4&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;2&quot;</span></span><br><span class="line">2) <span class="string">&quot;1&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LINDEX list 0<span class="comment"># 获取索引为0的值</span></span><br><span class="line"><span class="string">&quot;2&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LLEN list<span class="comment"># 获取list长度</span></span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt;  Lpush list 2</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt;  Lpush list 7</span><br><span class="line">(<span class="built_in">integer</span>) 4</span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;7&quot;</span></span><br><span class="line">2) <span class="string">&quot;2&quot;</span></span><br><span class="line">3) <span class="string">&quot;2&quot;</span></span><br><span class="line">4) <span class="string">&quot;1&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LREM list 1 7<span class="comment"># 移除1个7</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;2&quot;</span></span><br><span class="line">2) <span class="string">&quot;2&quot;</span></span><br><span class="line">3) <span class="string">&quot;1&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LREM list 2 2<span class="comment"># 移除2个2</span></span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;1&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;17&quot;</span></span><br><span class="line">2) <span class="string">&quot;16&quot;</span></span><br><span class="line">3) <span class="string">&quot;11&quot;</span></span><br><span class="line">4) <span class="string">&quot;11&quot;</span></span><br><span class="line">5) <span class="string">&quot;10&quot;</span></span><br><span class="line">6) <span class="string">&quot;1&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LTRIM list 1 2<span class="comment"># 截取索引为1到2的值</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;16&quot;</span></span><br><span class="line">2) <span class="string">&quot;11&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; RPOPLPUSH list otherlist<span class="comment"># 从list集合rpop值lpush到otherlist中</span></span><br><span class="line"><span class="string">&quot;11&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LRANGE list 0 -1</span><br><span class="line">1) <span class="string">&quot;16&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; LRANGE otherlist 0 -1</span><br><span class="line">1) <span class="string">&quot;11&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><p>set中的值无序不重复</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; sadd myset <span class="string">&quot;panda&quot;</span><span class="comment"># set集合中添加元素</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset <span class="string">&quot;banana&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset <span class="string">&quot;apple&quot;</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset<span class="comment"># 查看所有成员</span></span><br><span class="line">1) <span class="string">&quot;apple&quot;</span></span><br><span class="line">2) <span class="string">&quot;banana&quot;</span></span><br><span class="line">3) <span class="string">&quot;panda&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SISMEMBER myset apple<span class="comment"># 判断某一个值是不是在set中</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; SISMEMBER myset panpan</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; scard myset<span class="comment"># 获取set集合中元素个数</span></span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; sadd myset panda<span class="comment"># set不能添加重复的值，返回0</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; scard myset</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; srem myset panda<span class="comment"># 移除指定元素</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; scard myset</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; sadd myset panda</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset</span><br><span class="line">1) <span class="string">&quot;apple&quot;</span></span><br><span class="line">2) <span class="string">&quot;panda&quot;</span></span><br><span class="line">3) <span class="string">&quot;banana&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SRANDMEMBER myset<span class="comment"># 随机抽选1个元素</span></span><br><span class="line"><span class="string">&quot;banana&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SRANDMEMBER myset</span><br><span class="line"><span class="string">&quot;apple&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SRANDMEMBER myset</span><br><span class="line"><span class="string">&quot;apple&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SRANDMEMBER myset 2<span class="comment"># 随机抽取2个元素</span></span><br><span class="line">1) <span class="string">&quot;apple&quot;</span></span><br><span class="line">2) <span class="string">&quot;banana&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SPOP myset <span class="comment"># 随机弹出某1个值</span></span><br><span class="line"><span class="string">&quot;banana&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset</span><br><span class="line">1) <span class="string">&quot;apple&quot;</span></span><br><span class="line">2) <span class="string">&quot;panda&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; sadd myset banana</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; sadd myset2 cookie</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; smove myset myset2 banana<span class="comment"># 从1个集合中移动指定的值到另一个集合中</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset</span><br><span class="line">1) <span class="string">&quot;apple&quot;</span></span><br><span class="line">2) <span class="string">&quot;panda&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS myset2</span><br><span class="line">1) <span class="string">&quot;cookie&quot;</span></span><br><span class="line">2) <span class="string">&quot;banana&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; sadd key1 a b c d e f</span><br><span class="line">(<span class="built_in">integer</span>) 6</span><br><span class="line">127.0.0.1:6379&gt; sadd key2 c d h</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; SDIFF key1 key2<span class="comment"># 差集（key1有，key2没有）</span></span><br><span class="line">1) <span class="string">&quot;e&quot;</span></span><br><span class="line">2) <span class="string">&quot;b&quot;</span></span><br><span class="line">3) <span class="string">&quot;f&quot;</span></span><br><span class="line">4) <span class="string">&quot;a&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SINTER key1 key2<span class="comment"># 交集</span></span><br><span class="line">1) <span class="string">&quot;d&quot;</span></span><br><span class="line">2) <span class="string">&quot;c&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; SUNION key1 key2<span class="comment"># 并集</span></span><br><span class="line">1) <span class="string">&quot;f&quot;</span></span><br><span class="line">2) <span class="string">&quot;b&quot;</span></span><br><span class="line">3) <span class="string">&quot;e&quot;</span></span><br><span class="line">4) <span class="string">&quot;h&quot;</span></span><br><span class="line">5) <span class="string">&quot;c&quot;</span></span><br><span class="line">6) <span class="string">&quot;d&quot;</span></span><br><span class="line">7) <span class="string">&quot;a&quot;</span></span><br></pre></td></tr></table></figure><h2 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h2><p>Map集合 key-map，存的值是map集合</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hset myhash field1 panda <span class="comment"># set一个具体key-value</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hget myhash field1<span class="comment"># 获取1个字段值</span></span><br><span class="line"><span class="string">&quot;panda&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; hmset myhash field1 banana field2 monkey<span class="comment"># set多个key-value</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; hmget myhash field1 field2<span class="comment"># 获取多个字段值</span></span><br><span class="line">1) <span class="string">&quot;banana&quot;</span></span><br><span class="line">2) <span class="string">&quot;monkey&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; HGETALL myhash<span class="comment"># 获取全部值</span></span><br><span class="line">1) <span class="string">&quot;field1&quot;</span></span><br><span class="line">2) <span class="string">&quot;banana&quot;</span></span><br><span class="line">3) <span class="string">&quot;field2&quot;</span></span><br><span class="line">4) <span class="string">&quot;monkey&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; hdel myhash field1</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; hgetall myhash</span><br><span class="line">1) <span class="string">&quot;field2&quot;</span></span><br><span class="line">2) <span class="string">&quot;monkey&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; hmset myhash field1 panda</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; hgetall myhash</span><br><span class="line">1) <span class="string">&quot;field2&quot;</span></span><br><span class="line">2) <span class="string">&quot;monkey&quot;</span></span><br><span class="line">3) <span class="string">&quot;field1&quot;</span></span><br><span class="line">4) <span class="string">&quot;panda&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; hlen myhash<span class="comment"># 获取hash的字段数量</span></span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line">127.0.0.1:6379&gt; HEXISTS myhash field1<span class="comment"># 判断hash中指定字段是否存在</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; HKEYS myhash<span class="comment"># 获取所有key</span></span><br><span class="line">1) <span class="string">&quot;field2&quot;</span></span><br><span class="line">2) <span class="string">&quot;field1&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; HVALS myhash<span class="comment"># 获取所有value</span></span><br><span class="line">1) <span class="string">&quot;monkey&quot;</span></span><br><span class="line">2) <span class="string">&quot;panda&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; hset myhash field3 6</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; HINCRBY myhash field3 1<span class="comment"># 指定增量1</span></span><br><span class="line">(<span class="built_in">integer</span>) 7</span><br><span class="line">127.0.0.1:6379&gt; HSETNX myhash field4 haha</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; HSETNX myhash field4 hehe<span class="comment"># 如果不存在可以设置，存在可以不可以设置</span></span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line">127.0.0.1:6379&gt; hset user:1 name panda age 17 address TZ<span class="comment"># 存储对象信息</span></span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line">127.0.0.1:6379&gt; HGETALL user:1</span><br><span class="line">1) <span class="string">&quot;name&quot;</span></span><br><span class="line">2) <span class="string">&quot;panda&quot;</span></span><br><span class="line">3) <span class="string">&quot;age&quot;</span></span><br><span class="line">4) <span class="string">&quot;17&quot;</span></span><br><span class="line">5) <span class="string">&quot;address&quot;</span></span><br><span class="line">6) <span class="string">&quot;TZ&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="zset"><a href="#zset" class="headerlink" title="zset"></a>zset</h2><p>在set的基础上增加了score，用于排序</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; zadd myzset 99 liubei<span class="comment"># 设置分数</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zadd myzset 66 zhangfei</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zadd myzset 90 guanyu</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; ZRANGE myzset 0 -1<span class="comment"># 排序默认按照升序</span></span><br><span class="line">1) <span class="string">&quot;zhangfei&quot;</span></span><br><span class="line">2) <span class="string">&quot;guanyu&quot;</span></span><br><span class="line">3) <span class="string">&quot;liubei&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; ZRANGEBYSCORE myzset -inf 90 withscores<span class="comment"># 显示分数小于等于90的信息</span></span><br><span class="line">1) <span class="string">&quot;zhangfei&quot;</span></span><br><span class="line">2) <span class="string">&quot;66&quot;</span></span><br><span class="line">3) <span class="string">&quot;guanyu&quot;</span></span><br><span class="line">4) <span class="string">&quot;90&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; zrem myzset liubei<span class="comment"># 移除</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line">127.0.0.1:6379&gt; zrange myzset 0 -1</span><br><span class="line">1) <span class="string">&quot;zhangfei&quot;</span></span><br><span class="line">2) <span class="string">&quot;guanyu&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; ZCOUNT myzset 60 70<span class="comment"># 获取区间数量</span></span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="五、Redis事务"><a href="#五、Redis事务" class="headerlink" title="五、Redis事务"></a>五、Redis事务</h1><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>事务是一组命令的集合</p><p>Redis单条命令是保存原子性的，但是redis事务不保证原子性</p><p>redis事务具有 一次性、顺序性、排他性</p><p>开启事务：multi</p><p>命令集合入队：各种命令</p><p>执行事务：exec</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379(TX)&gt; <span class="built_in">set</span> k1 v1</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; <span class="built_in">set</span> k2 v2</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; get k2</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; <span class="built_in">set</span> k3 v3</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; <span class="built_in">exec</span></span><br><span class="line">1) OK</span><br><span class="line">2) OK</span><br><span class="line">3) <span class="string">&quot;v2&quot;</span></span><br><span class="line">4) OK</span><br><span class="line">127.0.0.1:6379&gt; </span><br><span class="line"></span><br><span class="line">127.0.0.1:6379(TX)&gt; <span class="built_in">set</span> k4 v4</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; <span class="built_in">set</span> k5 v5</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; DISCARD<span class="comment"># 取消事务</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; get k4<span class="comment"># 事务队列中命令都不会执行！ </span></span><br><span class="line">(nil)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编译型异常（代码有问题），事务中所有的命令不会被执行</p><p>运行时异常，错误命令抛出异常，其他命令可以正常执行</p><h2 id="乐观锁-悲观锁"><a href="#乐观锁-悲观锁" class="headerlink" title="乐观锁 悲观锁"></a>乐观锁 悲观锁</h2><p>乐观锁：不会上锁。更新数据的时候判断一下，在此期间是否有人修改过这个数据，根据version</p><p>悲观锁：每次都上锁，性能会低 </p><p>正常执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> money 100</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> out 0</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; watch money<span class="comment"># 监视  money 对象</span></span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379(TX)&gt; DECRBY money 20</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; INCRBY out 20</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; <span class="built_in">exec</span></span><br><span class="line">1) (<span class="built_in">integer</span>) 80</span><br><span class="line">2) (<span class="built_in">integer</span>) 20</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试多线程修改之后：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; watch money</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; multi</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379(TX)&gt; DECRBY money 10</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; INCRBY out 10</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379(TX)&gt; <span class="built_in">exec</span><span class="comment"># 执行过程中下面的线程对money值进行了修改，则事务执行失败</span></span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; get money</span><br><span class="line"><span class="string">&quot;80&quot;</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> money 10000</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h1 id="六、SpringBoot整合Redis"><a href="#六、SpringBoot整合Redis" class="headerlink" title="六、SpringBoot整合Redis"></a>六、SpringBoot整合Redis</h1>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Spring的后台脚手架框架  若依&amp;人人开源</title>
      <link href="2021/03/26/%E9%9D%9E%E5%B8%B8%E5%A5%BD%E7%94%A8%E7%9A%84%E5%9F%BA%E4%BA%8ESpring%E7%9A%84%E5%90%8E%E5%8F%B0%E8%84%9A%E6%89%8B%E6%9E%B6%E6%A1%86%E6%9E%B6-%E8%8B%A5%E4%BE%9D-%E4%BA%BA%E4%BA%BA%E5%BC%80%E6%BA%90/"/>
      <url>2021/03/26/%E9%9D%9E%E5%B8%B8%E5%A5%BD%E7%94%A8%E7%9A%84%E5%9F%BA%E4%BA%8ESpring%E7%9A%84%E5%90%8E%E5%8F%B0%E8%84%9A%E6%89%8B%E6%9E%B6%E6%A1%86%E6%9E%B6-%E8%8B%A5%E4%BE%9D-%E4%BA%BA%E4%BA%BA%E5%BC%80%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>这两个框架都是开源的，基于Spring，本身就可以跑起来。不仅适合学习，更重要的是能在此基础上快速地开发企业级后台管理系统，官网说明文档写得很清晰。</p><p>若依官网：<a href="https://www.ruoyi.vip/">https://www.ruoyi.vip/</a></p><p>人人开源官网：<a href="https://www.renren.io/">https://www.renren.io/</a></p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 若依&amp;人人开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MinIO服务如何配置加密访问</title>
      <link href="2021/03/21/MinIO%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE/"/>
      <url>2021/03/21/MinIO%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="从https引入了一个http的视频"><a href="#从https引入了一个http的视频" class="headerlink" title="从https引入了一个http的视频"></a>从https引入了一个http的视频</h1><ol><li>之前访问MinIO客户端页面走http协议<img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/MinIO%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE/image-20210321021216508-1616266036389-1616266044636-1616266112378.png" alt="image-20210321021216508"></li><li>在博客页面使用ip+端口的方式获取桶里面视频，加载不了。<img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/MinIO%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE/image-20210321021953887.png" alt="image-20210321021953887" style="zoom:67%;"> 博客页面是走https协议，发现加载的视频也是https协议，视频地址改成http是可以加载的。</li><li>对存储视频的Linux绑定域名后，通过域名+端口获取桶内视频还是加载不出来，F12显示</li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/MinIO%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE/image-20210321022109224.png" alt="image-20210321022109224"></p><h1 id="在MinIO中使用现有的密钥和证书"><a href="#在MinIO中使用现有的密钥和证书" class="headerlink" title="在MinIO中使用现有的密钥和证书"></a>在MinIO中使用现有的密钥和证书</h1><ol><li>为了解决上面的问题，从腾讯云域名解析那里SSL点进去下载证书，解压，进入Nginx，并改名：</li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/MinIO%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE/image-20210321022446563.png" alt="image-20210321022446563"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/MinIO%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE/image-20210321022508537.png" alt="image-20210321022508537"></p><ol start="2"><li>上传到MinIO映射的宿主机配置文件下</li></ol><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/MinIO%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE/image-20210321022636118.png" alt="image-20210321022636118"></p><ol start="3"><li>重启Docker <code>systemctl restart docker</code>，或者重启MinIO容器</li><li>终于变成https <img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/MinIO%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E5%8A%A0%E5%AF%86%E8%AE%BF%E9%97%AE/image-20210321022918957.png" alt="image-20210321022918957"></li></ol><p>参考：<a href="https://docs.min.io/docs/how-to-secure-access-to-minio-server-with-tls">https://docs.min.io/docs/how-to-secure-access-to-minio-server-with-tls</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MinIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名加锁</title>
      <link href="2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/"/>
      <url>2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/</url>
      
        <content type="html"><![CDATA[<h1 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h1><p>将域名解析到服务器的ip，并申请SSL（好像现在（2021-03）可以免费申请），这里以腾讯云举例。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/image-20210321012357547-1616266568662.png" alt="image-20210321012357547"></p><p>申请好之后下载证书 。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/image-20210321012756119.png" alt="image-20210321012756119"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/image-20210321012858905.png" alt="image-20210321012858905"></p><h1 id="然后"><a href="#然后" class="headerlink" title="然后"></a>然后</h1><p>在Centos 7系统安装nginx，命令：<code>yum install -y epel-release &amp;&amp; yum install -y nginx</code></p><p>Linux系统上Nginx默认站点配置文件是<code>/etc/nginx/conf.d/</code>目录下的<code>default.conf</code>，进入<code>/etc/nginx/conf.d/</code>目录下 <code>ll</code>发现没有对应的<code>default.conf</code>，<code>touch default.conf</code>,再<code>vim default.conf</code>  复制以下内容先保存，等下再改…</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name xxxxx;  # 改成你的域名</span><br><span class="line">    rewrite ^(.*) https://$server_name$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl http2;</span><br><span class="line">    server_name xxxxx;</span><br><span class="line">    charset utf-8;</span><br><span class="line"></span><br><span class="line">    # ssl配置</span><br><span class="line">    ssl_protocols TLSv1.2 TLSv1.3; # tls 1.3要求nginx 1.13.0及以上版本</span><br><span class="line">    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span><br><span class="line">    ssl_prefer_server_ciphers off;</span><br><span class="line">    ssl_session_cache shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 1d;</span><br><span class="line">    ssl_session_tickets off;</span><br><span class="line">    ssl_certificate xxxxx; # 改成你的证书地址</span><br><span class="line">    ssl_certificate_key xxxx; # 改成证书密钥文件地址</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/xxxx.access.log;</span><br><span class="line">    error_log /var/log/nginx/xxx.error.log;</span><br><span class="line"></span><br><span class="line">    root /usr/share/nginx/html;</span><br><span class="line">    location / &#123;</span><br><span class="line">        index  index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将刚才下载的证书解压并进入Nginx目录</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/image-20210321013808094.png" alt="image-20210321013808094"></p><p>将.crt文件和.key文件名改成域名（方便记忆，好像改成public和private合适点）</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/image-20210321013902005.png" alt="image-20210321013902005"></p><p>使用WinSCP<img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/image-20210321014102035.png" alt="image-20210321014102035">这个文件传输神器将Windows上的安全证书和KEY文件上传到Linux上，路径随意，比如：<img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/image-20210321014326504.png" alt="image-20210321014326504"></p><p>编辑上面那个default.conf</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name 域名;  # 改成你的域名</span><br><span class="line">    rewrite ^(.*) https://$server_name$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl http2;</span><br><span class="line">    server_name 域名;</span><br><span class="line">    charset utf-8;</span><br><span class="line"></span><br><span class="line">    # ssl配置</span><br><span class="line">    ssl_protocols TLSv1.2 TLSv1.3; # tls 1.3要求nginx 1.13.0及以上版本</span><br><span class="line">    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;</span><br><span class="line">    ssl_prefer_server_ciphers off;</span><br><span class="line">    ssl_session_cache shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 1d;</span><br><span class="line">    ssl_session_tickets off;</span><br><span class="line">    ssl_certificate /etc/nginx/自定义的名字.crt; # 改成你的证书地址</span><br><span class="line">    ssl_certificate_key /etc/nginx/自定义的名字.key; # 改成证书密钥文件地址</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/xxxx.access.log;</span><br><span class="line">    error_log /var/log/nginx/xxx.error.log;</span><br><span class="line"></span><br><span class="line">    root /usr/share/nginx/html;</span><br><span class="line">    location / &#123;</span><br><span class="line">        index  index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置好用<code>nginx -t</code>命令查看有无错误，没问题的话<code>systemctl restart nginx</code>启动Nginx。打开浏览器在地址栏输入域名，直接看到CentOS的欢迎页。。。为什么不是nginx的欢迎页面呢？？？</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/21/%E5%9F%9F%E5%90%8D%E5%8A%A0%E9%94%81/image-20210321014948817.png" alt="image-20210321014948817"></p><p>上面内容大部分转载于：<a href="https://tlanyan.me/v2ray-traffic-mask/">https://tlanyan.me/v2ray-traffic-mask/</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MinIO的安装与使用</title>
      <link href="2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-MinIO简介"><a href="#1-MinIO简介" class="headerlink" title="1. MinIO简介"></a>1. MinIO简介</h1><ul><li>MinIO是高性能的对象存储服务器，它非常适合存储非结构化数据，如图片、视频、音频、Excel报表、日志文件等，单个文件大小可以从几KB到5TB。</li><li>MinIO服务器足够轻量，提供的图形化界面清爽。</li><li>图标是一只仙鹤，官网地址：<a href="https://min.io/">https://min.io/</a></li></ul><h1 id="2-安装和使用"><a href="#2-安装和使用" class="headerlink" title="2. 安装和使用"></a>2. 安装和使用</h1><p>这里使用Docker安装MinIO</p><h2 id="2-1-搜索镜像"><a href="#2-1-搜索镜像" class="headerlink" title="2.1 搜索镜像"></a>2.1 搜索镜像</h2><p>使用命令：<code>docker search minio</code></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320205453098.png" alt="image-20210320205453098"></p><p>选第一个STARTS最多的准没错…</p><h2 id="2-2-拉取镜像"><a href="#2-2-拉取镜像" class="headerlink" title="2.2 拉取镜像"></a>2.2 拉取镜像</h2><p>使用命令：<code>docker pull docker.io/minio/minio</code>    (说明：docker pull + 镜像的名字）</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320210053149.png" alt="image-20210320210053149"></p><h2 id="2-3-查看镜像"><a href="#2-3-查看镜像" class="headerlink" title="2.3 查看镜像"></a>2.3 查看镜像</h2><p>使用命令： <code>docker images</code> 这是查看所有的镜像信息，包括未运行的和已运行的</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320211425542.png" alt="image-20210320211425542"></p><p>上面是刚刚下载的镜像，对上面红色标注做一下解释：</p><ul><li>REPOSITORY：来自于哪个仓库；</li><li>TAG：镜像的标签，比如5.7、latest分别表示5.7版本、最新的版本；</li><li>IMAGE ID：镜像的ID，唯一的，如果两个ID完全相同，那么实际上它们指向同一镜像，只是标签名称不同；</li><li>CREATED：镜像最后的更新时间；</li><li>SIZE：镜像的大小，优秀的镜像一般体积都比较小；</li></ul><h2 id="2-4-运行镜像"><a href="#2-4-运行镜像" class="headerlink" title="2.4 运行镜像"></a>2.4 运行镜像</h2><p>运行镜像之后有了MinIO容器，镜像相当于类（Class），容器相当于实例（instance）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -p 9000:9000 --name minio \</span><br><span class="line">-d --restart=always \</span><br><span class="line">-e &quot;MINIO_ACCESS_KEY=自定义AK&quot; \</span><br><span class="line">-e &quot;MINIO_SECRET_KEY=自定义SK&quot; \</span><br><span class="line">-v /home/data:/data \</span><br><span class="line">-v /home/config:/root/.minio \</span><br><span class="line">minio/minio server /data</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li><code>-p 9000:9000</code> 将宿主机（Linux系统）9000端口映射到MinIO容器 9000端口，通过访问宿主机的 ip:9000就访问到MinIO服务</li><li><code>-d --restart=always</code> Docker重启后容器也会重启</li><li><code>-e &quot;MINIO_ACCESS_KEY=自定义AK&quot;</code> <code>-e &quot;MINIO_SECRET_KEY=自定义SK&quot; \</code> AK和SK，相当于用户名和密码，访问MinIO服务必须需要这两个KEY</li><li><code>-v /home/data:/data</code> <code>-v /home/config:/root/.minio</code> 将宿主机上的数据、配置目录与容器内目录相映射</li></ul><h2 id="2-5-查看容器运行情况"><a href="#2-5-查看容器运行情况" class="headerlink" title="2.5 查看容器运行情况"></a>2.5 查看容器运行情况</h2><p>使用命令 <code>docker ps -a</code></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320221020677.png" alt="image-20210320221020677"></p><p>需要查看STATUS，有Up…表示运行着，如果是Exit..表示未运行</p><h2 id="2-6-查看安装logs信息"><a href="#2-6-查看安装logs信息" class="headerlink" title="2.6 查看安装logs信息"></a>2.6 查看安装logs信息</h2><p>命令 <code>docker logs 6189eedfc191</code>  （docker logs + CONTAINER ID）</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320221624504.png" alt="image-20210320221624504"></p><h2 id="2-7-登录客户端"><a href="#2-7-登录客户端" class="headerlink" title="2.7 登录客户端"></a>2.7 登录客户端</h2><p>浏览器输入Linux的ip+端口，如101.xx.xx.xx:9000</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320223324364.png" alt="image-20210320223324364"></p><p>输入刚才自定义的AK和SK，进入图形化界面</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320224334850.png" alt="image-20210320224334850"></p><h2 id="2-8-创建桶"><a href="#2-8-创建桶" class="headerlink" title="2.8 创建桶"></a>2.8 创建桶</h2><p>文件存储在桶内，桶可以认为是文件夹。MinIO桶名称(bucket name)命名不支持下划线，支持中划线。</p><p>点击右下角+号创建桶</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320224925983.png" alt="image-20210320224925983"></p><h2 id="2-9-存储数据"><a href="#2-9-存储数据" class="headerlink" title="2.9 存储数据"></a>2.9 存储数据</h2><p>现在就能轻松愉快地存储数据了，可以直接在浏览器中往桶内存数据，也可以通过MinIO提供的SDK，如通过Java客户端API调用，参考：<a href="https://docs.min.io/docs/java-client-api-reference.html">https://docs.min.io/docs/java-client-api-reference.html</a></p><h3 id="2-9-1-使用浏览器存"><a href="#2-9-1-使用浏览器存" class="headerlink" title="2.9.1 使用浏览器存"></a>2.9.1 使用浏览器存</h3><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320230816655.png" alt="image-20210320230816655"></p><h3 id="2-9-2-使用Java、Go存"><a href="#2-9-2-使用Java、Go存" class="headerlink" title="2.9.2 使用Java、Go存"></a>2.9.2 使用Java、Go存</h3><p>// TODO</p><h2 id="2-10-访问数据"><a href="#2-10-访问数据" class="headerlink" title="2.10 访问数据"></a>2.10 访问数据</h2><p>默认情况下，MinIO在没有配置bucket策略时是没有读写权限的，需要如下操作：</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320231659940.png" alt="image-20210320231659940"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320231726228.png" alt="image-20210320231726228"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/MinIO%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/image-20210320232051796.png" alt="image-20210320232051796"></p><p>然后就可以通过<code>ip:端口/桶名/文件名</code> 访问~</p><p>如：101.xx.xx.xx:9000/my-video/adultvideo.mp4</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MinIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百钱百鸡</title>
      <link href="2021/03/20/%E7%99%BE%E9%92%B1%E7%99%BE%E9%B8%A1/"/>
      <url>2021/03/20/%E7%99%BE%E9%92%B1%E7%99%BE%E9%B8%A1/</url>
      
        <content type="html"><![CDATA[<p>古代数学家<a href="https://baike.baidu.com/item/%E5%BC%A0%E4%B8%98%E5%BB%BA/10246238">张丘建</a>在《算经》一书中提出著名的“百钱白鸡”问题：一只公鸡值五钱，一只母鸡值三钱，三只小鸡值一钱，现在要用百钱买百鸡，请问公鸡、母鸡、小鸡各多少只？</p><p>分析：如果用一百钱只买一种鸡，那么公鸡最多20只，母鸡最多33只，小鸡最多300只。但题目要求只买100只，所以小鸡在0-100之间，母鸡在0-33之间，公鸡在0-20之间。公鸡、母鸡、小鸡个数分别用cock、hen、100-cock-hen表示。假设一钱不能再找零了，则小鸡应为3的倍数，则：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">for</span> cock := <span class="number">0</span>; cock &lt;= <span class="number">20</span>; cock++ &#123;</span><br><span class="line">    <span class="keyword">for</span> hen := <span class="number">0</span>; hen &lt;= <span class="number">33</span>; hen++ &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="number">100</span>-cock-hen)%<span class="number">3</span> == <span class="number">0</span> &amp;&amp; cock*<span class="number">5</span>+hen*<span class="number">3</span>+(<span class="number">100</span>-cock-hen)/<span class="number">3</span> == <span class="number">100</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;公鸡:%d 母鸡:%d 小鸡:%d\n&quot;</span>, cock, hen, <span class="number">100</span>-cock-hen)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">公鸡:0 母鸡:25 小鸡:75</span><br><span class="line">公鸡:4 母鸡:18 小鸡:78</span><br><span class="line">公鸡:8 母鸡:11 小鸡:81</span><br><span class="line">公鸡:12 母鸡:4 小鸡:84</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游戏作弊引擎 Cheat Engine</title>
      <link href="2021/03/20/%E6%B8%B8%E6%88%8F%E4%BD%9C%E5%BC%8A%E5%BC%95%E6%93%8E-Cheat-Engine/"/>
      <url>2021/03/20/%E6%B8%B8%E6%88%8F%E4%BD%9C%E5%BC%8A%E5%BC%95%E6%93%8E-Cheat-Engine/</url>
      
        <content type="html"><![CDATA[<p>Cheat Engine（CE）是一款旨在帮助您在没有互联网连接的情况下修改单人游戏的工具，因此您可以根据自己的喜好使其变得更难或更轻松（<font color="red">例如：发现100HP太容易了，请尝试玩最大1HP的游戏</font>） ，还包含其他有用的工具来帮助调试游戏甚至普通的应用程序，并通过让您通过后门检查内存修改来帮助保护您的系统，甚至还提供了一些将它们与常规手段隐藏起来的方法。</p><p>它带有内存扫描仪，可以快速扫描游戏中使用的变量并允许您对其进行更改，但是它还带有调试器，反汇编程序，汇编程序，speedhack，trainer maker，direct 3D操作工具，系统检查工具等等……对普通程序员和软件分析师也很有用。</p><p>上述文字机翻自CE官网：<a href="https://www.cheatengine.org/">https://www.cheatengine.org/</a></p><p>PS：看到有对《植物大战僵尸》做修改的，游戏开始时，修改阳光值到10000，再也不需要点阳光了，完全变成了养僵尸的游戏&gt;_&lt;</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/20/%E6%B8%B8%E6%88%8F%E4%BD%9C%E5%BC%8A%E5%BC%95%E6%93%8E-Cheat-Engine/image-20210320110147171.png" alt="image-20210320110147171"></p>]]></content>
      
      
      <categories>
          
          <category> Candy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cheat Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎么在CentOS上安装Docker</title>
      <link href="2021/03/19/%E6%80%8E%E4%B9%88%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85Docker/"/>
      <url>2021/03/19/%E6%80%8E%E4%B9%88%E5%9C%A8CentOS%E4%B8%8A%E5%AE%89%E8%A3%85Docker/</url>
      
        <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>查看liunx版本，Docker官方说建议3.10以上</p><p>可以通过命令 <code>uname -r</code> 查看，如CentOS 7.7 64位，内核版本：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@VM-0-6-centos ~]# uname -r</span><br><span class="line">3.10.0-1062.18.1.el7.x86_64</span><br></pre></td></tr></table></figure><p>若之前安装了Docker，再次安装之前先清理，命令：</p><p><code>sudo yum remove -y docker \                   docker-client \                   docker-client-latest \                   docker-common \                   docker-latest \                   docker-latest-logrotate \                   docker-logrotate \                   docker-selinux \                   docker-engine-selinux \                   docker-engine</code></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>CentOS7 系统 CentOS-Extras 库中已带 Docker，可以直接安装：<code>sudo yum install -y docker</code>  其中<code>sudo</code>（Super User do）表示以管理员的身份运行</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@VM-0-6-centos ~]# sudo yum install -y docker</span><br></pre></td></tr></table></figure><p>等待安装…看到Complete!就好了</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Dependency Updated:</span><br><span class="line">  policycoreutils.x86_64 0:2.5-34.el7                                                                   </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure><h1 id="启动、重启、关闭"><a href="#启动、重启、关闭" class="headerlink" title="启动、重启、关闭"></a>启动、重启、关闭</h1><ul><li><font color="blue">蓝色</font>代表CentOS 7.x的命令</li><li><font color="purple">紫色</font>代表CentOS 6.x的命令</li></ul><h3 id="Docker启动"><a href="#Docker启动" class="headerlink" title="Docker启动"></a>Docker启动</h3><ul><li><font color="blue">systemctl start docker</font></li><li><font color="purple">service docker start</font></li></ul><h3 id="Docker重启"><a href="#Docker重启" class="headerlink" title="Docker重启"></a>Docker重启</h3><ul><li><font color="blue">systemctl restart docker</font></li><li><font color="purple">service docker restart</font></li></ul><h3 id="Docker关闭"><a href="#Docker关闭" class="headerlink" title="Docker关闭"></a>Docker关闭</h3><ul><li><font color="blue">systemctl stop docker </font></li><li><font color="purple">service docker stop</font></li></ul><h3 id="查看是否启动成功"><a href="#查看是否启动成功" class="headerlink" title="查看是否启动成功"></a>查看是否启动成功</h3><ul><li>docker ps -a</li></ul><p>若启动成功，则显示以下内容：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@VM-0-6-centos ~]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE          COMMAND        CREATED      STATUS        PORTS        NAMES</span><br></pre></td></tr></table></figure><p>若没有启动，则显示以下内容：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@VM-0-6-centos ~]# docker ps -a</span><br><span class="line">Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</span><br></pre></td></tr></table></figure><h3 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h3><ul><li>systemctl enable docker</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@VM-0-6-centos ~]# systemctl enable docker</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><h4 id="查看Docker版本"><a href="#查看Docker版本" class="headerlink" title="查看Docker版本"></a>查看Docker版本</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@VM-0-6-centos ~]# docker --version</span><br><span class="line">Docker version 1.13.1, build 0be3e21/1.13.1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go有哪些web框架</title>
      <link href="2021/03/17/Go%E6%9C%89%E5%93%AA%E4%BA%9Bweb%E6%A1%86%E6%9E%B6/"/>
      <url>2021/03/17/Go%E6%9C%89%E5%93%AA%E4%BA%9Bweb%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p> 其实golang提供的net/http库已经很好了，对于http的协议的实现非常好。框架一直是敏捷开发中的利器，能让开发者很快的上手并做出应用，因此大牛们开发了Go的web框架。</p><ul><li><p>Beego</p><p>Beego是一款MVC框架，提供了Restful功能，同时热编译、自动化测试代码以及自动化打包部署都是它受到人们追捧的特点。Beego框架的中文文档相当丰富，同时它的社区也非常活跃。</p><p>官网：<a href="https://beego.me/">https://beego.me</a></p><p>github仓库：<a href="https://github.com/beego/beego">https://github.com/beego/beego</a></p><p>Star：26k    （2021-03-17）</p></li><li><p>Gin</p><p>Gin是一个golang的微框架，封装比较优雅，API友好，源码注释比较明确。具有快速灵活，容错方便等特点。</p><p>github仓库：<a href="https://github.com/gin-gonic/gin">https://github.com/gin-gonic/gin</a></p><p>Star：46.5k    （2021-03-17）    </p></li><li><p>Echo</p><p>简约的高性能 Go 语言 Web 框架。</p><p>github仓库：<a href="https://github.com/labstack/echo">https://github.com/labstack/echo</a></p><p>Star：19.4k    （2021-03-17）</p></li><li><p>Iris</p><p>号称全宇宙最快的 Go 语言 Web 框架。完备 MVC 支持。</p><p>github仓库：<a href="https://github.com/kataras/iris">https://github.com/kataras/iris</a></p><p>Star：20.2k    （2021-03-17）</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费又好用的CDN之jsDelivr</title>
      <link href="2021/03/14/%E5%85%8D%E8%B4%B9%E5%8F%88%E5%A5%BD%E7%94%A8%E7%9A%84CDN-jsDelivr/"/>
      <url>2021/03/14/%E5%85%8D%E8%B4%B9%E5%8F%88%E5%A5%BD%E7%94%A8%E7%9A%84CDN-jsDelivr/</url>
      
        <content type="html"><![CDATA[<p> 官网：<a href="https://www.jsdelivr.com/">https://www.jsdelivr.com/</a></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/03/14/%E5%85%8D%E8%B4%B9%E5%8F%88%E5%A5%BD%E7%94%A8%E7%9A%84CDN-jsDelivr/image-20210314222256066.png" alt="image-20210314222256066"></p><p>这个CDN能很好地给GitHub上的资源加速，可谓是非常好用的神器之一。</p><p>jsDelivr提供了NPM、GitHub、WordPress这三个直观例子，有兴趣的道友可以去进一步了解。</p><p>其中加速GitHub资源的方法是：</p><p><code>https://cdn.jsdelivr.net/gh/用户名称/仓库名称@分支名/目录(没有目录可不写)/文件名</code></p><p>使用之后，发现页面的加载速度嗖嗖嗖的提升了，有木有单车变摩托的感觉。</p>]]></content>
      
      
      <categories>
          
          <category> Candy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃10</title>
      <link href="2021/03/14/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8310/"/>
      <url>2021/03/14/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8310/</url>
      
        <content type="html"><![CDATA[<h1 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h1><p>​    使用关键字go开启轻量级线程goroutine（协程）</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">go</span> ping2()</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;pong...&quot;</span>)</span><br><span class="line">    time.Sleep(time.Second)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 等待两个循环跑完</span></span><br><span class="line">  <span class="keyword">for</span> &#123;</span><br><span class="line">    time.Sleep(<span class="number">100</span> * time.Second)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ping2</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;ping...&quot;</span>)</span><br><span class="line">    time.Sleep(time.Second)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pong...</span><br><span class="line">ping...</span><br><span class="line">ping...</span><br><span class="line">pong...</span><br><span class="line">ping...</span><br><span class="line">pong...</span><br><span class="line">pong...</span><br><span class="line">ping...</span><br><span class="line">ping...</span><br><span class="line">pong...</span><br></pre></td></tr></table></figure><h1 id="通道（channel）"><a href="#通道（channel）" class="headerlink" title="通道（channel）"></a>通道（channel）</h1><p>​    用于goroutine之间传递数据</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 声明通道</span></span><br><span class="line">  ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">  <span class="comment">// 把1写到通道中</span></span><br><span class="line">  ch &lt;- <span class="number">1</span></span><br><span class="line">  <span class="comment">// 从通道中读取数据赋值给x</span></span><br><span class="line">  x := &lt;-ch</span><br><span class="line">  fmt.Println(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fatal error: all goroutines are asleep - deadlock!</span><br><span class="line"></span><br><span class="line">goroutine 1 [chan send]:</span><br><span class="line">main.main()</span><br><span class="line">E:/GoCode/test0/main.go:9 +0x65</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 2</span><br></pre></td></tr></table></figure><p>最近在学channel老是发生这个死锁错误。百度了一下，发现对于开辟的无缓冲区的通道，当往通道写入数据时，会一直阻塞等到某个协程对这个缓冲通道读。main函数本身就是一个协程的执行，这里相当于在main函数里往通道里写了一个1，然后main函数阻塞了，下面的这句<code>x := &lt;-ch</code>只是main这个协程的语句，需要等到其他协程读取了数据，才能不再阻塞。</p><p>解决方法：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 声明通道</span></span><br><span class="line">  ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">  <span class="comment">// main函数执行完之前关闭通道</span></span><br><span class="line">  <span class="keyword">defer</span> <span class="built_in">close</span>(ch)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 把1写到通道中</span></span><br><span class="line">  <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    ch &lt;- <span class="number">1</span></span><br><span class="line">  &#125;()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 从通道中读取数据赋值给</span></span><br><span class="line">  <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    x := &lt;-ch</span><br><span class="line">    fmt.Println(x)</span><br><span class="line">  &#125;()</span><br><span class="line"></span><br><span class="line">  time.Sleep(time.Millisecond)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃09</title>
      <link href="2021/03/03/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8309/"/>
      <url>2021/03/03/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8309/</url>
      
        <content type="html"><![CDATA[<h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口<span id="more"></span></h1><p>接口定义方法名、传参、返回值，并未实现，其他方法只要实现这些方法就实现了这个接口。</p><p>接口使得Go语言也具有面向对象的特征。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义Car接口</span></span><br><span class="line"><span class="keyword">type</span> Car <span class="keyword">interface</span> &#123;</span><br><span class="line">  autoDrive()</span><br><span class="line">  playMusic()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个类型的车,只要该类型实现了所有Car接口的方法，该类型就是Car的子类</span></span><br><span class="line"><span class="keyword">type</span> WuLingHongGuang <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义另一个类型的车</span></span><br><span class="line"><span class="keyword">type</span> Car86 <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// (wl wuLingHongGuang)表示wuLingHongGuang这个类型可以调用这个方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wl WuLingHongGuang)</span> <span class="title">autoDrive</span><span class="params">()</span></span> &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;开启自动驾驶&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wl WuLingHongGuang)</span> <span class="title">playMusic</span><span class="params">()</span></span> &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;注意，开始放音乐了&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(car86 Car86)</span> <span class="title">autoDrive</span><span class="params">()</span></span> &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;闪电漂移&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(car86 Car86)</span> <span class="title">playMusic</span><span class="params">()</span></span> &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;播放逮虾户&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 声明接口变量</span></span><br><span class="line">  <span class="keyword">var</span> car Car</span><br><span class="line">  <span class="comment">// 把实现类型赋值给接口变量</span></span><br><span class="line">  car = <span class="built_in">new</span>(WuLingHongGuang)</span><br><span class="line">  <span class="comment">// 调用接口的方法，实际运行的是实现类型所实现的方法</span></span><br><span class="line">  car.autoDrive()</span><br><span class="line">  car.playMusic()</span><br><span class="line"></span><br><span class="line">  car = <span class="built_in">new</span>(Car86)</span><br><span class="line">  car.autoDrive()</span><br><span class="line">  car.playMusic()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">开启自动驾驶</span><br><span class="line">注意，开始放音乐了</span><br><span class="line">闪电漂移</span><br><span class="line">播放逮虾户</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃08</title>
      <link href="2021/03/01/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8308/"/>
      <url>2021/03/01/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8308/</url>
      
        <content type="html"><![CDATA[<h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体<span id="more"></span></h1><p>结构体是自定义类型，比如学生有姓名，年龄，学号等，则：</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义了学生这个结构体</span></span><br><span class="line"><span class="keyword">type</span> Students <span class="keyword">struct</span> &#123;</span><br><span class="line">  name <span class="keyword">string</span></span><br><span class="line">  age  <span class="keyword">int</span></span><br><span class="line">  id   <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 直接按照顺序写</span></span><br><span class="line">  stu1 := Students&#123;<span class="string">&quot;zhangsan&quot;</span>, <span class="number">23</span>, <span class="string">&quot;003&quot;</span>&#125;</span><br><span class="line">  <span class="comment">// 也可以使用key -&gt; value 格式</span></span><br><span class="line">  stu2 := Students&#123;name: <span class="string">&quot;lisi&quot;</span>, age: <span class="number">24</span>, id: <span class="string">&quot;004&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">  fmt.Println(stu1)</span><br><span class="line">  fmt.Println(stu2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;zhangsan 23 003&#125;</span><br><span class="line">&#123;lisi 24 004&#125;</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h1 id="Map（集合）"><a href="#Map（集合）" class="headerlink" title="Map（集合）"></a>Map（集合）</h1><p>Map是一种存储数据的方式之一，使用key：value 键值对形式，光说无意，看代码比较直观</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 定义map，使用make函数，map的值为string,key为int</span></span><br><span class="line">  nvShenMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 赋值</span></span><br><span class="line">  nvShenMap[<span class="string">&quot;杨超越&quot;</span>] = <span class="number">17</span></span><br><span class="line">  nvShenMap[<span class="string">&quot;陈都灵&quot;</span>] = <span class="number">16</span></span><br><span class="line">  nvShenMap[<span class="string">&quot;迪丽热巴&quot;</span>] = <span class="number">18</span></span><br><span class="line">  nvShenMap[<span class="string">&quot;苏菲玛索&quot;</span>] = <span class="number">19</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 使用for...range遍历</span></span><br><span class="line">  <span class="keyword">for</span> key,value := <span class="keyword">range</span> nvShenMap &#123;</span><br><span class="line">    fmt.Println(key,value)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">杨超越 17</span><br><span class="line">陈都灵 16</span><br><span class="line">迪丽热巴 18</span><br><span class="line">苏菲玛索 19</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好看的悬疑推理类电影</title>
      <link href="2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/"/>
      <url>2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="穆赫兰道"><a href="#穆赫兰道" class="headerlink" title="穆赫兰道"></a>穆赫兰道<span id="more"></span></h1><p>好莱坞的穆赫兰道上，一个名叫丽塔<em>（</em><a href="https://baike.baidu.com/item/%E5%8A%B3%E6%8B%89%C2%B7%E5%93%88%E7%81%B5/5502487"><em>劳拉·哈灵</em></a> <em>饰）</em>的女人遇上了一场车祸。车祸中的另外两个看上去显然不怎么正经的男人当场丧命，但丽塔幸运地死里逃生。但是她完全失忆了，甚至连自己的名字也无法记起。她从车里爬出来，跌跌撞撞地来到一座公寓，藏身于公寓外的灌木丛中。下图是导演大卫芬奇在指导演员。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/muhelandao.jpg" alt="img"></p><h1 id="恐怖游轮"><a href="#恐怖游轮" class="headerlink" title="恐怖游轮"></a>恐怖游轮</h1><p>单亲母亲杰西（<a href="https://baike.baidu.com/item/%E6%A2%85%E5%88%A9%E8%8E%8E%C2%B7%E4%B9%94%E6%B2%BB">梅利莎·乔治</a>饰）和一帮朋友乘游艇出海游玩，但她总有一种有不好的事情发生的感觉。不久，他们便在海上遭遇一场强烈的风暴。游艇翻船，众人落海，几经挣扎他们好不容易爬到游艇残骸上来。正当他们无计可施之时，一艘巨大的游轮向众人缓缓驶来。众人欣喜过望，未加思索便登上这艘名为“<a href="https://baike.baidu.com/item/%E8%89%BE%E4%BF%84%E6%B4%9B%E6%96%AF">艾俄洛斯</a>”的游轮，结果发现这竟是一艘1930年便告失踪的神秘之船，而船上更是空无一人。随处可见的鲜血、神秘的指示以及突如其来的凶杀事件，将这群男女带入万劫不复的恐怖轮回之中。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/kongbuyoulun.jpg" alt="img"></p><h1 id="七宗罪"><a href="#七宗罪" class="headerlink" title="七宗罪"></a>七宗罪</h1><p>《七宗罪》由布拉德·皮特、摩根·弗里曼、格温妮丝·帕特洛、凯文·史派西等人主演的惊悚悬疑片。和《穆赫兰道》一样也是大卫芬奇执导。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/qicongzui.jpg" alt="img"></p><h1 id="致命ID"><a href="#致命ID" class="headerlink" title="致命ID"></a>致命ID</h1><p>在一个漆黑的夜晚，一片无边无际的沙漠荒原，一场肆虐的暴风雨，将矗立在其中的一座汽车旅馆与外界完全隔离，道路不通，通讯中断。</p><p>11个此前相互完全不了解的陌生人，被迫聚集在这个摇摇欲坠的破汽车旅馆中。这11个人被分在了不同的房间，他们都拿着带有号码的房间钥匙。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/zhimingid.jpg" alt="img"></p><h1 id="迷雾"><a href="#迷雾" class="headerlink" title="迷雾"></a>迷雾</h1><p>由曾经导演过《肖申克的救赎》的弗兰克.达拉邦导演并改编自著名恐怖小说家史蒂芬.金的小说，讲述了一个小镇忽然被一阵来路不明的大雾笼罩，那雾中似乎有什么神秘的东西，主人公大卫·德雷顿与儿子领着一小拨人，退避到一家超市中……</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/miwu.jpg" alt="img"></p><h1 id="记忆碎片"><a href="#记忆碎片" class="headerlink" title="记忆碎片"></a>记忆碎片</h1><p>当记忆支离破碎后，你该怎样面对生活？本片的主人公就遭遇了这样的事情。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/jiyisuipian.jpg" alt="img"></p><h1 id="万能钥匙"><a href="#万能钥匙" class="headerlink" title="万能钥匙"></a>万能钥匙</h1><p>该片讲述了护士卡罗琳去一个僻远而古旧的房子里照顾房子男主人却被卷入一连串的阴谋的故事。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/wannengyoushi.jpg" alt="img"></p><h1 id="禁闭岛"><a href="#禁闭岛" class="headerlink" title="禁闭岛"></a>禁闭岛</h1><p>《禁闭岛》讲述了联邦侦探泰德·丹尼尔受命到一座岛上，却因此遇到了重重危险和谜团的故事。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/jinbidao.jpg" alt="img"></p><h1 id="盗梦空间"><a href="#盗梦空间" class="headerlink" title="盗梦空间"></a>盗梦空间</h1><p>影片讲述由<a href="https://baike.baidu.com/item/%E8%8E%B1%E6%98%82%E7%BA%B3%E5%A4%9A%C2%B7%E8%BF%AA%E5%8D%A1%E6%99%AE%E9%87%8C%E5%A5%A5/1243185">莱昂纳多·迪卡普里奥</a>扮演的<a href="https://baike.baidu.com/item/%E9%80%A0%E6%A2%A6%E5%B8%88/16966844">造梦师</a>，带领<a href="https://baike.baidu.com/item/%E7%BA%A6%E7%91%9F%E5%A4%AB%C2%B7%E9%AB%98%E7%99%BB-%E8%8E%B1%E7%BB%B4%E7%89%B9">约瑟夫·高登-莱维特</a>、<a href="https://baike.baidu.com/item/%E8%89%BE%E4%BC%A6%C2%B7%E4%BD%A9%E5%90%89/1268855">艾伦·佩吉</a><a href="https://baike.baidu.com/item/%E6%89%AE%E6%BC%94/3856018">扮演</a>的特工团队，进入他人梦境，从他人的潜意识中盗取机密，并重塑他人梦境的故事。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/28/%E5%A5%BD%E7%9C%8B%E7%9A%84%E6%82%AC%E7%96%91%E6%8E%A8%E7%90%86%E7%B1%BB%E7%94%B5%E5%BD%B1/daomengkongjian.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影视 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃07</title>
      <link href="2021/02/27/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8307/"/>
      <url>2021/02/27/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8307/</url>
      
        <content type="html"><![CDATA[<h1 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片<span id="more"></span></h1><p>因为数组的长度是固定不可改变，所以引入了切片（可以认为是动态数组），长度不固定，可以往里面追加元素。</p><h2 id="初始化切片"><a href="#初始化切片" class="headerlink" title="初始化切片"></a>初始化切片</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 初始化数组</span></span><br><span class="line">  <span class="comment">// [3]表示初始化长度为3的数组</span></span><br><span class="line">  a0 := [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">  <span class="comment">// 初始化切片有两种方式</span></span><br><span class="line">  <span class="comment">// 一、使用[]初始化切片，区别于初始化数组这里[]内什么也不写</span></span><br><span class="line">  s0 := []<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">  <span class="comment">// 二、使用make()函数初始化长度为5，存int值的切片</span></span><br><span class="line">  s1 := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">  fmt.Printf(<span class="string">&quot;a0的类型是：%T\n&quot;</span>, a0)</span><br><span class="line">  fmt.Printf(<span class="string">&quot;s0的类型是：%T\n&quot;</span>, s0)</span><br><span class="line">  fmt.Printf(<span class="string">&quot;s1的类型是：%T\n&quot;</span>, s1)</span><br><span class="line"></span><br><span class="line">  fmt.Println(a0)</span><br><span class="line">  fmt.Println(s0)</span><br><span class="line">  fmt.Println(s1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a0的类型是：[3]int</span><br><span class="line">s0的类型是：[]int</span><br><span class="line">s1的类型是：[]int</span><br><span class="line">[1 2 3]</span><br><span class="line">[1 2 3]</span><br><span class="line">[0 0 0 0 0]</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h2 id="切片操作"><a href="#切片操作" class="headerlink" title="切片操作"></a>切片操作</h2><h3 id="len-和cap-函数"><a href="#len-和cap-函数" class="headerlink" title="len()和cap()函数"></a>len()和cap()函数</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 使用make()初始化长度为5，容量为10的存int的切片</span></span><br><span class="line">  slice := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">  fmt.Printf(<span class="string">&quot;len=%d cap=%d slice=%v\n&quot;</span>, <span class="built_in">len</span>(slice), <span class="built_in">cap</span>(slice), slice)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">len=5 <span class="built_in">cap</span>=10 slice=[0 0 0 0 0]</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h2 id="append-和-copy-函数、空切片"><a href="#append-和-copy-函数、空切片" class="headerlink" title="append() 和 copy() 函数、空切片"></a>append() 和 copy() 函数、空切片</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 使用make()初始化长度为5，容量为10的存int的切片</span></span><br><span class="line">  slice := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">  printSlice(slice)</span><br><span class="line">  <span class="comment">// 往切片中追加元素20，此时长度为6，为超过容量10，不扩容</span></span><br><span class="line">  slice = <span class="built_in">append</span>(slice, <span class="number">20</span>)</span><br><span class="line">  printSlice(slice)</span><br><span class="line">  <span class="comment">// 在上面切片的基础上，继续添加以下7个元素，此时长度为13，容量扩容为之前的两倍，10-&gt;20,</span></span><br><span class="line">  slice = <span class="built_in">append</span>(slice, <span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">90</span>)</span><br><span class="line">  printSlice(slice)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印切片长度、容量、值的函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printSlice</span><span class="params">(s []<span class="keyword">int</span>)</span></span>  &#123;</span><br><span class="line">  fmt.Printf(<span class="string">&quot;len=%d cap=%d slice=%v\n&quot;</span>, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s), s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">len=5 <span class="built_in">cap</span>=10 slice=[0 0 0 0 0]</span><br><span class="line">len=6 <span class="built_in">cap</span>=10 slice=[0 0 0 0 0 20]</span><br><span class="line">len=13 <span class="built_in">cap</span>=20 slice=[0 0 0 0 0 20 30 40 50 60 70 80 90]</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 声明切片并未初始化</span></span><br><span class="line">  <span class="keyword">var</span> slices []<span class="keyword">int</span></span><br><span class="line">  printSlice(slices)</span><br><span class="line">  <span class="keyword">if</span> slices == <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;sleces是个空切片&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  slices = <span class="built_in">append</span>(slices, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">55</span>, <span class="number">5</span>)</span><br><span class="line">  <span class="comment">// 因为往slices里追加了元素，下面if不成立</span></span><br><span class="line">  <span class="keyword">if</span> slices == <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;sleces还是个空切片&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  printSlice(slices)</span><br><span class="line">  <span class="comment">// 声明另一个空切片</span></span><br><span class="line">  <span class="keyword">var</span> copySlices []<span class="keyword">int</span></span><br><span class="line">  <span class="comment">// 往里面拷贝</span></span><br><span class="line">  <span class="built_in">copy</span>(copySlices, slices)</span><br><span class="line">  <span class="comment">// 此时打印为[],看来需要手动指定长度</span></span><br><span class="line">  fmt.Println(copySlices)</span><br><span class="line">  <span class="comment">// 指定和原切片长度相等</span></span><br><span class="line">  copySlices = <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="built_in">len</span>(slices))</span><br><span class="line">  <span class="comment">// 再往里面拷贝</span></span><br><span class="line">  <span class="built_in">copy</span>(copySlices, slices)</span><br><span class="line">  fmt.Println(copySlices)</span><br><span class="line">  printSlice(copySlices)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印切片长度、容量、值的函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printSlice</span><span class="params">(s []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">  fmt.Printf(<span class="string">&quot;len=%d cap=%d slice=%v\n&quot;</span>, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s), s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">len=0 <span class="built_in">cap</span>=0 slice=[]</span><br><span class="line">sleces是个空切片</span><br><span class="line">len=5 <span class="built_in">cap</span>=6 slice=[1 3 5 55 5]</span><br><span class="line">[]</span><br><span class="line">[1 3 5 55 5]</span><br><span class="line">len=5 <span class="built_in">cap</span>=5 slice=[1 3 5 55 5]</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h3 id="切片截取"><a href="#切片截取" class="headerlink" title="切片截取"></a>切片截取</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 创建数组</span></span><br><span class="line">  numbers := [<span class="number">10</span>]<span class="keyword">int</span>&#123;<span class="number">54</span>, <span class="number">56</span>, <span class="number">61</span>, <span class="number">59</span>, <span class="number">45</span>, <span class="number">43</span>, <span class="number">13</span>, <span class="number">49</span>, <span class="number">73</span>, <span class="number">34</span>&#125;</span><br><span class="line">  <span class="comment">// [:]表示从数组中截取整段，生成切片赋值给slices0</span></span><br><span class="line">  slices0 := numbers[:]</span><br><span class="line">  printSlice(slices0)</span><br><span class="line">  <span class="comment">// [:3]表示从数组开始索引截取到索引为3的前一个元素</span></span><br><span class="line">  slices1 := numbers[:<span class="number">3</span>]</span><br><span class="line">  printSlice(slices1)</span><br><span class="line">  <span class="comment">// [1:]表示从数组索引为1的元素截取到末尾元素</span></span><br><span class="line">  slices2 := numbers[<span class="number">1</span>:]</span><br><span class="line">  printSlice(slices2)</span><br><span class="line">  <span class="comment">// [3:5]表示从数组索引为3的元素截取到索引为5的前一个元素（截取:两边的数字是包头不包尾）</span></span><br><span class="line">  slices3 := numbers[<span class="number">3</span>:<span class="number">5</span>]</span><br><span class="line">  printSlice(slices3)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印切片长度、容量、值的函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printSlice</span><span class="params">(s []<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">  fmt.Printf(<span class="string">&quot;len=%d cap=%d slice=%v\n&quot;</span>, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s), s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">len=10 <span class="built_in">cap</span>=10 slice=[54 56 61 59 45 43 13 49 73 34]</span><br><span class="line">len=3 <span class="built_in">cap</span>=10 slice=[54 56 61]</span><br><span class="line">len=9 <span class="built_in">cap</span>=9 slice=[56 61 59 45 43 13 49 73 34]</span><br><span class="line">len=2 <span class="built_in">cap</span>=7 slice=[59 45]</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃06</title>
      <link href="2021/02/27/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8306/"/>
      <url>2021/02/27/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8306/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组<span id="more"></span></h1><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/27/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8306/image-20210227232045086.png" alt="image-20210227232045086"></p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组的三种初始化方式</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 定义长度为5的存储int类型的数组</span></span><br><span class="line">  arrayA := [<span class="number">5</span>]<span class="keyword">int</span>&#123;&#125;</span><br><span class="line">  <span class="comment">// 定义长度为5的存储int类型的数组并初始化</span></span><br><span class="line">  arrayB := [<span class="number">5</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>&#125;</span><br><span class="line">  <span class="comment">// 定义长度不确定的存储int类型的数组并初始化，编译器会根据元素个数自行推断数组的长度</span></span><br><span class="line">  arrayC := [...]<span class="keyword">int</span>&#123;<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>&#125;</span><br><span class="line">  fmt.Println(arrayA)</span><br><span class="line">  fmt.Println(arrayB)</span><br><span class="line">  fmt.Println(arrayC)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[0 0 0 0 0]</span><br><span class="line">[1 3 5 7 9]</span><br><span class="line">[2 4 6 8 10 12 14 16]</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组索引</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  arrayB := [<span class="number">5</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>&#125;</span><br><span class="line">  <span class="comment">// 通过索引访问数组内元素</span></span><br><span class="line">  value := arrayB[<span class="number">1</span>]</span><br><span class="line">  fmt.Println(value)</span><br><span class="line">  <span class="comment">// 修改对应索引处元素的值</span></span><br><span class="line">  arrayB[<span class="number">4</span>] = <span class="number">999</span></span><br><span class="line">  fmt.Println(arrayB)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">[1 3 5 7 999]</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃05</title>
      <link href="2021/02/27/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8305/"/>
      <url>2021/02/27/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8305/</url>
      
        <content type="html"><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数<span id="more"></span></h1><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// main函数，程序的入口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 调用add函数,传两个参数1,1</span></span><br><span class="line">  sum := add(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">  fmt.Println(sum)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数名为add，它接收两个参数，都为int类型，并返回int类型</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x <span class="keyword">int</span>, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">  <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃04</title>
      <link href="2021/02/27/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8304/"/>
      <url>2021/02/27/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8304/</url>
      
        <content type="html"><![CDATA[<h1 id="条件和循环"><a href="#条件和循环" class="headerlink" title="条件和循环"></a>条件和循环<span id="more"></span></h1><h2 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h2><h3 id="if…eles…"><a href="#if…eles…" class="headerlink" title="if…eles…"></a>if…eles…</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> flag = <span class="literal">true</span></span><br><span class="line">  <span class="comment">// if后面跟一个布尔表达式或bool类型变量</span></span><br><span class="line">  <span class="keyword">if</span> flag &#123;</span><br><span class="line">    <span class="comment">// 如果条件为真，执行下面一句代码</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;立了flag&quot;</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 否则，执行下面一句代码</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;没有立flag&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">立了flag</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h3 id="switch-case…"><a href="#switch-case…" class="headerlink" title="switch case…"></a>switch case…</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 定义季节</span></span><br><span class="line">  <span class="keyword">var</span> season = <span class="number">1</span></span><br><span class="line">  <span class="comment">// 开始匹配</span></span><br><span class="line">  <span class="keyword">switch</span> season &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;春天&quot;</span>)</span><br><span class="line">    <span class="comment">// 匹配到1，则执行打印夏天</span></span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;夏天&quot;</span>)</span><br><span class="line">  <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;秋天&quot;</span>)</span><br><span class="line">  <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;冬天&quot;</span>)</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;处于四季之外的季节&quot;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">夏天</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><h4 id="单层for循环"><a href="#单层for循环" class="headerlink" title="单层for循环"></a>单层for循环</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  sum := <span class="number">0</span></span><br><span class="line">  <span class="comment">// i初始值为0，for循环开始执行一次；当i&lt;=10时,执行sum = sum + i；</span></span><br><span class="line">  <span class="comment">// 之后i自增1，在判断i是否小于等于10，是则继续，否则退出for循环</span></span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">0</span>; i&lt;=<span class="number">10</span>; i++ &#123;</span><br><span class="line">    sum += i</span><br><span class="line">  &#125;</span><br><span class="line">  fmt.Println(sum)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">55</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h4 id="多层for循环"><a href="#多层for循环" class="headerlink" title="多层for循环"></a>多层for循环</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++ &#123;</span><br><span class="line">    <span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= i; j++ &#123;</span><br><span class="line">      fmt.Printf(<span class="string">&quot;%d*%d=%d\t&quot;</span>, j, i, j*i)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1*1=1</span><br><span class="line">1*2=22*2=4</span><br><span class="line">1*3=32*3=63*3=9</span><br><span class="line">1*4=42*4=83*4=124*4=16</span><br><span class="line">1*5=52*5=103*5=154*5=205*5=25</span><br><span class="line">1*6=62*6=123*6=184*6=245*6=306*6=36</span><br><span class="line">1*7=72*7=143*7=214*7=285*7=356*7=427*7=49</span><br><span class="line">1*8=82*8=163*8=244*8=325*8=406*8=487*8=568*8=64</span><br><span class="line">1*9=92*9=183*9=274*9=365*9=456*9=547*9=638*9=729*9=81</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><h4 id="for-range"><a href="#for-range" class="headerlink" title="for range"></a>for range</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 定义切片</span></span><br><span class="line">  titles := []<span class="keyword">string</span>&#123;<span class="string">&quot;为了部落&quot;</span>, <span class="string">&quot;为了联盟&quot;</span>&#125;</span><br><span class="line">  <span class="comment">// rang关键字遍历切片，返回i、v，分别为索引和值</span></span><br><span class="line">  <span class="keyword">for</span> i, v := <span class="keyword">range</span> titles &#123;</span><br><span class="line">    fmt.Println(i, v)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0 为了部落</span><br><span class="line">1 为了联盟</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃03</title>
      <link href="2021/02/25/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8303/"/>
      <url>2021/02/25/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8303/</url>
      
        <content type="html"><![CDATA[<h1 id="Go-语言运算符"><a href="#Go-语言运算符" class="headerlink" title="Go 语言运算符"></a>Go 语言运算符</h1><h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符<span id="more"></span></h2><table><thead><tr><th>运算符</th><th>功能</th></tr></thead><tbody><tr><td>+</td><td>相加</td></tr><tr><td>-</td><td>相减</td></tr><tr><td>*</td><td>相乘</td></tr><tr><td>/</td><td>相除</td></tr><tr><td>++</td><td>自增</td></tr><tr><td>–</td><td>自减</td></tr><tr><td>%</td><td>求余数</td></tr></tbody></table><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><table><thead><tr><th>运算符</th><th>功能</th></tr></thead><tbody><tr><td>==</td><td>左右两边相等返回true，不相等返回false</td></tr><tr><td>!=</td><td>左右两边不相等返回true，相等返回false</td></tr><tr><td>&gt;</td><td>左边大于右边返回true，否则返回false</td></tr><tr><td>&gt;=</td><td>左边大于等于右边返回true，否则返回false</td></tr><tr><td>&lt;</td><td>左边小于右边返回true，否则返回false</td></tr><tr><td>&lt;=</td><td>左边小于等于右边返回true，否则返回false</td></tr></tbody></table><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><table><thead><tr><th>运算符</th><th>功能</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>与（and），只有左右两边都为true，返回true；否则返回false</td></tr><tr><td>||</td><td>或（or），只要左右有一个true，返回true；否则返回false</td></tr><tr><td>！</td><td>非（not），true条件之前加上它，就变成false；false条件前加上它，就变成true</td></tr></tbody></table><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p>用于对二进制位进行操作，比如数字4的二进制位是0100，数字5的二进制位是0101</p><table><thead><tr><th>运算符</th><th>功能</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与，对应位上两个都是1才是1，(4&amp;5)  -&gt;（0100&amp;0101）为0100 -&gt;数字4</td></tr><tr><td>|</td><td>按位或，对应位上只要有1就是1，(4&amp;5)  -&gt;（0100&amp;0101）为0101 -&gt;数字5</td></tr><tr><td>^</td><td>按位异或，对应位置不同为1，相同为0，(4^5)  -&gt;（0100^0101）为0001 -&gt;数字1</td></tr><tr><td>&lt;&lt;</td><td>左移，低位补0，左移1位乘2，左移两位乘4，左移n位乘2的n次方，(4&lt;&lt;2) -&gt; (0100&lt;&lt;2)为010000 -&gt;数字16</td></tr><tr><td>&gt;&gt;</td><td>右移，与左移相反</td></tr></tbody></table><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><p>=    +=    -=    *=    =    等等</p><h2 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h2><table><thead><tr><th>运算符</th><th>功能</th></tr></thead><tbody><tr><td>&amp;</td><td>取变量的地址，&amp;a，返回变量a的地址</td></tr><tr><td>*</td><td>指针运算符，可以表示一个变量是个指针类型，也可以获取一个指针变量所指向的值</td></tr></tbody></table><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/25/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8303/image-20210226001556329.png" alt="image-20210226001556329"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/25/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8303/image-20210226002844617.png" alt="image-20210226002844617"></p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么是灰度发布</title>
      <link href="2021/02/25/%E4%BB%80%E4%B9%88%E6%98%AF%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/"/>
      <url>2021/02/25/%E4%BB%80%E4%B9%88%E6%98%AF%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是灰度发布，以及灰度发布A-B测试"><a href="#什么是灰度发布，以及灰度发布A-B测试" class="headerlink" title="什么是灰度发布，以及灰度发布A/B测试"></a>什么是灰度发布，以及灰度发布A/B测试</h1><p>最近听到灰度发布，之前从没听说过，于是百度了一下。<span id="more"></span></p><p>在一般情况下，升级服务器端应用，需要将应用源码或程序包上传到服务器，然后停止掉老版本服务，再启动新版本。但是这种简单的发布方式存在两个问题，一方面，在新版本升级过程中，服务是暂时中断的，另一方面，如果新版本有BUG，升级失败，回滚起来也非常麻烦，容易造成更长时间的服务不可用。</p><p>为了解决这些问题，人们研究出了多种发布策略，下面我们一一介绍。</p><h2 id="蓝绿部署"><a href="#蓝绿部署" class="headerlink" title="蓝绿部署"></a>蓝绿部署</h2><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/25/%E4%BB%80%E4%B9%88%E6%98%AF%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/20180822160107866" alt="img"></p><p>所谓蓝绿部署，是指同时运行两个版本的应用，如上图所示，蓝绿部署的时候，并不停止掉老版本，而是直接部署一套新版本，等新版本运行起来后，再将流量切换到新版本上。但是蓝绿部署要求在升级过程中，同时运行两套程序，对硬件的要求就是日常所需的二倍，比如日常运行时，需要10台服务器支撑业务，那么使用蓝绿部署，你就需要购置二十台服务器。</p><h2 id="滚动发布"><a href="#滚动发布" class="headerlink" title="滚动发布"></a>滚动发布</h2><p>滚动发布能够解决掉蓝绿部署时对硬件要求增倍的问题。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/25/%E4%BB%80%E4%B9%88%E6%98%AF%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/20180822160130273" alt="img"></p><p>所谓滚动升级，就是在升级过程中，并不一下子启动所有新版本，是先启动一台新版本，再停止一台老版本，然后再启动一台新版本，再停止一台老版本，直到升级完成，这样的话，如果日常需要10台服务器，那么升级过程中也就只需要11台就行了。</p><p>但是滚动升级有一个问题，在开始滚动升级后，流量会直接流向已经启动起来的新版本，但是这个时候，新版本是不一定可用的，比如需要进一步的测试才能确认。那么在滚动升级期间，整个系统就处于非常不稳定的状态，如果发现了问题，也比较难以确定是新版本还是老版本造成的问题。</p><p>为了解决这个问题，我们需要为滚动升级实现流量控制能力。</p><h2 id="灰度发布"><a href="#灰度发布" class="headerlink" title="灰度发布"></a>灰度发布</h2><p>灰度发布也叫金丝雀发布，起源是，矿井工人发现，金丝雀对瓦斯气体很敏感，矿工会在下井之前，先放一只金丝雀到井中，如果金丝雀不叫了，就代表瓦斯浓度高。</p><p>灰度发布（金丝雀发布）是指在黑与白之间，能够平滑过渡的一种发布方式。在其上可以进行A/B testing，即让一部分用户继续用产品特性A，一部分用户开始用产品特性B，如果用户对B没有什么反对意见，那么逐步扩大范围，把所有用户都迁移到B上面来。灰度发布可以保证整体系统的稳定，在初始灰度的时候就可以发现、调整问题，以保证其影响度。</p><p>灰度期：灰度发布开始到结束期间的这一段时间，称为灰度期。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/25/%E4%BB%80%E4%B9%88%E6%98%AF%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/20180822160153895" alt="img"></p><p>在灰度发布开始后，先启动一个新版本应用，但是并不直接将流量切过来，而是测试人员对新版本进行线上测试，启动的这个新版本应用，就是我们的金丝雀。如果没有问题，那么可以将少量的用户流量导入到新版本上，然后再对新版本做运行状态观察，收集各种运行时数据，如果此时对新旧版本做各种数据对比，就是所谓的A/B测试。</p><p>当确认新版本运行良好后，再逐步将更多的流量导入到新版本上，在此期间，还可以不断地调整新旧两个版本的运行的服务器副本数量，以使得新版本能够承受越来越大的流量压力。直到将100%的流量都切换到新版本上，最后关闭剩下的老版本服务，完成灰度发布。</p><p>如果在灰度发布过程中（灰度期）发现了新版本有问题，就应该立即将流量切回老版本上，这样，就会将负面影响控制在最小范围内。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在新版本应用发布时，为了服务器不停机升级，使用灰度发布策略，在灰度发布开始时，使用HTTP Header 匹配指定测试人员的流量到新版本上，然后当新版本内部测试通过后，可以再按百分比，将用户流量一点一点导入到新版本中，比如先导入10%观察一下运行情况，然后再导入20%，如此累加，直到将流量全部导入到新版本上，最后完成升级，如果期间发现问题，就立即取消升级，将流量切回到老版本。</p><p>运用灰度发布，就再也不需要加班到深夜进行停机升级了，在白天就可以放心大胆地、安全地发布新版本。</p><p>转载自：<a href="https://blog.csdn.net/qq_42234452/article/details/90906692">https://blog.csdn.net/qq_42234452/article/details/90906692</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 灰度发布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零:月蚀的假面</title>
      <link href="2021/02/24/%E9%9B%B6-%E6%9C%88%E8%9A%80%E7%9A%84%E5%81%87%E9%9D%A2/"/>
      <url>2021/02/24/%E9%9B%B6-%E6%9C%88%E8%9A%80%E7%9A%84%E5%81%87%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>《零:月蚀的假面》是一款动作解谜游戏，是《<a href="https://baike.baidu.com/item/%E9%9B%B6/138918">零</a>》系列的第四作。</p><p>零系列从发布年代开始分别为：<span id="more"></span>《零:Zero》（没玩过）、《零:红蝶》（非常感人）、《零:刺青之声》、《零:月蚀的假面》、《零:濡鸦之巫女》</p><p>最初接触到这个游戏还是13年的时候，那时使用各种搜索找到了开启在win7上体验该游戏的方法。</p><p>原来游戏可以这么设计，之后发现同类型的作品《小镇惊魂》也相当不错。</p><p>零系列百度网盘：<a href="https://pan.baidu.com/s/1-HsneTRz0YIjwfKcCqGw6g">https://pan.baidu.com/s/1-HsneTRz0YIjwfKcCqGw6g</a></p><p>提取码：jl3q</p><p><strong>图先欠着</strong></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文字冒险游戏20210221</title>
      <link href="2021/02/21/%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9%E6%B8%B8%E6%88%8F20210221/"/>
      <url>2021/02/21/%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9%E6%B8%B8%E6%88%8F20210221/</url>
      
        <content type="html"><![CDATA[<h1 id="1-《白色相簿2》"><a href="#1-《白色相簿2》" class="headerlink" title="1.《白色相簿2》"></a>1.《白色相簿2》</h1><p>如果你听说过</p><p>“又到了白色相簿的季节”</p><span id="more"></span><p>“是我，是我先，明明都是我先来的……”</p><p>“为什么这么熟练”</p><p>……</p><p> 那么你一定了解白学</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9%E6%B8%B8%E6%88%8F20210221/%E7%99%BD%E5%AD%A6.jpg" alt="avatar"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9%E6%B8%B8%E6%88%8F20210221/WhiteAlbum.jpg" alt="avatar"></p><p>下载链接：资源我再找找</p><h1 id="2-《壳之少女》"><a href="#2-《壳之少女》" class="headerlink" title="2. 《壳之少女》"></a>2. 《壳之少女》</h1><p>《壳之少女》是Innocent Grey开发的推理猎奇类<a href="https://baike.baidu.com/item/AVG%E6%B8%B8%E6%88%8F/6702220">AVG游戏</a>，有一种魔力想一直探索然后呢，之后呢，后来呢，最后呢… …</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9%E6%B8%B8%E6%88%8F20210221/%E5%A3%B301.png" alt="avatar"></p><p>下载链接：<a href="https://pan.baidu.com/s/1KEkzsAegAp894WV8wnJoQQ">https://pan.baidu.com/s/1KEkzsAegAp894WV8wnJoQQ</a></p><p>提取码：4vf2</p><h1 id="3-《Fate-stay-night》"><a href="#3-《Fate-stay-night》" class="headerlink" title="3.《Fate/stay night》"></a>3.《Fate/stay night》</h1><p>《Fate/stay night》命运/守护之夜讲述了圣杯是传说中可实现持有者一切愿望的宝物，而为了得到圣杯的仪式就被称为圣杯战争。 参加圣杯战争的七名由圣杯选出的魔术师被称为Master，与七名被称为Servant的使魔订定契约。他们是由圣杯选择的七位英灵，被分为七个职阶，以使魔的身份被召唤出来。能获得圣杯的只有一组，这七组人马各自为了成为最后的那一组而互相残杀。 卫宫切嗣的养子卫宫士郎，偶然地与Servant中的剑士（Saber）定下契约，被卷入圣杯战争当中。 在游戏版本中，随着初期选择的不同，后面剧情亦会出现极大改变，共有三线。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E6%96%87%E5%AD%97%E5%86%92%E9%99%A9%E6%B8%B8%E6%88%8F20210221/fatestaynight.jpg" alt="avatar"></p><p>下载链接：<a href="https://pan.baidu.com/s/1Le67Z9i5HNmKRgBH9HWwuQ">https://pan.baidu.com/s/1Le67Z9i5HNmKRgBH9HWwuQ</a></p><p>提取码：qwg8</p><h1 id="end"><a href="#end" class="headerlink" title="end"></a>end</h1><p>以上资源来源网络，如有侵权，请联系删除：<a href="mailto:&#49;&#x33;&#49;&#x30;&#x32;&#51;&#53;&#57;&#55;&#x30;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;">&#49;&#x33;&#49;&#x30;&#x32;&#51;&#53;&#57;&#55;&#x30;&#64;&#x71;&#113;&#46;&#99;&#x6f;&#x6d;</a></p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全网公认最好看的9部韩剧，《旋转木马》仅排第5，倒数第1名仍然地位稳固...</title>
      <link href="2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/"/>
      <url>2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/</url>
      
        <content type="html"><![CDATA[<p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/loading.gif" alt="avatar"></p><span id="more"></span><h1 id="1-《搞笑一家人-不可阻挡的High-Kick-》"><a href="#1-《搞笑一家人-不可阻挡的High-Kick-》" class="headerlink" title="1.《搞笑一家人 不可阻挡的High Kick!》"></a>1.《搞笑一家人 不可阻挡的High Kick!》</h1><p>《搞笑一家人》以李顺才一家从老头开始到其他所有角色，搞笑的剧情一点也不会觉得是无厘头的那种，而且到后面也有有些伤感的剧情，整个给人的感觉是搞笑中又不失温暖。最搞笑的是那个老头，看优良股被发现后一个星期没有回家…</p><p>上映时间：2006年</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/%E6%90%9E%E7%AC%91%E4%B8%80%E5%AE%B6%E4%BA%BA.jpg" alt="avatar"></p><h1 id="2-《未生》"><a href="#2-《未生》" class="headerlink" title="2.《未生》"></a>2.《未生》</h1><p>《未生》主要以上班族为剧情主线，其中人物的生活、工作等方方面面当时可是引起了不少观众的共鸣，同时也激励着不少职场中人要记得每天努力向前奔跑。</p><p>上映时间：2014年</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/%E6%9C%AA%E7%94%9F.jpg" alt="avatar"></p><h1 id="3-《来自星星的你》"><a href="#3-《来自星星的你》" class="headerlink" title="3.《来自星星的你》"></a>3.《来自星星的你》</h1><p>《来自星星的你》虽然已经过去很久，但当时火遍校园。获奖无数的外星人题材并不足以让人称奇，但是像电影一样充满复杂的剪辑方式，并且在爱情线中插入一条杀人线，让剧情充满悬疑感。在教授和女明星的爱情方面，虽然两人也难以逃脱“生病”、“受伤”等韩剧必经之路，但这个过程却不再走苦情虐心的路线，反而往往充满很多轻松的萌点、笑点，角色的人设也是最重要的魅力点 。<em>（南方日报评）</em></p><p>上映时间：2013年</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/%E6%9D%A5%E8%87%AA%E6%98%9F%E6%98%9F%E7%9A%84%E4%BD%A0.jpg" alt="avatar"></p><h1 id="4-《Dream-High》"><a href="#4-《Dream-High》" class="headerlink" title="4.《Dream High》"></a>4.《Dream High》</h1><p>《Dream High》(追梦高中)一部以艺术高中为背景的青春剧。预定在电视剧中刻画期望着成为歌手、演员、舞蹈演员等的十几岁的青少年们的梦想与挫折，讲述他们成长过程的辛苦和友情等故事。另外，电视剧还将反映韩国娱乐产业的实际情况。 该电视剧是怀有明星梦的艺术高中的学生们的故事的电视剧。制作阶段开始，裴勇俊和朴振英的会面，成为人们的话题。 《Dream High》是讲演艺艺术学校内发生的事件和矛盾中成长的学生们的故事。内容市包括歌曲、舞蹈、演技”等有趣的看点和国内娱乐产业的实际可以看出模样的作品。</p><p>上映时间：2011年</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/DreamHigh.jpg" alt="avatar"></p><h1 id="5-《旋转木马》"><a href="#5-《旋转木马》" class="headerlink" title="5.《旋转木马》"></a>5.《旋转木马》</h1><p>《旋转木马》在DNF很盛行，LOL还没出来的时候，在网吧看到网管在看……剧中乔恩（张瑞希 饰）和乔榛（秀爱 饰）是一对感情十分要好的姐妹，原本富裕的家庭突遭变故，一夜之间，两个女孩失去了包括家庭在内的一切，过起了半工半读的辛苦生活。一次偶然中，乔恩结识了名叫姜宇燮（金南镇 饰）的男子，两人情投意合，很快就走到了一起。然而，一系列意外让乔恩渐渐失去了对姜宇燮的信任，敏感的她选择了离开。之后，乔恩遇见了善良的秀衡（柳秀容 饰），秀衡的温柔慢慢治愈了乔恩受伤的心灵，两人决定携手踏入婚姻的殿堂。然而，就在此时，满腔怒火的姜宇燮出现在了乔恩的面前，粗暴地占有了这个即将成为新娘的女人，与此同时，秀衡的妹妹秀莲（金智友 饰）痴痴地爱上了姜宇燮。</p><p>上映时间：2003年</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC.jpg" alt="avatar"></p><h1 id="6-《大长今》"><a href="#6-《大长今》" class="headerlink" title="6.《大长今》"></a>6.《大长今》</h1><p>《大长今》很有名的，当时火遍大街小巷，闹市静区，跳过，下一个</p><h1 id="7-《爱情需要奇迹》"><a href="#7-《爱情需要奇迹》" class="headerlink" title="7.《爱情需要奇迹》"></a>7.《爱情需要奇迹》</h1><p>《爱情需要奇迹》男主像高中时的同桌，女主像高中时的前桌，讲述了因抚养着死去朋友的儿子而变成“未婚妈妈”的车凤馨与二世小开陈正标的故事。其中女主在写字楼门口等雨跺脚很有灵性…</p><p>上映时间：2005年</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/%E7%88%B1%E6%83%85%E9%9C%80%E8%A6%81%E5%A5%87%E8%BF%B9.png" alt="avatar"></p><h1 id="8-《城市猎人》"><a href="#8-《城市猎人》" class="headerlink" title="8.《城市猎人》"></a>8.《城市猎人》</h1><p>《城市猎人》讲述由于总统在缅甸遭受恐怖袭击，所以国防部决定对朝鲜进行报复行动，该行动由国防部长崔英灿主导，但21名特种部队成员完成任务后却遭灭口，在好友朴武烈保护下，李震彪（金相中 饰）成了唯一的幸存者。面对国家背叛，他决定复仇。他抢走了朴武烈的独子潜逃至泰国，抚养他长大。28年后，从美国MIT学成归来的李润成（李敏镐 饰），带着义父复仇的旨意回到韩国。为了掩人耳目，他的身份是青瓦台国家通信网特聘专家，阴错阳差结识了青瓦台警卫员金娜娜（朴敏英 饰），后者身世凄惨，但颇为坚强，相似的命运让两人发生了一段生死之恋。李润成在复仇时用了“城市猎人”的代号，成为首尔检察官金英株（李俊赫 饰）一直追逐的目标。在一个个消灭主谋的同时，真相正在浮出水面……</p><p>上映时间：2011年</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/%E5%9F%8E%E5%B8%82%E7%8C%8E%E4%BA%BA.jpg" alt="avatar"></p><h1 id="9-《宇宙英雄奥特曼》"><a href="#9-《宇宙英雄奥特曼》" class="headerlink" title="9.《宇宙英雄奥特曼》"></a>9.《宇宙英雄奥特曼》</h1><p>《宇宙英雄奥特曼》作为<strong>初代奥特曼</strong>，他是来自<a href="https://baike.baidu.com/item/M78%E6%98%9F%E4%BA%91/20353950">M78星云</a>的光之巨人，为了追捕逃亡的宇宙怪兽<a href="https://baike.baidu.com/item/%E7%99%BE%E6%85%95%E6%8B%89/4745177">百慕拉</a>而来到地球。在龙森湖上空追击百慕拉时，他不慎与<a href="https://baike.baidu.com/item/%E7%A7%91%E5%AD%A6%E7%89%B9%E6%90%9C%E9%98%9F/2713811">科学特搜队</a>队员<a href="https://baike.baidu.com/item/%E6%97%A9%E7%94%B0%E8%BF%9B/3398867">早田进</a>所乘的飞机相撞，致其坠机死亡。为了弥补自己的过失以及挽救早田的生命，奥特曼将自己的生命给予了早田，与之一心同体使其复活。之后，奥特曼与早田一起，为保卫地球而与众多凶暴的怪兽和邪恶的宇宙人展开了激烈的战斗 。在这之后出现了佐菲、赛文、杰克、艾斯、泰罗、雷欧、艾迪、迪迦、戴拿、盖亚、赛文21、梦比优斯……</p><p>奥特曼是奥特系列历史中第一位登场的奥特战士，被誉为起源的巨人，他阳光乐观的形象使得那个年代的年轻人们度过无忧无虑纯粹的时光。</p><p>上映时间：1966年</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/21/%E5%85%A8%E7%BD%91%E5%85%AC%E8%AE%A4%E6%9C%80%E5%A5%BD%E7%9C%8B%E7%9A%849%E9%83%A8%E9%9F%A9%E5%89%A7%EF%BC%8C%E3%80%8A%E6%97%8B%E8%BD%AC%E6%9C%A8%E9%A9%AC%E3%80%8B%E4%BB%85%E6%8E%92%E7%AC%AC5%EF%BC%8C%E5%80%92%E6%95%B0%E7%AC%AC1%E5%90%8D%E4%BB%8D%E7%84%B6%E5%9C%B0%E4%BD%8D%E7%A8%B3%E5%9B%BA/%E5%A5%A5%E7%89%B9%E6%9B%BC.jpg" alt="avatar"></p><h1 id="end"><a href="#end" class="headerlink" title="end"></a>end</h1><p>以上排名由系统随机生成，图片、文字描述拷贝自网络。 </p><p>如有侵权，请联系删除：<a href="mailto:&#49;&#x33;&#x31;&#48;&#x32;&#51;&#x35;&#57;&#55;&#48;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#109;">&#49;&#x33;&#x31;&#48;&#x32;&#51;&#x35;&#57;&#55;&#48;&#64;&#113;&#x71;&#x2e;&#x63;&#x6f;&#109;</a></p>]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影视 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃02</title>
      <link href="2021/02/18/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8302/"/>
      <url>2021/02/18/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8302/</url>
      
        <content type="html"><![CDATA[<h1 id="Go语言常量"><a href="#Go语言常量" class="headerlink" title="Go语言常量"></a>Go语言常量</h1><p>使用const关键字声明</p><p><strong>demo1</strong></p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">const</span> SPRING <span class="keyword">string</span> = <span class="string">&quot;春天&quot;</span></span><br><span class="line">  <span class="keyword">const</span> SUMMER <span class="keyword">string</span> = <span class="string">&quot;夏天&quot;</span></span><br><span class="line">  <span class="keyword">const</span> AUTUMN <span class="keyword">string</span> = <span class="string">&quot;秋天&quot;</span></span><br><span class="line">  <span class="keyword">const</span> WINTER <span class="keyword">string</span> = <span class="string">&quot;冬天&quot;</span></span><br><span class="line">  <span class="built_in">println</span>(SPRING, SUMMER, AUTUMN, WINTER)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">春天 夏天 秋天 冬天</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><p><strong>demo2</strong></p><p>iota，特殊常量，在const关键字出现时被重置为0，const中每新增一行常量声明iota自动加1。</p><p>iota 只是在同一个 const 常量组内递增，每当有新的 const 关键字时，iota 计数会重新开始。</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">const</span> (</span><br><span class="line">    a = <span class="literal">iota</span></span><br><span class="line">    b = <span class="literal">iota</span></span><br><span class="line">    c = <span class="string">&quot;请忽略我&quot;</span></span><br><span class="line">    d = <span class="literal">iota</span></span><br><span class="line">    e</span><br><span class="line">    f = <span class="literal">iota</span></span><br><span class="line">    g</span><br><span class="line">  )</span><br><span class="line">  <span class="keyword">const</span> h = <span class="literal">iota</span></span><br><span class="line">  <span class="keyword">const</span> i = <span class="literal">iota</span></span><br><span class="line">  fmt.Println(a, b, c, d, e, f, g, h, i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0 1 请忽略我 3 4 5 6 0 0</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><p><strong>demo3</strong></p><p>iota与左移（参考<a href="https://www.runoob.com/go/go-constants.html">菜鸟教程</a>）</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">const</span> (</span><br><span class="line">    i = <span class="number">1</span> &lt;&lt; <span class="literal">iota</span></span><br><span class="line">    j = <span class="number">3</span> &lt;&lt; <span class="literal">iota</span></span><br><span class="line">    k</span><br><span class="line">    l</span><br><span class="line">  )</span><br><span class="line">  fmt.Println(<span class="string">&quot;i=&quot;</span>, i)</span><br><span class="line">  fmt.Println(<span class="string">&quot;j=&quot;</span>, j)</span><br><span class="line">  fmt.Println(<span class="string">&quot;k=&quot;</span>, k)</span><br><span class="line">  fmt.Println(<span class="string">&quot;l=&quot;</span>, l)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">i= 1</span><br><span class="line">j= 6</span><br><span class="line">k= 12</span><br><span class="line">l= 24</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><p>简单表述：iota 表示从 0 开始自动加 1，所以 <strong>i=1&lt;&lt;0</strong>, <strong>j=3&lt;&lt;1</strong>（**&lt;&lt;** 表示左移的意思，左移1位乘以2，左移2位乘以4，左移n位乘以2的n次方），即：i=1, j=6，这没问题，关键在 k 和 l，从输出结果看 <strong>k=3&lt;&lt;2</strong>，<strong>l=3&lt;&lt;3</strong>。</p><p>可以认为左移是二进制位移动，末尾添0</p><p>i=1左移0位，不变仍为1；</p><p>j=3左移1位，由11变为110，即6</p><p>k=3左移2位，由11变为1100，即12</p><p>l=3左移3位，由11变为11000，即24    </p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃01</title>
      <link href="2021/02/18/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8301/"/>
      <url>2021/02/18/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8301/</url>
      
        <content type="html"><![CDATA[<h1 id="Go语言的数据类型"><a href="#Go语言的数据类型" class="headerlink" title="Go语言的数据类型"></a>Go语言的数据类型</h1><table><thead><tr><th align="left">类型</th><th>描述</th></tr></thead><tbody><tr><td align="left">布尔(bool)</td><td>true、false</td></tr><tr><td align="left">字符串(string)</td><td>“我是字符串”</td></tr><tr><td align="left">数字</td><td>见下图</td></tr><tr><td align="left">非基本类型</td><td>指针、数组、结构体、接口、Map、切片、函数、Channel</td></tr></tbody></table><span id="more"></span><table><thead><tr><th>数字类型</th><th>描述</th></tr></thead><tbody><tr><td>int8、uint8</td><td>-128到127、0到255</td></tr><tr><td>int16、uint16</td><td>-32768到32767、0到65535</td></tr><tr><td>int32、uint32</td><td>-2147483648到2147483647、0到4294967295</td></tr><tr><td>int64、uint64</td><td>-9223372036854775808到9223372036854775807、0到18446744073709551615</td></tr><tr><td>float32</td><td>1.401298464324817070923729583289916131280e-45到3.402823466385288598117041834516925440e+38</td></tr><tr><td>float64</td><td>4.940656458412465441765687928682213723651e-324到1.797693134862315708145274237317043567981e+308</td></tr><tr><td>byte</td><td>类似uint8</td></tr><tr><td>rune</td><td>类似int32</td></tr><tr><td>int</td><td>32 或 64 位,取决于操作系统</td></tr><tr><td>uint</td><td>32 或 64 位,取决于操作系统</td></tr></tbody></table><h1 id="Go语言变量"><a href="#Go语言变量" class="headerlink" title="Go语言变量"></a>Go语言变量</h1><p>Go 语言变量名由字母、数字、下划线组成，首个字符不能为数字。</p><p><strong>demo1</strong></p><p>声明变量的一般使用 var 关键字，每行结束不用加封号（；）</p><p>fmt.Print（变量名）    #打印不换行</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> a <span class="keyword">int8</span> = <span class="number">2</span></span><br><span class="line">  <span class="keyword">var</span> b <span class="keyword">string</span> = <span class="string">&quot;B&quot;</span></span><br><span class="line">  <span class="keyword">var</span> c <span class="keyword">string</span> = <span class="string">&quot;小姐姐&quot;</span></span><br><span class="line">  fmt.Print(a)</span><br><span class="line">  fmt.Print(b)</span><br><span class="line">  fmt.Print(c)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2B小姐姐</span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><p><strong>demo2</strong></p><p>var a string    #只声明不赋值，打印默认值</p><p>b := “字符串”      :=为声明并赋值</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> a <span class="keyword">string</span></span><br><span class="line">  b := <span class="string">&quot;字符串&quot;</span></span><br><span class="line">  fmt.Println(a)</span><br><span class="line">  fmt.Println(b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">字符串</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure><p><strong>demo3</strong></p><p>空白符_     #占个位置，对接收的数据不处理</p><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  _, secondParam, thirdParam := getData()</span><br><span class="line">  fmt.Println(secondParam, thirdParam)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getData</span><span class="params">()</span> <span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line">  a, b, c := <span class="number">1</span>, <span class="number">2</span>, <span class="string">&quot;345&quot;</span></span><br><span class="line">  <span class="keyword">return</span> a, b, c</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2 345</span><br><span class="line"></span><br><span class="line">Process finished with <span class="built_in">exit</span> code 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5 canvas 240行代码实现粒子漩涡特效</title>
      <link href="2021/02/17/HTML5-canvas-240%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%B2%92%E5%AD%90%E6%BC%A9%E6%B6%A1%E7%89%B9%E6%95%88/"/>
      <url>2021/02/17/HTML5-canvas-240%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%B2%92%E5%AD%90%E6%BC%A9%E6%B6%A1%E7%89%B9%E6%95%88/</url>
      
        <content type="html"><![CDATA[<p> <strong>效果</strong></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/HTML5-canvas-240%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%B2%92%E5%AD%90%E6%BC%A9%E6%B6%A1%E7%89%B9%E6%95%88/image-20210217215722923.png" alt="image-20210217215722923"><span id="more"></span></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/HTML5-canvas-240%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%B2%92%E5%AD%90%E6%BC%A9%E6%B6%A1%E7%89%B9%E6%95%88/image-20210217215841145.png" alt="image-20210217215841145"></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>网上抄的<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">html</span>,<span class="selector-tag">body</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="attribute">margin</span>:<span class="number">0px</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">overflow</span>:hidden;</span></span><br><span class="line"><span class="css">      <span class="attribute">background</span>:<span class="number">#000</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    #canvas&#123;</span><br><span class="line"><span class="css">      <span class="attribute">position</span>:absolute;</span></span><br><span class="line"><span class="css">      <span class="attribute">width</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="css">      <span class="attribute">height</span>:<span class="number">100%</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;canvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">project3D</span>(<span class="params">x,y,z,vars</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> p,d;</span></span><br><span class="line">    x-=vars.camX;</span><br><span class="line">    y-=vars.camY-8;</span><br><span class="line">    z-=vars.camZ;</span><br><span class="line"><span class="javascript">    p=<span class="built_in">Math</span>.atan2(x,z);</span></span><br><span class="line"><span class="javascript">    d=<span class="built_in">Math</span>.sqrt(x*x+z*z);</span></span><br><span class="line"><span class="javascript">    x=<span class="built_in">Math</span>.sin(p-vars.yaw)*d;</span></span><br><span class="line"><span class="javascript">    z=<span class="built_in">Math</span>.cos(p-vars.yaw)*d;</span></span><br><span class="line"><span class="javascript">    p=<span class="built_in">Math</span>.atan2(y,z);</span></span><br><span class="line"><span class="javascript">    d=<span class="built_in">Math</span>.sqrt(y*y+z*z);</span></span><br><span class="line"><span class="javascript">    y=<span class="built_in">Math</span>.sin(p-vars.pitch)*d;</span></span><br><span class="line"><span class="javascript">    z=<span class="built_in">Math</span>.cos(p-vars.pitch)*d;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> rx1=-<span class="number">1000</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ry1=<span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> rx2=<span class="number">1000</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ry2=<span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> rx3=<span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ry3=<span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> rx4=x;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ry4=z;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> uc=(ry4-ry3)*(rx2-rx1)-(rx4-rx3)*(ry2-ry1);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ua=((rx4-rx3)*(ry1-ry3)-(ry4-ry3)*(rx1-rx3))/uc;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ub=((rx2-rx1)*(ry1-ry3)-(ry2-ry1)*(rx1-rx3))/uc;</span></span><br><span class="line">    if(!z)z=0.000000001;</span><br><span class="line">    if(ua&gt;0&amp;&amp;ua&lt;1&amp;&amp;ub&gt;0&amp;&amp;ub&lt;1)&#123;</span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line">        x:vars.cx+(rx1+ua*(rx2-rx1))*vars.scale,</span><br><span class="line">        y:vars.cy+y/z*vars.scale,</span><br><span class="line">        d:(x*x+y*y+z*z)</span><br><span class="line">      &#125;;</span><br><span class="line"><span class="javascript">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123; <span class="attr">d</span>:-<span class="number">1</span> &#125;;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">elevation</span>(<span class="params">x,y,z</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> dist = <span class="built_in">Math</span>.sqrt(x*x+y*y+z*z);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(dist &amp;&amp; z/dist&gt;=-<span class="number">1</span> &amp;&amp; z/dist &lt;=<span class="number">1</span>) <span class="keyword">return</span> <span class="built_in">Math</span>.acos(z / dist);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="number">0.00000001</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">rgb</span>(<span class="params">col</span>)</span>&#123;</span></span><br><span class="line">    col += 0.000001;</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> r = <span class="built_in">parseInt</span>((<span class="number">0.5</span>+<span class="built_in">Math</span>.sin(col)*<span class="number">0.5</span>)*<span class="number">16</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> g = <span class="built_in">parseInt</span>((<span class="number">0.5</span>+<span class="built_in">Math</span>.cos(col)*<span class="number">0.5</span>)*<span class="number">16</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> b = <span class="built_in">parseInt</span>((<span class="number">0.5</span>-<span class="built_in">Math</span>.sin(col)*<span class="number">0.5</span>)*<span class="number">16</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="string">&quot;#&quot;</span>+r.toString(<span class="number">16</span>)+g.toString(<span class="number">16</span>)+b.toString(<span class="number">16</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">interpolateColors</span>(<span class="params">RGB1,RGB2,degree</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> w2=degree;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> w1=<span class="number">1</span>-w2;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> [w1*RGB1[<span class="number">0</span>]+w2*RGB2[<span class="number">0</span>],w1*RGB1[<span class="number">1</span>]+w2*RGB2[<span class="number">1</span>],w1*RGB1[<span class="number">2</span>]+w2*RGB2[<span class="number">2</span>]];</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">rgbArray</span>(<span class="params">col</span>)</span>&#123;</span></span><br><span class="line">    col += 0.000001;</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> r = <span class="built_in">parseInt</span>((<span class="number">0.5</span>+<span class="built_in">Math</span>.sin(col)*<span class="number">0.5</span>)*<span class="number">256</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> g = <span class="built_in">parseInt</span>((<span class="number">0.5</span>+<span class="built_in">Math</span>.cos(col)*<span class="number">0.5</span>)*<span class="number">256</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> b = <span class="built_in">parseInt</span>((<span class="number">0.5</span>-<span class="built_in">Math</span>.sin(col)*<span class="number">0.5</span>)*<span class="number">256</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> [r, g, b];</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">colorString</span>(<span class="params">arr</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> r = <span class="built_in">parseInt</span>(arr[<span class="number">0</span>]);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> g = <span class="built_in">parseInt</span>(arr[<span class="number">1</span>]);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> b = <span class="built_in">parseInt</span>(arr[<span class="number">2</span>]);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="string">&quot;#&quot;</span>+(<span class="string">&quot;0&quot;</span> + r.toString(<span class="number">16</span>) ).slice (-<span class="number">2</span>)+(<span class="string">&quot;0&quot;</span> + g.toString(<span class="number">16</span>) ).slice (-<span class="number">2</span>)+(<span class="string">&quot;0&quot;</span> + b.toString(<span class="number">16</span>) ).slice (-<span class="number">2</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params">vars</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(vars.points.length&lt;vars.initParticles) <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;++i) spawnParticle(vars);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> p,d,t;</span></span><br><span class="line"><span class="javascript">    p = <span class="built_in">Math</span>.atan2(vars.camX, vars.camZ);</span></span><br><span class="line"><span class="javascript">    d = <span class="built_in">Math</span>.sqrt(vars.camX * vars.camX + vars.camZ * vars.camZ);</span></span><br><span class="line"><span class="javascript">    d -= <span class="built_in">Math</span>.sin(vars.frameNo / <span class="number">80</span>) / <span class="number">25</span>;</span></span><br><span class="line"><span class="javascript">    t = <span class="built_in">Math</span>.cos(vars.frameNo / <span class="number">300</span>) / <span class="number">165</span>;</span></span><br><span class="line"><span class="javascript">    vars.camX = <span class="built_in">Math</span>.sin(p + t) * d;</span></span><br><span class="line"><span class="javascript">    vars.camZ = <span class="built_in">Math</span>.cos(p + t) * d;</span></span><br><span class="line"><span class="javascript">    vars.camY = -<span class="built_in">Math</span>.sin(vars.frameNo / <span class="number">220</span>) * <span class="number">15</span>;</span></span><br><span class="line"><span class="javascript">    vars.yaw = <span class="built_in">Math</span>.PI + p + t;</span></span><br><span class="line"><span class="javascript">    vars.pitch = elevation(vars.camX, vars.camZ, vars.camY) - <span class="built_in">Math</span>.PI / <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> t;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;vars.points.length;++i)&#123;</span></span><br><span class="line">      x=vars.points[i].x;</span><br><span class="line">      y=vars.points[i].y;</span><br><span class="line">      z=vars.points[i].z;</span><br><span class="line"><span class="javascript">      d=<span class="built_in">Math</span>.sqrt(x*x+z*z)/<span class="number">1.0075</span>;</span></span><br><span class="line">      t=.1/(1+d*d/5);</span><br><span class="line"><span class="javascript">      p=<span class="built_in">Math</span>.atan2(x,z)+t;</span></span><br><span class="line"><span class="javascript">      vars.points[i].x=<span class="built_in">Math</span>.sin(p)*d;</span></span><br><span class="line"><span class="javascript">      vars.points[i].z=<span class="built_in">Math</span>.cos(p)*d;</span></span><br><span class="line"><span class="javascript">      vars.points[i].y+=vars.points[i].vy*t*((<span class="built_in">Math</span>.sqrt(vars.distributionRadius)-d)*<span class="number">2</span>);</span></span><br><span class="line">      if(vars.points[i].y&gt;vars.vortexHeight/2 || d&lt;.25)&#123;</span><br><span class="line">        vars.points.splice(i,1);</span><br><span class="line">        spawnParticle(vars);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">drawFloor</span>(<span class="params">vars</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> x,y,z,d,point,a;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = -<span class="number">25</span>; i &lt;= <span class="number">25</span>; i += <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">for</span> (<span class="keyword">var</span> j = -<span class="number">25</span>; j &lt;= <span class="number">25</span>; j += <span class="number">1</span>) &#123;</span></span><br><span class="line">        x = i*2;</span><br><span class="line">        z = j*2;</span><br><span class="line">        y = vars.floor;</span><br><span class="line"><span class="javascript">        d = <span class="built_in">Math</span>.sqrt(x * x + z * z);</span></span><br><span class="line">        point = project3D(x, y-d*d/85, z, vars);</span><br><span class="line">        if (point.d != -1) &#123;</span><br><span class="line">          size = 1 + 15000 / (1 + point.d);</span><br><span class="line"><span class="javascript">          a = <span class="number">0.15</span> - <span class="built_in">Math</span>.pow(d / <span class="number">50</span>, <span class="number">4</span>) * <span class="number">0.15</span>;</span></span><br><span class="line">          if (a &gt; 0) &#123;</span><br><span class="line"><span class="javascript">            vars.ctx.fillStyle = colorString(interpolateColors(rgbArray(d/<span class="number">26</span>-vars.frameNo/<span class="number">40</span>),[<span class="number">0</span>,<span class="number">128</span>,<span class="number">32</span>],<span class="number">.5</span>+<span class="built_in">Math</span>.sin(d/<span class="number">6</span>-vars.frameNo/<span class="number">8</span>)/<span class="number">2</span>));</span></span><br><span class="line">            vars.ctx.globalAlpha = a;</span><br><span class="line">            vars.ctx.fillRect(point.x-size/2,point.y-size/2,size,size);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    vars.ctx.fillStyle = <span class="string">&quot;#82f&quot;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = -<span class="number">25</span>; i &lt;= <span class="number">25</span>; i += <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">for</span> (<span class="keyword">var</span> j = -<span class="number">25</span>; j &lt;= <span class="number">25</span>; j += <span class="number">1</span>) &#123;</span></span><br><span class="line">        x = i*2;</span><br><span class="line">        z = j*2;</span><br><span class="line">        y = -vars.floor;</span><br><span class="line"><span class="javascript">        d = <span class="built_in">Math</span>.sqrt(x * x + z * z);</span></span><br><span class="line">        point = project3D(x, y+d*d/85, z, vars);</span><br><span class="line">        if (point.d != -1) &#123;</span><br><span class="line">          size = 1 + 15000 / (1 + point.d);</span><br><span class="line"><span class="javascript">          a = <span class="number">0.15</span> - <span class="built_in">Math</span>.pow(d / <span class="number">50</span>, <span class="number">4</span>) * <span class="number">0.15</span>;</span></span><br><span class="line">          if (a &gt; 0) &#123;</span><br><span class="line"><span class="javascript">            vars.ctx.fillStyle = colorString(interpolateColors(rgbArray(-d/<span class="number">26</span>-vars.frameNo/<span class="number">40</span>),[<span class="number">32</span>,<span class="number">0</span>,<span class="number">128</span>],<span class="number">.5</span>+<span class="built_in">Math</span>.sin(-d/<span class="number">6</span>-vars.frameNo/<span class="number">8</span>)/<span class="number">2</span>));</span></span><br><span class="line">            vars.ctx.globalAlpha = a;</span><br><span class="line">            vars.ctx.fillRect(point.x-size/2,point.y-size/2,size,size);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">sortFunction</span>(<span class="params">a,b</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> b.dist-a.dist;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params">vars</span>)</span>&#123;</span></span><br><span class="line">    vars.ctx.globalAlpha=.15;</span><br><span class="line"><span class="javascript">    vars.ctx.fillStyle=<span class="string">&quot;#000&quot;</span>;</span></span><br><span class="line">    vars.ctx.fillRect(0, 0, canvas.width, canvas.height);</span><br><span class="line">    drawFloor(vars);</span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> point,x,y,z,a;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;vars.points.length;++i)&#123;</span></span><br><span class="line">      x=vars.points[i].x;</span><br><span class="line">      y=vars.points[i].y;</span><br><span class="line">      z=vars.points[i].z;</span><br><span class="line">      point=project3D(x,y,z,vars);</span><br><span class="line">      if(point.d != -1)&#123;</span><br><span class="line">        vars.points[i].dist=point.d;</span><br><span class="line">        size=1+vars.points[i].radius/(1+point.d);</span><br><span class="line"><span class="javascript">        d=<span class="built_in">Math</span>.abs(vars.points[i].y);</span></span><br><span class="line"><span class="javascript">        a = <span class="number">.8</span> - <span class="built_in">Math</span>.pow(d / (vars.vortexHeight/<span class="number">2</span>), <span class="number">1000</span>) * <span class="number">.8</span>;</span></span><br><span class="line">        vars.ctx.globalAlpha=a&gt;=0&amp;&amp;a&lt;=1?a:0;</span><br><span class="line">        vars.ctx.fillStyle=rgb(vars.points[i].color);</span><br><span class="line">        if(point.x&gt;-1&amp;&amp;point.x&lt;vars.canvas.width&amp;&amp;point.y&gt;-1&amp;&amp;point.y&lt;vars.canvas.height)vars.ctx.fillRect(point.x-size/2,point.y-size/2,size,size);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    vars.points.sort(sortFunction);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">spawnParticle</span>(<span class="params">vars</span>)</span>&#123;</span></span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> p,ls;</span></span><br><span class="line">    pt=&#123;&#125;;</span><br><span class="line"><span class="javascript">    p=<span class="built_in">Math</span>.PI*<span class="number">2</span>*<span class="built_in">Math</span>.random();</span></span><br><span class="line"><span class="javascript">    ls=<span class="built_in">Math</span>.sqrt(<span class="built_in">Math</span>.random()*vars.distributionRadius);</span></span><br><span class="line"><span class="javascript">    pt.x=<span class="built_in">Math</span>.sin(p)*ls;</span></span><br><span class="line">    pt.y=-vars.vortexHeight/2;</span><br><span class="line"><span class="javascript">    pt.vy=vars.initV/<span class="number">20</span>+<span class="built_in">Math</span>.random()*vars.initV;</span></span><br><span class="line"><span class="javascript">    pt.z=<span class="built_in">Math</span>.cos(p)*ls;</span></span><br><span class="line"><span class="javascript">    pt.radius=<span class="number">200</span>+<span class="number">800</span>*<span class="built_in">Math</span>.random();</span></span><br><span class="line">    pt.color=pt.radius/1000+vars.frameNo/250;</span><br><span class="line">    vars.points.push(pt);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">frame</span>(<span class="params">vars</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(vars === <span class="literal">undefined</span>)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> vars=&#123;&#125;;</span></span><br><span class="line"><span class="javascript">      vars.canvas = <span class="built_in">document</span>.querySelector(<span class="string">&quot;canvas&quot;</span>);</span></span><br><span class="line"><span class="javascript">      vars.ctx = vars.canvas.getContext(<span class="string">&quot;2d&quot;</span>);</span></span><br><span class="line"><span class="javascript">      vars.canvas.width = <span class="built_in">document</span>.body.clientWidth;</span></span><br><span class="line"><span class="javascript">      vars.canvas.height = <span class="built_in">document</span>.body.clientHeight;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">window</span>.addEventListener(<span class="string">&quot;resize&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        vars.canvas.width = <span class="built_in">document</span>.body.clientWidth;</span></span><br><span class="line"><span class="javascript">        vars.canvas.height = <span class="built_in">document</span>.body.clientHeight;</span></span><br><span class="line">        vars.cx=vars.canvas.width/2;</span><br><span class="line">        vars.cy=vars.canvas.height/2;</span><br><span class="line"><span class="javascript">      &#125;, <span class="literal">true</span>);</span></span><br><span class="line">      vars.frameNo=0;</span><br><span class="line">      </span><br><span class="line">      vars.camX = 0;</span><br><span class="line">      vars.camY = 0;</span><br><span class="line">      vars.camZ = -14;</span><br><span class="line"><span class="javascript">      vars.pitch = elevation(vars.camX, vars.camZ, vars.camY) - <span class="built_in">Math</span>.PI / <span class="number">2</span>;</span></span><br><span class="line">      vars.yaw = 0;</span><br><span class="line">      vars.cx=vars.canvas.width/2;</span><br><span class="line">      vars.cy=vars.canvas.height/2;</span><br><span class="line">      vars.bounding=10;</span><br><span class="line">      vars.scale=500;</span><br><span class="line">      vars.floor=26.5;</span><br><span class="line">      </span><br><span class="line">      vars.points=[];</span><br><span class="line">      vars.initParticles=700;</span><br><span class="line">      vars.initV=.01;</span><br><span class="line">      vars.distributionRadius=800;</span><br><span class="line">      vars.vortexHeight=25;</span><br><span class="line">    &#125;</span><br><span class="line">    vars.frameNo++;</span><br><span class="line"><span class="javascript">    requestAnimationFrame(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">      frame(vars);</span><br><span class="line">    &#125;);</span><br><span class="line">    process(vars);</span><br><span class="line">    draw(vars);</span><br><span class="line">  &#125;</span><br><span class="line">  frame();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>使用方式</strong></p><p>复制以上代码到txt文件，文件名随意，后缀改为html，双击打开。</p><p><strong>转载于:<a href="https://my.oschina.net/lanyu96/blog/2251596">https://my.oschina.net/lanyu96/blog/2251596</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> Candy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html5&amp;canvas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang从入门到放弃00</title>
      <link href="2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/"/>
      <url>2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/</url>
      
        <content type="html"><![CDATA[<h2 id="开端"><a href="#开端" class="headerlink" title="开端"></a>开端</h2><p>Go语言的特点：</p><ol><li>高并发，跨平台。</li><li>有Google作为后盾。</li><li>开发了docker、k8s。</li><li>B站后台使用Go开发，知乎后台由Python转Go，有一些PHP开发的后台使用Go重构。</li></ol><span id="more"></span><h2 id="一、环境配置"><a href="#一、环境配置" class="headerlink" title="一、环境配置"></a>一、环境配置</h2><ol><li><p>Go语言的官网：</p><p><a href="https://golang.org/">https://golang.org/</a></p><p>可能因GFW无法访问，可访问以下Go语言中文网：</p><p><a href="https://golang.google.cn/">https://golang.google.cn/</a></p></li><li><p>下载SDK（包含Go语言的标准库，编译运行工具等）</p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217195248923.png" alt="image-20210217195248923" style="zoom:50%;"><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217195746981.png" alt="image-20210217195746981" style="zoom:50%;"></li></ol><ol start="3"><li><p>安装SDK</p><p>下一步安装即可，最好不要安装到C盘，比如安装到E盘</p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217200354293.png" alt="image-20210217200354293" style="zoom:50%;"></li></ol><p>4.配置环境变量（使得Go的指令可在任意路径下使用）</p><p>此电脑-&gt;属性-&gt;高级系统设置</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217200917131.png" alt="image-20210217200917131"></p><p>高级-&gt;环境变量</p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217201041425.png" alt="image-20210217201041425" style="zoom:50%;"><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217201640006.png" alt="image-20210217201640006" style="zoom:50%;"><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217202405329.png" alt="image-20210217202405329" style="zoom:50%;"><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217204802521.png" alt="image-20210217204802521" style="zoom:50%;"><h2 id="二、下载开发工具"><a href="#二、下载开发工具" class="headerlink" title="二、下载开发工具"></a>二、下载开发工具</h2><ol><li><p>vsCode（微软的，免费）</p><p>进入官网下载安装即可<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p></li><li><p>GoLand（推荐，大名鼎鼎的JetBrains公司产品）</p><p>进入官网下载安装即可<a href="https://www.jetbrains.com/go/">https://www.jetbrains.com/go/</a></p></li></ol><h2 id="三、开始HelloWorld（使用Goland开发工具）"><a href="#三、开始HelloWorld（使用Goland开发工具）" class="headerlink" title="三、开始HelloWorld（使用Goland开发工具）"></a>三、开始HelloWorld（使用Goland开发工具）</h2><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217210433405.png" alt="image-20210217210433405" style="zoom:50%;"><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217210705718.png" alt="image-20210217210705718" style="zoom:50%;"><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217211205831.png" alt="image-20210217211205831" style="zoom:50%;"><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217211415395.png" alt="image-20210217211415395"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217211651855.png" alt="image-20210217211651855"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217211812029.png" alt="image-20210217211812029"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217212203814.png" alt="image-20210217212203814"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217212242267.png" alt="image-20210217212242267"></p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/17/Golang%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%8300/image-20210217212337859.png" alt="image-20210217212337859"></p>]]></content>
      
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>旅店老板</title>
      <link href="2021/02/16/%E6%97%85%E5%BA%97%E8%80%81%E6%9D%BF/"/>
      <url>2021/02/16/%E6%97%85%E5%BA%97%E8%80%81%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="契机"><a href="#契机" class="headerlink" title="契机"></a>契机</h1><p>只有未成年人才喜欢过年！</p><h1 id="萌芽"><a href="#萌芽" class="headerlink" title="萌芽"></a>萌芽</h1><p>想再听一遍有声小说《地狱公寓》、《无忧旅馆》，在某听书App上搜索，结果发现之前一直免费的作品已开始收费，仍不放弃，试图在浏览器上寻找希望，结果看到某个贴吧有人说同类作品《<a href="https://www.putaoys.com/html/64537.html">轮到你了</a>》<span id="more"></span>不错，然后就开始了一发不可收拾的追剧之路，不对，对于早已完结的作品应该叫补剧。不得不说，剧情不错，配乐还行，直接两个晚上就看完了20集，而且……这之后，我发现《<a href="https://www.putaoys.com/html/64537.html">轮到你了</a>》剧中原班人大多又出演了另一部剧《<a href="https://www.putaoys.com/html/73779.html#juqing">灰姑娘药剂师</a>》感觉不像传说中的浮夸。</p><p><img src= "/img/girl-female.gif" data-lazy-src="/2021/02/16/%E6%97%85%E5%BA%97%E8%80%81%E6%9D%BF/haha.gif" alt="haha"></p><h1 id="凋零"><a href="#凋零" class="headerlink" title="凋零"></a>凋零</h1><p>一星期的春节长假结束了，奔去陌生的城市，继续开始没心没肺地上班…</p>]]></content>
      
      
      <categories>
          
          <category> 影视 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 悬疑推理 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
